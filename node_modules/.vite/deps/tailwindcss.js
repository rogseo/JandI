import {
  __privateAdd,
  __privateMethod,
  __publicField
} from "./chunk-I2LLTMMF.js";

// node_modules/tailwindcss/dist/chunk-AZANAYY2.mjs
var l = { inherit: "inherit", current: "currentColor", transparent: "transparent", black: "#000", white: "#fff", slate: { 50: "oklch(0.984 0.003 247.858)", 100: "oklch(0.968 0.007 247.896)", 200: "oklch(0.929 0.013 255.508)", 300: "oklch(0.869 0.022 252.894)", 400: "oklch(0.704 0.04 256.788)", 500: "oklch(0.554 0.046 257.417)", 600: "oklch(0.446 0.043 257.281)", 700: "oklch(0.372 0.044 257.287)", 800: "oklch(0.279 0.041 260.031)", 900: "oklch(0.208 0.042 265.755)", 950: "oklch(0.129 0.042 264.695)" }, gray: { 50: "oklch(0.985 0.002 247.839)", 100: "oklch(0.967 0.003 264.542)", 200: "oklch(0.928 0.006 264.531)", 300: "oklch(0.872 0.01 258.338)", 400: "oklch(0.707 0.022 261.325)", 500: "oklch(0.551 0.027 264.364)", 600: "oklch(0.446 0.03 256.802)", 700: "oklch(0.373 0.034 259.733)", 800: "oklch(0.278 0.033 256.848)", 900: "oklch(0.21 0.034 264.665)", 950: "oklch(0.13 0.028 261.692)" }, zinc: { 50: "oklch(0.985 0 0)", 100: "oklch(0.967 0.001 286.375)", 200: "oklch(0.92 0.004 286.32)", 300: "oklch(0.871 0.006 286.286)", 400: "oklch(0.705 0.015 286.067)", 500: "oklch(0.552 0.016 285.938)", 600: "oklch(0.442 0.017 285.786)", 700: "oklch(0.37 0.013 285.805)", 800: "oklch(0.274 0.006 286.033)", 900: "oklch(0.21 0.006 285.885)", 950: "oklch(0.141 0.005 285.823)" }, neutral: { 50: "oklch(0.985 0 0)", 100: "oklch(0.97 0 0)", 200: "oklch(0.922 0 0)", 300: "oklch(0.87 0 0)", 400: "oklch(0.708 0 0)", 500: "oklch(0.556 0 0)", 600: "oklch(0.439 0 0)", 700: "oklch(0.371 0 0)", 800: "oklch(0.269 0 0)", 900: "oklch(0.205 0 0)", 950: "oklch(0.145 0 0)" }, stone: { 50: "oklch(0.985 0.001 106.423)", 100: "oklch(0.97 0.001 106.424)", 200: "oklch(0.923 0.003 48.717)", 300: "oklch(0.869 0.005 56.366)", 400: "oklch(0.709 0.01 56.259)", 500: "oklch(0.553 0.013 58.071)", 600: "oklch(0.444 0.011 73.639)", 700: "oklch(0.374 0.01 67.558)", 800: "oklch(0.268 0.007 34.298)", 900: "oklch(0.216 0.006 56.043)", 950: "oklch(0.147 0.004 49.25)" }, red: { 50: "oklch(0.971 0.013 17.38)", 100: "oklch(0.936 0.032 17.717)", 200: "oklch(0.885 0.062 18.334)", 300: "oklch(0.808 0.114 19.571)", 400: "oklch(0.704 0.191 22.216)", 500: "oklch(0.637 0.237 25.331)", 600: "oklch(0.577 0.245 27.325)", 700: "oklch(0.505 0.213 27.518)", 800: "oklch(0.444 0.177 26.899)", 900: "oklch(0.396 0.141 25.723)", 950: "oklch(0.258 0.092 26.042)" }, orange: { 50: "oklch(0.98 0.016 73.684)", 100: "oklch(0.954 0.038 75.164)", 200: "oklch(0.901 0.076 70.697)", 300: "oklch(0.837 0.128 66.29)", 400: "oklch(0.75 0.183 55.934)", 500: "oklch(0.705 0.213 47.604)", 600: "oklch(0.646 0.222 41.116)", 700: "oklch(0.553 0.195 38.402)", 800: "oklch(0.47 0.157 37.304)", 900: "oklch(0.408 0.123 38.172)", 950: "oklch(0.266 0.079 36.259)" }, amber: { 50: "oklch(0.987 0.022 95.277)", 100: "oklch(0.962 0.059 95.617)", 200: "oklch(0.924 0.12 95.746)", 300: "oklch(0.879 0.169 91.605)", 400: "oklch(0.828 0.189 84.429)", 500: "oklch(0.769 0.188 70.08)", 600: "oklch(0.666 0.179 58.318)", 700: "oklch(0.555 0.163 48.998)", 800: "oklch(0.473 0.137 46.201)", 900: "oklch(0.414 0.112 45.904)", 950: "oklch(0.279 0.077 45.635)" }, yellow: { 50: "oklch(0.987 0.026 102.212)", 100: "oklch(0.973 0.071 103.193)", 200: "oklch(0.945 0.129 101.54)", 300: "oklch(0.905 0.182 98.111)", 400: "oklch(0.852 0.199 91.936)", 500: "oklch(0.795 0.184 86.047)", 600: "oklch(0.681 0.162 75.834)", 700: "oklch(0.554 0.135 66.442)", 800: "oklch(0.476 0.114 61.907)", 900: "oklch(0.421 0.095 57.708)", 950: "oklch(0.286 0.066 53.813)" }, lime: { 50: "oklch(0.986 0.031 120.757)", 100: "oklch(0.967 0.067 122.328)", 200: "oklch(0.938 0.127 124.321)", 300: "oklch(0.897 0.196 126.665)", 400: "oklch(0.841 0.238 128.85)", 500: "oklch(0.768 0.233 130.85)", 600: "oklch(0.648 0.2 131.684)", 700: "oklch(0.532 0.157 131.589)", 800: "oklch(0.453 0.124 130.933)", 900: "oklch(0.405 0.101 131.063)", 950: "oklch(0.274 0.072 132.109)" }, green: { 50: "oklch(0.982 0.018 155.826)", 100: "oklch(0.962 0.044 156.743)", 200: "oklch(0.925 0.084 155.995)", 300: "oklch(0.871 0.15 154.449)", 400: "oklch(0.792 0.209 151.711)", 500: "oklch(0.723 0.219 149.579)", 600: "oklch(0.627 0.194 149.214)", 700: "oklch(0.527 0.154 150.069)", 800: "oklch(0.448 0.119 151.328)", 900: "oklch(0.393 0.095 152.535)", 950: "oklch(0.266 0.065 152.934)" }, emerald: { 50: "oklch(0.979 0.021 166.113)", 100: "oklch(0.95 0.052 163.051)", 200: "oklch(0.905 0.093 164.15)", 300: "oklch(0.845 0.143 164.978)", 400: "oklch(0.765 0.177 163.223)", 500: "oklch(0.696 0.17 162.48)", 600: "oklch(0.596 0.145 163.225)", 700: "oklch(0.508 0.118 165.612)", 800: "oklch(0.432 0.095 166.913)", 900: "oklch(0.378 0.077 168.94)", 950: "oklch(0.262 0.051 172.552)" }, teal: { 50: "oklch(0.984 0.014 180.72)", 100: "oklch(0.953 0.051 180.801)", 200: "oklch(0.91 0.096 180.426)", 300: "oklch(0.855 0.138 181.071)", 400: "oklch(0.777 0.152 181.912)", 500: "oklch(0.704 0.14 182.503)", 600: "oklch(0.6 0.118 184.704)", 700: "oklch(0.511 0.096 186.391)", 800: "oklch(0.437 0.078 188.216)", 900: "oklch(0.386 0.063 188.416)", 950: "oklch(0.277 0.046 192.524)" }, cyan: { 50: "oklch(0.984 0.019 200.873)", 100: "oklch(0.956 0.045 203.388)", 200: "oklch(0.917 0.08 205.041)", 300: "oklch(0.865 0.127 207.078)", 400: "oklch(0.789 0.154 211.53)", 500: "oklch(0.715 0.143 215.221)", 600: "oklch(0.609 0.126 221.723)", 700: "oklch(0.52 0.105 223.128)", 800: "oklch(0.45 0.085 224.283)", 900: "oklch(0.398 0.07 227.392)", 950: "oklch(0.302 0.056 229.695)" }, sky: { 50: "oklch(0.977 0.013 236.62)", 100: "oklch(0.951 0.026 236.824)", 200: "oklch(0.901 0.058 230.902)", 300: "oklch(0.828 0.111 230.318)", 400: "oklch(0.746 0.16 232.661)", 500: "oklch(0.685 0.169 237.323)", 600: "oklch(0.588 0.158 241.966)", 700: "oklch(0.5 0.134 242.749)", 800: "oklch(0.443 0.11 240.79)", 900: "oklch(0.391 0.09 240.876)", 950: "oklch(0.293 0.066 243.157)" }, blue: { 50: "oklch(0.97 0.014 254.604)", 100: "oklch(0.932 0.032 255.585)", 200: "oklch(0.882 0.059 254.128)", 300: "oklch(0.809 0.105 251.813)", 400: "oklch(0.707 0.165 254.624)", 500: "oklch(0.623 0.214 259.815)", 600: "oklch(0.546 0.245 262.881)", 700: "oklch(0.488 0.243 264.376)", 800: "oklch(0.424 0.199 265.638)", 900: "oklch(0.379 0.146 265.522)", 950: "oklch(0.282 0.091 267.935)" }, indigo: { 50: "oklch(0.962 0.018 272.314)", 100: "oklch(0.93 0.034 272.788)", 200: "oklch(0.87 0.065 274.039)", 300: "oklch(0.785 0.115 274.713)", 400: "oklch(0.673 0.182 276.935)", 500: "oklch(0.585 0.233 277.117)", 600: "oklch(0.511 0.262 276.966)", 700: "oklch(0.457 0.24 277.023)", 800: "oklch(0.398 0.195 277.366)", 900: "oklch(0.359 0.144 278.697)", 950: "oklch(0.257 0.09 281.288)" }, violet: { 50: "oklch(0.969 0.016 293.756)", 100: "oklch(0.943 0.029 294.588)", 200: "oklch(0.894 0.057 293.283)", 300: "oklch(0.811 0.111 293.571)", 400: "oklch(0.702 0.183 293.541)", 500: "oklch(0.606 0.25 292.717)", 600: "oklch(0.541 0.281 293.009)", 700: "oklch(0.491 0.27 292.581)", 800: "oklch(0.432 0.232 292.759)", 900: "oklch(0.38 0.189 293.745)", 950: "oklch(0.283 0.141 291.089)" }, purple: { 50: "oklch(0.977 0.014 308.299)", 100: "oklch(0.946 0.033 307.174)", 200: "oklch(0.902 0.063 306.703)", 300: "oklch(0.827 0.119 306.383)", 400: "oklch(0.714 0.203 305.504)", 500: "oklch(0.627 0.265 303.9)", 600: "oklch(0.558 0.288 302.321)", 700: "oklch(0.496 0.265 301.924)", 800: "oklch(0.438 0.218 303.724)", 900: "oklch(0.381 0.176 304.987)", 950: "oklch(0.291 0.149 302.717)" }, fuchsia: { 50: "oklch(0.977 0.017 320.058)", 100: "oklch(0.952 0.037 318.852)", 200: "oklch(0.903 0.076 319.62)", 300: "oklch(0.833 0.145 321.434)", 400: "oklch(0.74 0.238 322.16)", 500: "oklch(0.667 0.295 322.15)", 600: "oklch(0.591 0.293 322.896)", 700: "oklch(0.518 0.253 323.949)", 800: "oklch(0.452 0.211 324.591)", 900: "oklch(0.401 0.17 325.612)", 950: "oklch(0.293 0.136 325.661)" }, pink: { 50: "oklch(0.971 0.014 343.198)", 100: "oklch(0.948 0.028 342.258)", 200: "oklch(0.899 0.061 343.231)", 300: "oklch(0.823 0.12 346.018)", 400: "oklch(0.718 0.202 349.761)", 500: "oklch(0.656 0.241 354.308)", 600: "oklch(0.592 0.249 0.584)", 700: "oklch(0.525 0.223 3.958)", 800: "oklch(0.459 0.187 3.815)", 900: "oklch(0.408 0.153 2.432)", 950: "oklch(0.284 0.109 3.907)" }, rose: { 50: "oklch(0.969 0.015 12.422)", 100: "oklch(0.941 0.03 12.58)", 200: "oklch(0.892 0.058 10.001)", 300: "oklch(0.81 0.117 11.638)", 400: "oklch(0.712 0.194 13.428)", 500: "oklch(0.645 0.246 16.439)", 600: "oklch(0.586 0.253 17.585)", 700: "oklch(0.514 0.222 16.935)", 800: "oklch(0.455 0.188 13.697)", 900: "oklch(0.41 0.159 10.272)", 950: "oklch(0.271 0.105 12.094)" } };

// node_modules/tailwindcss/dist/chunk-V2K3XTS4.mjs
var U = /* @__PURE__ */ new Set(["black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "green", "greenyellow", "grey", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen", "transparent", "currentcolor", "canvas", "canvastext", "linktext", "visitedtext", "activetext", "buttonface", "buttontext", "buttonborder", "field", "fieldtext", "highlight", "highlighttext", "selecteditem", "selecteditemtext", "mark", "marktext", "graytext", "accentcolor", "accentcolortext"]);
var O = /^(rgba?|hsla?|hwb|color|(ok)?(lab|lch)|light-dark|color-mix)\(/i;
function S(e) {
  return e.charCodeAt(0) === 35 || O.test(e) || U.has(e.toLowerCase());
}
var k = ["calc", "min", "max", "clamp", "mod", "rem", "sin", "cos", "tan", "asin", "acos", "atan", "atan2", "pow", "sqrt", "hypot", "log", "exp", "round"];
var h = ["anchor-size"];
var A = new RegExp(`(${h.join("|")})\\(`, "g");
function b(e) {
  return e.indexOf("(") !== -1 && k.some((r) => e.includes(`${r}(`));
}
function ie(e) {
  if (!k.some((n) => e.includes(n))) return e;
  let r = false;
  h.some((n) => e.includes(n)) && (A.lastIndex = 0, e = e.replace(A, (n, o) => (r = true, `$${h.indexOf(o)}$(`)));
  let t = "", i = [];
  for (let n = 0; n < e.length; n++) {
    let o = e[n];
    if (o === "(") {
      t += o;
      let m2 = n;
      for (let c = n - 1; c >= 0; c--) {
        let x2 = e.charCodeAt(c);
        if (x2 >= 48 && x2 <= 57) m2 = c;
        else if (x2 >= 97 && x2 <= 122) m2 = c;
        else break;
      }
      let a = e.slice(m2, n);
      if (k.includes(a)) {
        i.unshift(true);
        continue;
      } else if (i[0] && a === "") {
        i.unshift(true);
        continue;
      }
      i.unshift(false);
      continue;
    } else if (o === ")") t += o, i.shift();
    else if (o === "," && i[0]) {
      t += ", ";
      continue;
    } else {
      if (o === " " && i[0] && t[t.length - 1] === " ") continue;
      if ((o === "+" || o === "*" || o === "/" || o === "-") && i[0]) {
        let m2 = t.trimEnd(), a = m2[m2.length - 1];
        if (a === "+" || a === "*" || a === "/" || a === "-") {
          t += o;
          continue;
        } else if (a === "(" || a === ",") {
          t += o;
          continue;
        } else e[n - 1] === " " ? t += `${o} ` : t += ` ${o} `;
      } else if (i[0] && e.startsWith("to-zero", n)) {
        let m2 = n;
        n += 7, t += e.slice(m2, n + 1);
      } else t += o;
    }
  }
  return r ? t.replace(/\$(\d+)\$/g, (n, o) => h[o] ?? n) : t;
}
var y = new Uint8Array(256);
function u(e, r) {
  let t = 0, i = [], n = 0, o = e.length, m2 = r.charCodeAt(0);
  for (let a = 0; a < o; a++) {
    let c = e.charCodeAt(a);
    if (t === 0 && c === m2) {
      i.push(e.slice(n, a)), n = a + 1;
      continue;
    }
    switch (c) {
      case 92:
        a += 1;
        break;
      case 39:
      case 34:
        for (; ++a < o; ) {
          let x2 = e.charCodeAt(a);
          if (x2 === 92) {
            a += 1;
            continue;
          }
          if (x2 === c) break;
        }
        break;
      case 40:
        y[t] = 41, t++;
        break;
      case 91:
        y[t] = 93, t++;
        break;
      case 123:
        y[t] = 125, t++;
        break;
      case 93:
      case 125:
      case 41:
        t > 0 && c === y[t - 1] && t--;
        break;
    }
  }
  return i.push(e.slice(n)), i;
}
var R = { color: S, length: C, percentage: E, ratio: j, number: M, integer: p, url: z, position: Q, "bg-size": X, "line-width": D, image: $, "family-name": P, "generic-name": H, "absolute-size": q, "relative-size": B, angle: ee, vector: re };
function pe(e, r) {
  var _a2;
  if (e.startsWith("var(")) return null;
  for (let t of r) if ((_a2 = R[t]) == null ? void 0 : _a2.call(R, e)) return t;
  return null;
}
var _ = /^url\(.*\)$/;
function z(e) {
  return _.test(e);
}
function D(e) {
  return e === "thin" || e === "medium" || e === "thick";
}
var I = /^(?:element|image|cross-fade|image-set)\(/;
var F = /^(repeating-)?(conic|linear|radial)-gradient\(/;
function $(e) {
  let r = 0;
  for (let t of u(e, ",")) if (!t.startsWith("var(")) {
    if (z(t)) {
      r += 1;
      continue;
    }
    if (F.test(t)) {
      r += 1;
      continue;
    }
    if (I.test(t)) {
      r += 1;
      continue;
    }
    return false;
  }
  return r > 0;
}
function H(e) {
  return e === "serif" || e === "sans-serif" || e === "monospace" || e === "cursive" || e === "fantasy" || e === "system-ui" || e === "ui-serif" || e === "ui-sans-serif" || e === "ui-monospace" || e === "ui-rounded" || e === "math" || e === "emoji" || e === "fangsong";
}
function P(e) {
  let r = 0;
  for (let t of u(e, ",")) {
    let i = t.charCodeAt(0);
    if (i >= 48 && i <= 57) return false;
    t.startsWith("var(") || (r += 1);
  }
  return r > 0;
}
function q(e) {
  return e === "xx-small" || e === "x-small" || e === "small" || e === "medium" || e === "large" || e === "x-large" || e === "xx-large" || e === "xxx-large";
}
function B(e) {
  return e === "larger" || e === "smaller";
}
var g = /[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?/;
var W = new RegExp(`^${g.source}$`);
function M(e) {
  return W.test(e) || b(e);
}
var G = new RegExp(`^${g.source}%$`);
function E(e) {
  return G.test(e) || b(e);
}
var V = new RegExp(`^${g.source}s*/s*${g.source}$`);
function j(e) {
  return V.test(e) || b(e);
}
var K = ["cm", "mm", "Q", "in", "pc", "pt", "px", "em", "ex", "ch", "rem", "lh", "rlh", "vw", "vh", "vmin", "vmax", "vb", "vi", "svw", "svh", "lvw", "lvh", "dvw", "dvh", "cqw", "cqh", "cqi", "cqb", "cqmin", "cqmax"];
var Y = new RegExp(`^${g.source}(${K.join("|")})$`);
function C(e) {
  return Y.test(e) || b(e);
}
function Q(e) {
  let r = 0;
  for (let t of u(e, " ")) {
    if (t === "center" || t === "top" || t === "right" || t === "bottom" || t === "left") {
      r += 1;
      continue;
    }
    if (!t.startsWith("var(")) {
      if (C(t) || E(t)) {
        r += 1;
        continue;
      }
      return false;
    }
  }
  return r > 0;
}
function X(e) {
  let r = 0;
  for (let t of u(e, ",")) {
    if (t === "cover" || t === "contain") {
      r += 1;
      continue;
    }
    let i = u(t, " ");
    if (i.length !== 1 && i.length !== 2) return false;
    if (i.every((n) => n === "auto" || C(n) || E(n))) {
      r += 1;
      continue;
    }
  }
  return r > 0;
}
var J = ["deg", "rad", "grad", "turn"];
var Z = new RegExp(`^${g.source}(${J.join("|")})$`);
function ee(e) {
  return Z.test(e);
}
var te = new RegExp(`^${g.source} +${g.source} +${g.source}$`);
function re(e) {
  return te.test(e);
}
function p(e) {
  let r = Number(e);
  return Number.isInteger(r) && r >= 0 && String(r) === String(e);
}
function ge(e) {
  let r = Number(e);
  return Number.isInteger(r) && r > 0 && String(r) === String(e);
}
function ue(e) {
  return N(e, 0.25);
}
function de(e) {
  return N(e, 0.25);
}
function N(e, r) {
  let t = Number(e);
  return t >= 0 && t % r === 0 && String(t) === String(e);
}
function f(e) {
  return { __BARE_VALUE__: e };
}
var l2 = f((e) => {
  if (p(e.value)) return e.value;
});
var s = f((e) => {
  if (p(e.value)) return `${e.value}%`;
});
var d = f((e) => {
  if (p(e.value)) return `${e.value}px`;
});
var T = f((e) => {
  if (p(e.value)) return `${e.value}ms`;
});
var w = f((e) => {
  if (p(e.value)) return `${e.value}deg`;
});
var ne = f((e) => {
  if (e.fraction === null) return;
  let [r, t] = u(e.fraction, "/");
  if (!(!p(r) || !p(t))) return e.fraction;
});
var L = f((e) => {
  if (p(Number(e.value))) return `repeat(${e.value}, minmax(0, 1fr))`;
});
var ye = { accentColor: ({ theme: e }) => e("colors"), animation: { none: "none", spin: "spin 1s linear infinite", ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite", pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite", bounce: "bounce 1s infinite" }, aria: { busy: 'busy="true"', checked: 'checked="true"', disabled: 'disabled="true"', expanded: 'expanded="true"', hidden: 'hidden="true"', pressed: 'pressed="true"', readonly: 'readonly="true"', required: 'required="true"', selected: 'selected="true"' }, aspectRatio: { auto: "auto", square: "1 / 1", video: "16 / 9", ...ne }, backdropBlur: ({ theme: e }) => e("blur"), backdropBrightness: ({ theme: e }) => ({ ...e("brightness"), ...s }), backdropContrast: ({ theme: e }) => ({ ...e("contrast"), ...s }), backdropGrayscale: ({ theme: e }) => ({ ...e("grayscale"), ...s }), backdropHueRotate: ({ theme: e }) => ({ ...e("hueRotate"), ...w }), backdropInvert: ({ theme: e }) => ({ ...e("invert"), ...s }), backdropOpacity: ({ theme: e }) => ({ ...e("opacity"), ...s }), backdropSaturate: ({ theme: e }) => ({ ...e("saturate"), ...s }), backdropSepia: ({ theme: e }) => ({ ...e("sepia"), ...s }), backgroundColor: ({ theme: e }) => e("colors"), backgroundImage: { none: "none", "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))", "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))", "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))", "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))", "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))", "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))", "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))", "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))" }, backgroundOpacity: ({ theme: e }) => e("opacity"), backgroundPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, backgroundSize: { auto: "auto", cover: "cover", contain: "contain" }, blur: { 0: "0", none: "", sm: "4px", DEFAULT: "8px", md: "12px", lg: "16px", xl: "24px", "2xl": "40px", "3xl": "64px" }, borderColor: ({ theme: e }) => ({ DEFAULT: "currentColor", ...e("colors") }), borderOpacity: ({ theme: e }) => e("opacity"), borderRadius: { none: "0px", sm: "0.125rem", DEFAULT: "0.25rem", md: "0.375rem", lg: "0.5rem", xl: "0.75rem", "2xl": "1rem", "3xl": "1.5rem", full: "9999px" }, borderSpacing: ({ theme: e }) => e("spacing"), borderWidth: { DEFAULT: "1px", 0: "0px", 2: "2px", 4: "4px", 8: "8px", ...d }, boxShadow: { sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)", DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)", md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)", lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)", xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)", "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)", inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)", none: "none" }, boxShadowColor: ({ theme: e }) => e("colors"), brightness: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", 200: "2", ...s }, caretColor: ({ theme: e }) => e("colors"), colors: () => ({ ...l }), columns: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", "3xs": "16rem", "2xs": "18rem", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", ...l2 }, container: {}, content: { none: "none" }, contrast: { 0: "0", 50: ".5", 75: ".75", 100: "1", 125: "1.25", 150: "1.5", 200: "2", ...s }, cursor: { auto: "auto", default: "default", pointer: "pointer", wait: "wait", text: "text", move: "move", help: "help", "not-allowed": "not-allowed", none: "none", "context-menu": "context-menu", progress: "progress", cell: "cell", crosshair: "crosshair", "vertical-text": "vertical-text", alias: "alias", copy: "copy", "no-drop": "no-drop", grab: "grab", grabbing: "grabbing", "all-scroll": "all-scroll", "col-resize": "col-resize", "row-resize": "row-resize", "n-resize": "n-resize", "e-resize": "e-resize", "s-resize": "s-resize", "w-resize": "w-resize", "ne-resize": "ne-resize", "nw-resize": "nw-resize", "se-resize": "se-resize", "sw-resize": "sw-resize", "ew-resize": "ew-resize", "ns-resize": "ns-resize", "nesw-resize": "nesw-resize", "nwse-resize": "nwse-resize", "zoom-in": "zoom-in", "zoom-out": "zoom-out" }, divideColor: ({ theme: e }) => e("borderColor"), divideOpacity: ({ theme: e }) => e("borderOpacity"), divideWidth: ({ theme: e }) => ({ ...e("borderWidth"), ...d }), dropShadow: { sm: "0 1px 1px rgb(0 0 0 / 0.05)", DEFAULT: ["0 1px 2px rgb(0 0 0 / 0.1)", "0 1px 1px rgb(0 0 0 / 0.06)"], md: ["0 4px 3px rgb(0 0 0 / 0.07)", "0 2px 2px rgb(0 0 0 / 0.06)"], lg: ["0 10px 8px rgb(0 0 0 / 0.04)", "0 4px 3px rgb(0 0 0 / 0.1)"], xl: ["0 20px 13px rgb(0 0 0 / 0.03)", "0 8px 5px rgb(0 0 0 / 0.08)"], "2xl": "0 25px 25px rgb(0 0 0 / 0.15)", none: "0 0 #0000" }, fill: ({ theme: e }) => e("colors"), flex: { 1: "1 1 0%", auto: "1 1 auto", initial: "0 1 auto", none: "none" }, flexBasis: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", ...e("spacing") }), flexGrow: { 0: "0", DEFAULT: "1", ...l2 }, flexShrink: { 0: "0", DEFAULT: "1", ...l2 }, fontFamily: { sans: ["ui-sans-serif", "system-ui", "sans-serif", '"Apple Color Emoji"', '"Segoe UI Emoji"', '"Segoe UI Symbol"', '"Noto Color Emoji"'], serif: ["ui-serif", "Georgia", "Cambria", '"Times New Roman"', "Times", "serif"], mono: ["ui-monospace", "SFMono-Regular", "Menlo", "Monaco", "Consolas", '"Liberation Mono"', '"Courier New"', "monospace"] }, fontSize: { xs: ["0.75rem", { lineHeight: "1rem" }], sm: ["0.875rem", { lineHeight: "1.25rem" }], base: ["1rem", { lineHeight: "1.5rem" }], lg: ["1.125rem", { lineHeight: "1.75rem" }], xl: ["1.25rem", { lineHeight: "1.75rem" }], "2xl": ["1.5rem", { lineHeight: "2rem" }], "3xl": ["1.875rem", { lineHeight: "2.25rem" }], "4xl": ["2.25rem", { lineHeight: "2.5rem" }], "5xl": ["3rem", { lineHeight: "1" }], "6xl": ["3.75rem", { lineHeight: "1" }], "7xl": ["4.5rem", { lineHeight: "1" }], "8xl": ["6rem", { lineHeight: "1" }], "9xl": ["8rem", { lineHeight: "1" }] }, fontWeight: { thin: "100", extralight: "200", light: "300", normal: "400", medium: "500", semibold: "600", bold: "700", extrabold: "800", black: "900" }, gap: ({ theme: e }) => e("spacing"), gradientColorStops: ({ theme: e }) => e("colors"), gradientColorStopPositions: { "0%": "0%", "5%": "5%", "10%": "10%", "15%": "15%", "20%": "20%", "25%": "25%", "30%": "30%", "35%": "35%", "40%": "40%", "45%": "45%", "50%": "50%", "55%": "55%", "60%": "60%", "65%": "65%", "70%": "70%", "75%": "75%", "80%": "80%", "85%": "85%", "90%": "90%", "95%": "95%", "100%": "100%", ...s }, grayscale: { 0: "0", DEFAULT: "100%", ...s }, gridAutoColumns: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridAutoRows: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridColumn: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridColumnEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridColumnStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridRow: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridRowEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridRowStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridTemplateColumns: { none: "none", subgrid: "subgrid", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))", ...L }, gridTemplateRows: { none: "none", subgrid: "subgrid", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))", ...L }, height: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), hueRotate: { 0: "0deg", 15: "15deg", 30: "30deg", 60: "60deg", 90: "90deg", 180: "180deg", ...w }, inset: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%", ...e("spacing") }), invert: { 0: "0", DEFAULT: "100%", ...s }, keyframes: { spin: { to: { transform: "rotate(360deg)" } }, ping: { "75%, 100%": { transform: "scale(2)", opacity: "0" } }, pulse: { "50%": { opacity: ".5" } }, bounce: { "0%, 100%": { transform: "translateY(-25%)", animationTimingFunction: "cubic-bezier(0.8,0,1,1)" }, "50%": { transform: "none", animationTimingFunction: "cubic-bezier(0,0,0.2,1)" } } }, letterSpacing: { tighter: "-0.05em", tight: "-0.025em", normal: "0em", wide: "0.025em", wider: "0.05em", widest: "0.1em" }, lineHeight: { none: "1", tight: "1.25", snug: "1.375", normal: "1.5", relaxed: "1.625", loose: "2", 3: ".75rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem" }, listStyleType: { none: "none", disc: "disc", decimal: "decimal" }, listStyleImage: { none: "none" }, margin: ({ theme: e }) => ({ auto: "auto", ...e("spacing") }), lineClamp: { 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", ...l2 }, maxHeight: ({ theme: e }) => ({ none: "none", full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), maxWidth: ({ theme: e }) => ({ none: "none", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", prose: "65ch", ...e("spacing") }), minHeight: ({ theme: e }) => ({ full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), minWidth: ({ theme: e }) => ({ full: "100%", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), objectPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, opacity: { 0: "0", 5: "0.05", 10: "0.1", 15: "0.15", 20: "0.2", 25: "0.25", 30: "0.3", 35: "0.35", 40: "0.4", 45: "0.45", 50: "0.5", 55: "0.55", 60: "0.6", 65: "0.65", 70: "0.7", 75: "0.75", 80: "0.8", 85: "0.85", 90: "0.9", 95: "0.95", 100: "1", ...s }, order: { first: "-9999", last: "9999", none: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", ...l2 }, outlineColor: ({ theme: e }) => e("colors"), outlineOffset: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, outlineWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, padding: ({ theme: e }) => e("spacing"), placeholderColor: ({ theme: e }) => e("colors"), placeholderOpacity: ({ theme: e }) => e("opacity"), ringColor: ({ theme: e }) => ({ DEFAULT: "currentColor", ...e("colors") }), ringOffsetColor: ({ theme: e }) => e("colors"), ringOffsetWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, ringOpacity: ({ theme: e }) => ({ DEFAULT: "0.5", ...e("opacity") }), ringWidth: { DEFAULT: "3px", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, rotate: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", 45: "45deg", 90: "90deg", 180: "180deg", ...w }, saturate: { 0: "0", 50: ".5", 100: "1", 150: "1.5", 200: "2", ...s }, scale: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", ...s }, screens: { sm: "40rem", md: "48rem", lg: "64rem", xl: "80rem", "2xl": "96rem" }, scrollMargin: ({ theme: e }) => e("spacing"), scrollPadding: ({ theme: e }) => e("spacing"), sepia: { 0: "0", DEFAULT: "100%", ...s }, skew: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", ...w }, space: ({ theme: e }) => e("spacing"), spacing: { px: "1px", 0: "0px", 0.5: "0.125rem", 1: "0.25rem", 1.5: "0.375rem", 2: "0.5rem", 2.5: "0.625rem", 3: "0.75rem", 3.5: "0.875rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem", 11: "2.75rem", 12: "3rem", 14: "3.5rem", 16: "4rem", 20: "5rem", 24: "6rem", 28: "7rem", 32: "8rem", 36: "9rem", 40: "10rem", 44: "11rem", 48: "12rem", 52: "13rem", 56: "14rem", 60: "15rem", 64: "16rem", 72: "18rem", 80: "20rem", 96: "24rem" }, stroke: ({ theme: e }) => ({ none: "none", ...e("colors") }), strokeWidth: { 0: "0", 1: "1", 2: "2", ...l2 }, supports: {}, data: {}, textColor: ({ theme: e }) => e("colors"), textDecorationColor: ({ theme: e }) => e("colors"), textDecorationThickness: { auto: "auto", "from-font": "from-font", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, textIndent: ({ theme: e }) => e("spacing"), textOpacity: ({ theme: e }) => e("opacity"), textUnderlineOffset: { auto: "auto", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, transformOrigin: { center: "center", top: "top", "top-right": "top right", right: "right", "bottom-right": "bottom right", bottom: "bottom", "bottom-left": "bottom left", left: "left", "top-left": "top left" }, transitionDelay: { 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms", ...T }, transitionDuration: { DEFAULT: "150ms", 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms", ...T }, transitionProperty: { none: "none", all: "all", DEFAULT: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter", colors: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke", opacity: "opacity", shadow: "box-shadow", transform: "transform" }, transitionTimingFunction: { DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)", linear: "linear", in: "cubic-bezier(0.4, 0, 1, 1)", out: "cubic-bezier(0, 0, 0.2, 1)", "in-out": "cubic-bezier(0.4, 0, 0.2, 1)" }, translate: ({ theme: e }) => ({ "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%", ...e("spacing") }), size: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), width: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", screen: "100vw", svw: "100svw", lvw: "100lvw", dvw: "100dvw", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), willChange: { auto: "auto", scroll: "scroll-position", contents: "contents", transform: "transform" }, zIndex: { auto: "auto", 0: "0", 10: "10", 20: "20", 30: "30", 40: "40", 50: "50", ...l2 } };

// node_modules/tailwindcss/dist/chunk-N4FJXYNV.mjs
function I2(n) {
  if (arguments.length == 0) throw new TypeError("`CSS.escape` requires an argument.");
  var e = String(n), r = e.length, s2 = -1, t, l3 = "", o = e.charCodeAt(0);
  if (r == 1 && o == 45) return "\\" + e;
  for (; ++s2 < r; ) {
    if (t = e.charCodeAt(s2), t == 0) {
      l3 += "�";
      continue;
    }
    if (t >= 1 && t <= 31 || t == 127 || s2 == 0 && t >= 48 && t <= 57 || s2 == 1 && t >= 48 && t <= 57 && o == 45) {
      l3 += "\\" + t.toString(16) + " ";
      continue;
    }
    if (t >= 128 || t == 45 || t == 95 || t >= 48 && t <= 57 || t >= 65 && t <= 90 || t >= 97 && t <= 122) {
      l3 += e.charAt(s2);
      continue;
    }
    l3 += "\\" + e.charAt(s2);
  }
  return l3;
}
function R2(n) {
  return n.replace(/\\([\dA-Fa-f]{1,6}[\t\n\f\r ]?|[\S\s])/g, (e) => e.length > 2 ? String.fromCodePoint(Number.parseInt(e.slice(1).trim(), 16)) : e[1]);
}
var U2 = /* @__PURE__ */ new Map([["--font", ["--font-weight", "--font-size"]], ["--inset", ["--inset-shadow", "--inset-ring"]], ["--text", ["--text-color", "--text-underline-offset", "--text-indent", "--text-decoration-thickness", "--text-decoration-color"]]]);
function D2(n, e) {
  return (U2.get(e) ?? []).some((r) => n === r || n.startsWith(`${r}-`));
}
var _L_instances, r_fn, n_fn, e_fn, t_fn, _a;
var L2 = (_a = class {
  constructor(e = /* @__PURE__ */ new Map(), r = /* @__PURE__ */ new Set([])) {
    __privateAdd(this, _L_instances);
    __publicField(this, "prefix", null);
    this.values = e;
    this.keyframes = r;
  }
  add(e, r, s2 = 0) {
    if (e.endsWith("-*")) {
      if (r !== "initial") throw new Error(`Invalid theme value \`${r}\` for namespace \`${e}\``);
      e === "--*" ? this.values.clear() : this.clearNamespace(e.slice(0, -2), 0);
    }
    if (s2 & 4) {
      let t = this.values.get(e);
      if (t && !(t.options & 4)) return;
    }
    r === "initial" ? this.values.delete(e) : this.values.set(e, { value: r, options: s2 });
  }
  keysInNamespaces(e) {
    let r = [];
    for (let s2 of e) {
      let t = `${s2}-`;
      for (let l3 of this.values.keys()) l3.startsWith(t) && l3.indexOf("--", 2) === -1 && (D2(l3, s2) || r.push(l3.slice(t.length)));
    }
    return r;
  }
  get(e) {
    for (let r of e) {
      let s2 = this.values.get(r);
      if (s2) return s2.value;
    }
    return null;
  }
  hasDefault(e) {
    return (this.getOptions(e) & 4) === 4;
  }
  getOptions(e) {
    var _a2;
    return e = R2(__privateMethod(this, _L_instances, n_fn).call(this, e)), ((_a2 = this.values.get(e)) == null ? void 0 : _a2.options) ?? 0;
  }
  entries() {
    return this.prefix ? Array.from(this.values, (e) => (e[0] = __privateMethod(this, _L_instances, r_fn).call(this, e[0]), e)) : this.values.entries();
  }
  clearNamespace(e, r) {
    let s2 = U2.get(e) ?? [];
    e: for (let t of this.values.keys()) if (t.startsWith(e)) {
      if (r !== 0 && (this.getOptions(t) & r) !== r) continue;
      for (let l3 of s2) if (t.startsWith(l3)) continue e;
      this.values.delete(t);
    }
  }
  markUsedVariable(e) {
    let r = R2(__privateMethod(this, _L_instances, n_fn).call(this, e)), s2 = this.values.get(r);
    s2 && (s2.options |= 16);
  }
  resolve(e, r) {
    let s2 = __privateMethod(this, _L_instances, e_fn).call(this, e, r);
    if (!s2) return null;
    let t = this.values.get(s2);
    return t.options & 1 ? t.value : __privateMethod(this, _L_instances, t_fn).call(this, s2);
  }
  resolveValue(e, r) {
    let s2 = __privateMethod(this, _L_instances, e_fn).call(this, e, r);
    return s2 ? this.values.get(s2).value : null;
  }
  resolveWith(e, r, s2 = []) {
    let t = __privateMethod(this, _L_instances, e_fn).call(this, e, r);
    if (!t) return null;
    let l3 = {};
    for (let u2 of s2) {
      let a = `${t}${u2}`, i = this.values.get(a);
      i && (i.options & 1 ? l3[u2] = i.value : l3[u2] = __privateMethod(this, _L_instances, t_fn).call(this, a));
    }
    let o = this.values.get(t);
    return o.options & 1 ? [o.value, l3] : [__privateMethod(this, _L_instances, t_fn).call(this, t), l3];
  }
  namespace(e) {
    let r = /* @__PURE__ */ new Map(), s2 = `${e}-`;
    for (let [t, l3] of this.values) t === e ? r.set(null, l3.value) : t.startsWith(`${s2}-`) ? r.set(t.slice(e.length), l3.value) : t.startsWith(s2) && r.set(t.slice(s2.length), l3.value);
    return r;
  }
  addKeyframes(e) {
    this.keyframes.add(e);
  }
  getKeyframes() {
    return Array.from(this.keyframes);
  }
}, _L_instances = new WeakSet(), r_fn = function(e) {
  return this.prefix ? `--${this.prefix}-${e.slice(2)}` : e;
}, n_fn = function(e) {
  return this.prefix ? `--${e.slice(3 + this.prefix.length)}` : e;
}, e_fn = function(e, r) {
  for (let s2 of r) {
    let t = e !== null ? `${s2}-${e}` : s2;
    if (!this.values.has(t)) if (e !== null && e.includes(".")) {
      if (t = `${s2}-${e.replaceAll(".", "_")}`, !this.values.has(t)) continue;
    } else continue;
    if (!D2(t, s2)) return t;
  }
  return null;
}, t_fn = function(e) {
  return this.values.has(e) ? `var(${I2(__privateMethod(this, _L_instances, r_fn).call(this, e))})` : null;
}, _a);
var N2 = class extends Map {
  constructor(r) {
    super();
    this.factory = r;
  }
  get(r) {
    let s2 = super.get(r);
    return s2 === void 0 && (s2 = this.factory(r, this), this.set(r, s2)), s2;
  }
};
var j2 = 64;
function G2(n, e = []) {
  return { kind: "rule", selector: n, nodes: e };
}
function $2(n, e = "", r = []) {
  return { kind: "at-rule", name: n, params: e, nodes: r };
}
function M2(n, e = []) {
  return n.charCodeAt(0) === j2 ? x(n, e) : G2(n, e);
}
function _2(n, e, r = false) {
  return { kind: "declaration", property: n, value: e, important: r };
}
function F2(n) {
  return { kind: "comment", value: n };
}
function oe(n, e) {
  return { kind: "context", context: n, nodes: e };
}
function ae(n) {
  return { kind: "at-root", nodes: n };
}
function b2(n, e, r = [], s2 = {}) {
  for (let t = 0; t < n.length; t++) {
    let l3 = n[t], o = r[r.length - 1] ?? null;
    if (l3.kind === "context") {
      if (b2(l3.nodes, e, r, { ...s2, ...l3.context }) === 2) return 2;
      continue;
    }
    r.push(l3);
    let u2 = false, a = 0, i = e(l3, { parent: o, context: s2, path: r, replaceWith(f2) {
      u2 = true, Array.isArray(f2) ? f2.length === 0 ? (n.splice(t, 1), a = 0) : f2.length === 1 ? (n[t] = f2[0], a = 1) : (n.splice(t, 1, ...f2), a = f2.length) : (n[t] = f2, a = 1);
    } }) ?? 0;
    if (r.pop(), u2) {
      i === 0 ? t-- : t += a - 1;
      continue;
    }
    if (i === 2) return 2;
    if (i !== 1 && "nodes" in l3) {
      r.push(l3);
      let f2 = b2(l3.nodes, e, r, s2);
      if (r.pop(), f2 === 2) return 2;
    }
  }
}
function W2(n, e, r = [], s2 = {}) {
  for (let t = 0; t < n.length; t++) {
    let l3 = n[t], o = r[r.length - 1] ?? null;
    if (l3.kind === "rule" || l3.kind === "at-rule") r.push(l3), W2(l3.nodes, e, r, s2), r.pop();
    else if (l3.kind === "context") {
      W2(l3.nodes, e, r, { ...s2, ...l3.context });
      continue;
    }
    r.push(l3), e(l3, { parent: o, context: s2, path: r, replaceWith(u2) {
      Array.isArray(u2) ? u2.length === 0 ? n.splice(t, 1) : u2.length === 1 ? n[t] = u2[0] : n.splice(t, 1, ...u2) : n[t] = u2, t += u2.length - 1;
    } }), r.pop();
  }
}
function fe(n, e) {
  let r = [], s2 = /* @__PURE__ */ new Set(), t = new N2(() => /* @__PURE__ */ new Set()), l3 = /* @__PURE__ */ new Set(), o = /* @__PURE__ */ new Set();
  function u2(i, f2, h2 = {}, d2 = 0) {
    if (i.kind === "declaration") {
      if (i.property === "--tw-sort" || i.value === void 0 || i.value === null) return;
      if (h2.theme && i.property[0] === "-" && i.property[1] === "-" && t.get(f2).add(i), i.value.includes("var(") && e.trackUsedVariables(i.value), i.property === "animation") {
        let c = i.value.split(/\s+/);
        for (let p2 of c) o.add(p2);
      }
      f2.push(i);
    } else if (i.kind === "rule") if (i.selector === "&") for (let c of i.nodes) {
      let p2 = [];
      u2(c, p2, h2, d2 + 1), p2.length > 0 && f2.push(...p2);
    }
    else {
      let c = { ...i, nodes: [] };
      for (let p2 of i.nodes) u2(p2, c.nodes, h2, d2 + 1);
      c.nodes.length > 0 && f2.push(c);
    }
    else if (i.kind === "at-rule" && i.name === "@property" && d2 === 0) {
      if (s2.has(i.params)) return;
      s2.add(i.params);
      let c = { ...i, nodes: [] };
      for (let p2 of i.nodes) u2(p2, c.nodes, h2, d2 + 1);
      f2.push(c);
    } else if (i.kind === "at-rule") {
      let c = { ...i, nodes: [] };
      for (let p2 of i.nodes) u2(p2, c.nodes, h2, d2 + 1);
      i.name === "@keyframes" && h2.theme && l3.add(c), (c.nodes.length > 0 || c.name === "@layer" || c.name === "@charset" || c.name === "@custom-media" || c.name === "@namespace" || c.name === "@import") && f2.push(c);
    } else if (i.kind === "at-root") for (let c of i.nodes) {
      let p2 = [];
      u2(c, p2, h2, 0);
      for (let g2 of p2) r.push(g2);
    }
    else if (i.kind === "context") {
      if (i.context.reference) return;
      for (let c of i.nodes) u2(c, f2, { ...h2, ...i.context }, d2);
    } else i.kind === "comment" && f2.push(i);
  }
  let a = [];
  for (let i of n) u2(i, a, {}, 0);
  e: for (let [i, f2] of t) for (let h2 of f2) {
    if (e.theme.getOptions(h2.property) & 24) {
      if (h2.property.startsWith("--animate-")) {
        let p2 = h2.value.split(/\s+/);
        for (let g2 of p2) o.add(g2);
      }
      continue;
    }
    let c = i.indexOf(h2);
    if (i.splice(c, 1), i.length === 0) {
      for (let [p2, g2] of a.entries()) if (g2.kind === "rule" && g2.nodes === i) {
        a.splice(p2, 1);
        break;
      }
      continue e;
    }
  }
  for (let i of l3) if (!o.has(i.params)) {
    let f2 = r.indexOf(i);
    r.splice(f2, 1);
  }
  return a.concat(r);
}
function ue2(n) {
  function e(s2, t = 0) {
    let l3 = "", o = "  ".repeat(t);
    if (s2.kind === "declaration") l3 += `${o}${s2.property}: ${s2.value}${s2.important ? " !important" : ""};
`;
    else if (s2.kind === "rule") {
      l3 += `${o}${s2.selector} {
`;
      for (let u2 of s2.nodes) l3 += e(u2, t + 1);
      l3 += `${o}}
`;
    } else if (s2.kind === "at-rule") {
      if (s2.nodes.length === 0) return `${o}${s2.name} ${s2.params};
`;
      l3 += `${o}${s2.name}${s2.params ? ` ${s2.params} ` : " "}{
`;
      for (let u2 of s2.nodes) l3 += e(u2, t + 1);
      l3 += `${o}}
`;
    } else if (s2.kind === "comment") l3 += `${o}/*${s2.value}*/
`;
    else if (s2.kind === "context" || s2.kind === "at-root") return "";
    return l3;
  }
  let r = "";
  for (let s2 of n) {
    let t = e(s2);
    t !== "" && (r += t);
  }
  return r;
}
var y2 = 92;
var C2 = 47;
var k2 = 42;
var H2 = 34;
var z2 = 39;
var Q2 = 58;
var E2 = 59;
var m = 10;
var v = 32;
var S2 = 9;
var P2 = 123;
var T2 = 125;
var K2 = 40;
var B2 = 41;
var Y2 = 91;
var q2 = 93;
var V2 = 45;
var w2 = 64;
var X2 = 33;
function de2(n) {
  n = n.replaceAll(`\r
`, `
`);
  let e = [], r = [], s2 = [], t = null, l3 = null, o = "", u2 = "", a;
  for (let i = 0; i < n.length; i++) {
    let f2 = n.charCodeAt(i);
    if (f2 === y2) o += n.slice(i, i + 2), i += 1;
    else if (f2 === C2 && n.charCodeAt(i + 1) === k2) {
      let h2 = i;
      for (let c = i + 2; c < n.length; c++) if (a = n.charCodeAt(c), a === y2) c += 1;
      else if (a === k2 && n.charCodeAt(c + 1) === C2) {
        i = c + 1;
        break;
      }
      let d2 = n.slice(h2, i + 1);
      d2.charCodeAt(2) === X2 && r.push(F2(d2.slice(2, -2)));
    } else if (f2 === z2 || f2 === H2) {
      let h2 = i;
      for (let d2 = i + 1; d2 < n.length; d2++) if (a = n.charCodeAt(d2), a === y2) d2 += 1;
      else if (a === f2) {
        i = d2;
        break;
      } else {
        if (a === E2 && n.charCodeAt(d2 + 1) === m) throw new Error(`Unterminated string: ${n.slice(h2, d2 + 1) + String.fromCharCode(f2)}`);
        if (a === m) throw new Error(`Unterminated string: ${n.slice(h2, d2) + String.fromCharCode(f2)}`);
      }
      o += n.slice(h2, i + 1);
    } else {
      if ((f2 === v || f2 === m || f2 === S2) && (a = n.charCodeAt(i + 1)) && (a === v || a === m || a === S2)) continue;
      if (f2 === m) {
        if (o.length === 0) continue;
        a = o.charCodeAt(o.length - 1), a !== v && a !== m && a !== S2 && (o += " ");
      } else if (f2 === V2 && n.charCodeAt(i + 1) === V2 && o.length === 0) {
        let h2 = "", d2 = i, c = -1;
        for (let g2 = i + 2; g2 < n.length; g2++) if (a = n.charCodeAt(g2), a === y2) g2 += 1;
        else if (a === C2 && n.charCodeAt(g2 + 1) === k2) {
          for (let A2 = g2 + 2; A2 < n.length; A2++) if (a = n.charCodeAt(A2), a === y2) A2 += 1;
          else if (a === k2 && n.charCodeAt(A2 + 1) === C2) {
            g2 = A2 + 1;
            break;
          }
        } else if (c === -1 && a === Q2) c = o.length + g2 - d2;
        else if (a === E2 && h2.length === 0) {
          o += n.slice(d2, g2), i = g2;
          break;
        } else if (a === K2) h2 += ")";
        else if (a === Y2) h2 += "]";
        else if (a === P2) h2 += "}";
        else if ((a === T2 || n.length - 1 === g2) && h2.length === 0) {
          i = g2 - 1, o += n.slice(d2, g2);
          break;
        } else (a === B2 || a === q2 || a === T2) && h2.length > 0 && n[g2] === h2[h2.length - 1] && (h2 = h2.slice(0, -1));
        let p2 = O2(o, c);
        if (!p2) throw new Error("Invalid custom property, expected a value");
        t ? t.nodes.push(p2) : e.push(p2), o = "";
      } else if (f2 === E2 && o.charCodeAt(0) === w2) l3 = x(o), t ? t.nodes.push(l3) : e.push(l3), o = "", l3 = null;
      else if (f2 === E2 && u2[u2.length - 1] !== ")") {
        let h2 = O2(o);
        if (!h2) throw o.length === 0 ? new Error("Unexpected semicolon") : new Error(`Invalid declaration: \`${o.trim()}\``);
        t ? t.nodes.push(h2) : e.push(h2), o = "";
      } else if (f2 === P2 && u2[u2.length - 1] !== ")") u2 += "}", l3 = M2(o.trim()), t && t.nodes.push(l3), s2.push(t), t = l3, o = "", l3 = null;
      else if (f2 === T2 && u2[u2.length - 1] !== ")") {
        if (u2 === "") throw new Error("Missing opening {");
        if (u2 = u2.slice(0, -1), o.length > 0) if (o.charCodeAt(0) === w2) l3 = x(o), t ? t.nodes.push(l3) : e.push(l3), o = "", l3 = null;
        else {
          let d2 = o.indexOf(":");
          if (t) {
            let c = O2(o, d2);
            if (!c) throw new Error(`Invalid declaration: \`${o.trim()}\``);
            t.nodes.push(c);
          }
        }
        let h2 = s2.pop() ?? null;
        h2 === null && t && e.push(t), t = h2, o = "", l3 = null;
      } else if (f2 === K2) u2 += ")", o += "(";
      else if (f2 === B2) {
        if (u2[u2.length - 1] !== ")") throw new Error("Missing opening (");
        u2 = u2.slice(0, -1), o += ")";
      } else {
        if (o.length === 0 && (f2 === v || f2 === m || f2 === S2)) continue;
        o += String.fromCharCode(f2);
      }
    }
  }
  if (o.charCodeAt(0) === w2 && e.push(x(o)), u2.length > 0 && t) {
    if (t.kind === "rule") throw new Error(`Missing closing } at ${t.selector}`);
    if (t.kind === "at-rule") throw new Error(`Missing closing } at ${t.name} ${t.params}`);
  }
  return r.length > 0 ? r.concat(e) : e;
}
function x(n, e = []) {
  for (let r = 5; r < n.length; r++) {
    let s2 = n.charCodeAt(r);
    if (s2 === v || s2 === K2) {
      let t = n.slice(0, r).trim(), l3 = n.slice(r).trim();
      return $2(t, l3, e);
    }
  }
  return $2(n.trim(), "", e);
}
function O2(n, e = n.indexOf(":")) {
  if (e === -1) return null;
  let r = n.indexOf("!important", e + 1);
  return _2(n.slice(0, e).trim(), n.slice(e + 1, r === -1 ? n.length : r).trim(), r !== -1);
}

// node_modules/tailwindcss/dist/lib.mjs
var Ge = "4.0.5";
function Se(t) {
  return { kind: "word", value: t };
}
function ir(t, r) {
  return { kind: "function", value: t, nodes: r };
}
function or(t) {
  return { kind: "separator", value: t };
}
function Y3(t, r, i = null) {
  for (let e = 0; e < t.length; e++) {
    let o = t[e], c = false, s2 = 0, m2 = r(o, { parent: i, replaceWith(p2) {
      c = true, Array.isArray(p2) ? p2.length === 0 ? (t.splice(e, 1), s2 = 0) : p2.length === 1 ? (t[e] = p2[0], s2 = 1) : (t.splice(e, 1, ...p2), s2 = p2.length) : t[e] = p2;
    } }) ?? 0;
    if (c) {
      m2 === 0 ? e-- : e += s2 - 1;
      continue;
    }
    if (m2 === 2) return 2;
    if (m2 !== 1 && o.kind === "function" && Y3(o.nodes, r, o) === 2) return 2;
  }
}
function B3(t) {
  let r = "";
  for (let i of t) switch (i.kind) {
    case "word":
    case "separator": {
      r += i.value;
      break;
    }
    case "function":
      r += i.value + "(" + B3(i.nodes) + ")";
  }
  return r;
}
var He = 92;
var lr = 41;
var Ze = 58;
var Ye = 44;
var ar = 34;
var Xe = 61;
var Qe = 62;
var et = 60;
var tt = 10;
var sr = 40;
var ur = 39;
var rt = 47;
var nt = 32;
var it = 9;
function z3(t) {
  t = t.replaceAll(`\r
`, `
`);
  let r = [], i = [], e = null, o = "", c;
  for (let s2 = 0; s2 < t.length; s2++) {
    let m2 = t.charCodeAt(s2);
    switch (m2) {
      case He: {
        o += t[s2] + t[s2 + 1], s2++;
        break;
      }
      case Ze:
      case Ye:
      case Xe:
      case Qe:
      case et:
      case tt:
      case rt:
      case nt:
      case it: {
        if (o.length > 0) {
          let h2 = Se(o);
          e ? e.nodes.push(h2) : r.push(h2), o = "";
        }
        let p2 = s2, u2 = s2 + 1;
        for (; u2 < t.length && (c = t.charCodeAt(u2), !(c !== Ze && c !== Ye && c !== Xe && c !== Qe && c !== et && c !== tt && c !== rt && c !== nt && c !== it)); u2++) ;
        s2 = u2 - 1;
        let d2 = or(t.slice(p2, u2));
        e ? e.nodes.push(d2) : r.push(d2);
        break;
      }
      case ur:
      case ar: {
        let p2 = s2;
        for (let u2 = s2 + 1; u2 < t.length; u2++) if (c = t.charCodeAt(u2), c === He) u2 += 1;
        else if (c === m2) {
          s2 = u2;
          break;
        }
        o += t.slice(p2, s2 + 1);
        break;
      }
      case sr: {
        let p2 = ir(o, []);
        o = "", e ? e.nodes.push(p2) : r.push(p2), i.push(p2), e = p2;
        break;
      }
      case lr: {
        let p2 = i.pop();
        if (o.length > 0) {
          let u2 = Se(o);
          p2.nodes.push(u2), o = "";
        }
        i.length > 0 ? e = i[i.length - 1] : e = null;
        break;
      }
      default:
        o += String.fromCharCode(m2);
    }
  }
  return o.length > 0 && r.push(Se(o)), r;
}
function X3(t) {
  if (t.indexOf("(") === -1) return le(t);
  let r = z3(t);
  return Ee(r), t = B3(r), t = ie(t), t;
}
function le(t, r = false) {
  let i = "";
  for (let e = 0; e < t.length; e++) {
    let o = t[e];
    o === "\\" && t[e + 1] === "_" ? (i += "_", e += 1) : o === "_" && !r ? i += " " : i += o;
  }
  return i;
}
function Ee(t) {
  for (let r of t) switch (r.kind) {
    case "function": {
      if (r.value === "url" || r.value.endsWith("_url")) {
        r.value = le(r.value);
        break;
      }
      if (r.value === "var" || r.value.endsWith("_var") || r.value === "theme" || r.value.endsWith("_theme")) {
        r.value = le(r.value);
        for (let i = 0; i < r.nodes.length; i++) {
          if (i == 0 && r.nodes[i].kind === "word") {
            r.nodes[i].value = le(r.nodes[i].value, true);
            continue;
          }
          Ee([r.nodes[i]]);
        }
        break;
      }
      r.value = le(r.value), Ee(r.nodes);
      break;
    }
    case "separator":
    case "word": {
      r.value = le(r.value);
      break;
    }
    default:
      fr(r);
  }
}
function fr(t) {
  throw new Error(`Unexpected value: ${t}`);
}
var cr = 58;
var ot = 45;
var lt = 97;
var at = 122;
function* st(t, r) {
  var _a2;
  let i = u(t, ":");
  if (r.theme.prefix) {
    if (i.length === 1 || i[0] !== r.theme.prefix) return null;
    i.shift();
  }
  let e = i.pop(), o = [];
  for (let h2 = i.length - 1; h2 >= 0; --h2) {
    let g2 = r.parseVariant(i[h2]);
    if (g2 === null) return;
    o.push(g2);
  }
  let c = false;
  e[e.length - 1] === "!" ? (c = true, e = e.slice(0, -1)) : e[0] === "!" && (c = true, e = e.slice(1)), r.utilities.has(e, "static") && !e.includes("[") && (yield { kind: "static", root: e, variants: o, important: c, raw: t });
  let [s2, m2 = null, p2] = u(e, "/");
  if (p2) return;
  let u2 = m2 === null ? null : Ke(m2);
  if (m2 !== null && u2 === null) return;
  if (s2[0] === "[") {
    if (s2[s2.length - 1] !== "]") return;
    let h2 = s2.charCodeAt(1);
    if (h2 !== ot && !(h2 >= lt && h2 <= at)) return;
    s2 = s2.slice(1, -1);
    let g2 = s2.indexOf(":");
    if (g2 === -1 || g2 === 0 || g2 === s2.length - 1) return;
    let y3 = s2.slice(0, g2), w3 = X3(s2.slice(g2 + 1));
    yield { kind: "arbitrary", property: y3, value: w3, modifier: u2, variants: o, important: c, raw: t };
    return;
  }
  let d2;
  if (s2[s2.length - 1] === "]") {
    let h2 = s2.indexOf("-[");
    if (h2 === -1) return;
    let g2 = s2.slice(0, h2);
    if (!r.utilities.has(g2, "functional")) return;
    let y3 = s2.slice(h2 + 1);
    d2 = [[g2, y3]];
  } else if (s2[s2.length - 1] === ")") {
    let h2 = s2.indexOf("-(");
    if (h2 === -1) return;
    let g2 = s2.slice(0, h2);
    if (!r.utilities.has(g2, "functional")) return;
    let y3 = s2.slice(h2 + 2, -1), w3 = u(y3, ":"), v2 = null;
    if (w3.length === 2 && (v2 = w3[0], y3 = w3[1]), y3[0] !== "-" && y3[1] !== "-") return;
    d2 = [[g2, v2 === null ? `[var(${y3})]` : `[${v2}:var(${y3})]`]];
  } else d2 = ft(s2, (h2) => r.utilities.has(h2, "functional"));
  for (let [h2, g2] of d2) {
    let y3 = { kind: "functional", root: h2, modifier: u2, value: null, variants: o, important: c, raw: t };
    if (g2 === null) {
      yield y3;
      continue;
    }
    {
      let w3 = g2.indexOf("[");
      if (w3 !== -1) {
        if (g2[g2.length - 1] !== "]") return;
        let x2 = X3(g2.slice(w3 + 1, -1)), T3 = "";
        for (let N3 = 0; N3 < x2.length; N3++) {
          let R3 = x2.charCodeAt(N3);
          if (R3 === cr) {
            T3 = x2.slice(0, N3), x2 = x2.slice(N3 + 1);
            break;
          }
          if (!(R3 === ot || R3 >= lt && R3 <= at)) break;
        }
        if (x2.length === 0 || x2.trim().length === 0) continue;
        y3.value = { kind: "arbitrary", dataType: T3 || null, value: x2 };
      } else {
        let x2 = m2 === null || ((_a2 = y3.modifier) == null ? void 0 : _a2.kind) === "arbitrary" ? null : `${g2}/${m2}`;
        y3.value = { kind: "named", value: g2, fraction: x2 };
      }
    }
    yield y3;
  }
}
function Ke(t) {
  if (t[0] === "[" && t[t.length - 1] === "]") {
    let r = X3(t.slice(1, -1));
    return r.length === 0 || r.trim().length === 0 ? null : { kind: "arbitrary", value: r };
  }
  if (t[0] === "(" && t[t.length - 1] === ")") {
    let r = X3(t.slice(1, -1));
    return r.length === 0 || r.trim().length === 0 || r[0] !== "-" && r[1] !== "-" ? null : { kind: "arbitrary", value: `var(${r})` };
  }
  return { kind: "named", value: t };
}
function ut(t, r) {
  if (t[0] === "[" && t[t.length - 1] === "]") {
    if (t[1] === "@" && t.includes("&")) return null;
    let i = X3(t.slice(1, -1));
    if (i.length === 0 || i.trim().length === 0) return null;
    let e = i[0] === ">" || i[0] === "+" || i[0] === "~";
    return !e && i[0] !== "@" && !i.includes("&") && (i = `&:is(${i})`), { kind: "arbitrary", selector: i, relative: e };
  }
  {
    let [i, e = null, o] = u(t, "/");
    if (o) return null;
    let c = ft(i, (s2) => r.variants.has(s2));
    for (let [s2, m2] of c) switch (r.variants.kind(s2)) {
      case "static":
        return m2 !== null || e !== null ? null : { kind: "static", root: s2 };
      case "functional": {
        let p2 = e === null ? null : Ke(e);
        if (e !== null && p2 === null) return null;
        if (m2 === null) return { kind: "functional", root: s2, modifier: p2, value: null };
        if (m2[m2.length - 1] === "]") {
          if (m2[0] !== "[") continue;
          let u2 = X3(m2.slice(1, -1));
          return u2.length === 0 || u2.trim().length === 0 ? null : { kind: "functional", root: s2, modifier: p2, value: { kind: "arbitrary", value: u2 } };
        }
        if (m2[m2.length - 1] === ")") {
          if (m2[0] !== "(") continue;
          let u2 = X3(m2.slice(1, -1));
          return u2.length === 0 || u2.trim().length === 0 || u2[0] !== "-" && u2[1] !== "-" ? null : { kind: "functional", root: s2, modifier: p2, value: { kind: "arbitrary", value: `var(${u2})` } };
        }
        return { kind: "functional", root: s2, modifier: p2, value: { kind: "named", value: m2 } };
      }
      case "compound": {
        if (m2 === null) return null;
        let p2 = r.parseVariant(m2);
        if (p2 === null || !r.variants.compoundsWith(s2, p2)) return null;
        let u2 = e === null ? null : Ke(e);
        return e !== null && u2 === null ? null : { kind: "compound", root: s2, modifier: u2, variant: p2 };
      }
    }
  }
  return null;
}
function* ft(t, r) {
  r(t) && (yield [t, null]);
  let i = t.lastIndexOf("-");
  if (i === -1) {
    t[0] === "@" && r("@") && (yield ["@", t.slice(1)]);
    return;
  }
  do {
    let e = t.slice(0, i);
    if (r(e)) {
      let o = [e, t.slice(i + 1)];
      if (o[1] === "") break;
      yield o;
    }
    i = t.lastIndexOf("-", i - 1);
  } while (i > 0);
}
function re2(t, r, i) {
  if (t === r) return 0;
  let e = t.indexOf("("), o = r.indexOf("("), c = e === -1 ? t.replace(/[\d.]+/g, "") : t.slice(0, e), s2 = o === -1 ? r.replace(/[\d.]+/g, "") : r.slice(0, o), m2 = (c === s2 ? 0 : c < s2 ? -1 : 1) || (i === "asc" ? parseInt(t) - parseInt(r) : parseInt(r) - parseInt(t));
  return Number.isNaN(m2) ? t < r ? -1 : 1 : m2;
}
var dr = /* @__PURE__ */ new Set(["inset", "inherit", "initial", "revert", "unset"]);
var ct = /^-?(\d+|\.\d+)(.*?)$/g;
function ne2(t, r) {
  return u(t, ",").map((e) => {
    e = e.trim();
    let o = u(e, " ").filter((u2) => u2.trim() !== ""), c = null, s2 = null, m2 = null;
    for (let u2 of o) dr.has(u2) || (ct.test(u2) ? (s2 === null ? s2 = u2 : m2 === null && (m2 = u2), ct.lastIndex = 0) : c === null && (c = u2));
    if (s2 === null || m2 === null) return e;
    let p2 = r(c ?? "currentcolor");
    return c !== null ? e.replace(c, p2) : `${e} ${p2}`;
  }).join(", ");
}
var gr = /^-?[a-z][a-zA-Z0-9/%._-]*$/;
var mr = /^-?[a-z][a-zA-Z0-9/%._-]*-\*$/;
var Re = class {
  constructor() {
    __publicField(this, "utilities", new N2(() => []));
    __publicField(this, "completions", /* @__PURE__ */ new Map());
  }
  static(r, i) {
    this.utilities.get(r).push({ kind: "static", compileFn: i });
  }
  functional(r, i, e) {
    this.utilities.get(r).push({ kind: "functional", compileFn: i, options: e });
  }
  has(r, i) {
    return this.utilities.has(r) && this.utilities.get(r).some((e) => e.kind === i);
  }
  get(r) {
    return this.utilities.has(r) ? this.utilities.get(r) : [];
  }
  getCompletions(r) {
    var _a2;
    return ((_a2 = this.completions.get(r)) == null ? void 0 : _a2()) ?? [];
  }
  suggest(r, i) {
    this.completions.set(r, i);
  }
  keys(r) {
    let i = [];
    for (let [e, o] of this.utilities.entries()) for (let c of o) if (c.kind === r) {
      i.push(e);
      break;
    }
    return i;
  }
};
function V3(t, r, i) {
  return $2("@property", t, [_2("syntax", i ? `"${i}"` : '"*"'), _2("inherits", "false"), ...r ? [_2("initial-value", r)] : []]);
}
function G3(t, r) {
  if (r === null) return t;
  let i = Number(r);
  return Number.isNaN(i) || (r = `${i * 100}%`), `color-mix(in oklab, ${t} ${r}, transparent)`;
}
function L3(t, r, i) {
  if (!r) return t;
  if (r.kind === "arbitrary") return G3(t, r.value);
  let e = i.resolve(r.value, ["--opacity"]);
  return e ? G3(t, e) : de(r.value) ? G3(t, `${r.value}%`) : null;
}
function q3(t, r, i) {
  let e = null;
  switch (t.value.value) {
    case "inherit": {
      e = "inherit";
      break;
    }
    case "transparent": {
      e = "transparent";
      break;
    }
    case "current": {
      e = "currentColor";
      break;
    }
    default: {
      e = r.resolve(t.value.value, i);
      break;
    }
  }
  return e ? L3(e, t.modifier, r) : null;
}
function pt(t) {
  let r = new Re();
  function i(n, a) {
    function* f2(k3) {
      for (let b3 of t.keysInNamespaces(k3)) yield b3.replaceAll("_", ".");
    }
    r.suggest(n, () => {
      let k3 = [];
      for (let b3 of a()) {
        if (typeof b3 == "string") {
          k3.push({ values: [b3], modifiers: [] });
          continue;
        }
        let $3 = [...b3.values ?? [], ...f2(b3.valueThemeKeys ?? [])], K3 = [...b3.modifiers ?? [], ...f2(b3.modifierThemeKeys ?? [])];
        b3.hasDefaultValue && $3.unshift(null), k3.push({ supportsNegative: b3.supportsNegative, values: $3, modifiers: K3 });
      }
      return k3;
    });
  }
  function e(n, a) {
    r.static(n, () => a.map((f2) => typeof f2 == "function" ? f2() : _2(f2[0], f2[1])));
  }
  function o(n, a) {
    function f2({ negative: k3 }) {
      return (b3) => {
        let $3 = null;
        if (b3.value) if (b3.value.kind === "arbitrary") {
          if (b3.modifier) return;
          $3 = b3.value.value;
        } else {
          if ($3 = t.resolve(b3.value.fraction ?? b3.value.value, a.themeKeys ?? []), $3 === null && a.supportsFractions && b3.value.fraction) {
            let [K3, C3] = u(b3.value.fraction, "/");
            if (!p(K3) || !p(C3)) return;
            $3 = `calc(${b3.value.fraction} * 100%)`;
          }
          if ($3 === null && k3 && a.handleNegativeBareValue) {
            if ($3 = a.handleNegativeBareValue(b3.value), !($3 == null ? void 0 : $3.includes("/")) && b3.modifier) return;
            if ($3 !== null) return a.handle($3);
          }
          if ($3 === null && a.handleBareValue && ($3 = a.handleBareValue(b3.value), !($3 == null ? void 0 : $3.includes("/")) && b3.modifier)) return;
        }
        else {
          if (b3.modifier) return;
          $3 = a.defaultValue !== void 0 ? a.defaultValue : t.resolve(null, a.themeKeys ?? []);
        }
        if ($3 !== null) return a.handle(k3 ? `calc(${$3} * -1)` : $3);
      };
    }
    a.supportsNegative && r.functional(`-${n}`, f2({ negative: true })), r.functional(n, f2({ negative: false })), i(n, () => [{ supportsNegative: a.supportsNegative, valueThemeKeys: a.themeKeys ?? [], hasDefaultValue: a.defaultValue !== void 0 && a.defaultValue !== null }]);
  }
  function c(n, a) {
    r.functional(n, (f2) => {
      if (!f2.value) return;
      let k3 = null;
      if (f2.value.kind === "arbitrary" ? (k3 = f2.value.value, k3 = L3(k3, f2.modifier, t)) : k3 = q3(f2, t, a.themeKeys), k3 !== null) return a.handle(k3);
    }), i(n, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: a.themeKeys, modifiers: Array.from({ length: 21 }, (f2, k3) => `${k3 * 5}`) }]);
  }
  function s2(n, a, f2, { supportsNegative: k3 = false, supportsFractions: b3 = false } = {}) {
    k3 && r.static(`-${n}-px`, () => f2("-1px")), r.static(`${n}-px`, () => f2("1px")), o(n, { themeKeys: a, supportsFractions: b3, supportsNegative: k3, defaultValue: null, handleBareValue: ({ value: $3 }) => {
      let K3 = t.resolve(null, ["--spacing"]);
      return !K3 || !ue($3) ? null : `calc(${K3} * ${$3})`;
    }, handleNegativeBareValue: ({ value: $3 }) => {
      let K3 = t.resolve(null, ["--spacing"]);
      return !K3 || !ue($3) ? null : `calc(${K3} * -${$3})`;
    }, handle: f2 }), i(n, () => [{ values: t.get(["--spacing"]) ? ["0", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "5", "6", "7", "8", "9", "10", "11", "12", "14", "16", "20", "24", "28", "32", "36", "40", "44", "48", "52", "56", "60", "64", "72", "80", "96"] : [], supportsNegative: k3, valueThemeKeys: a }]);
  }
  e("sr-only", [["position", "absolute"], ["width", "1px"], ["height", "1px"], ["padding", "0"], ["margin", "-1px"], ["overflow", "hidden"], ["clip", "rect(0, 0, 0, 0)"], ["white-space", "nowrap"], ["border-width", "0"]]), e("not-sr-only", [["position", "static"], ["width", "auto"], ["height", "auto"], ["padding", "0"], ["margin", "0"], ["overflow", "visible"], ["clip", "auto"], ["white-space", "normal"]]), e("pointer-events-none", [["pointer-events", "none"]]), e("pointer-events-auto", [["pointer-events", "auto"]]), e("visible", [["visibility", "visible"]]), e("invisible", [["visibility", "hidden"]]), e("collapse", [["visibility", "collapse"]]), e("static", [["position", "static"]]), e("fixed", [["position", "fixed"]]), e("absolute", [["position", "absolute"]]), e("relative", [["position", "relative"]]), e("sticky", [["position", "sticky"]]);
  for (let [n, a] of [["inset", "inset"], ["inset-x", "inset-inline"], ["inset-y", "inset-block"], ["start", "inset-inline-start"], ["end", "inset-inline-end"], ["top", "top"], ["right", "right"], ["bottom", "bottom"], ["left", "left"]]) e(`${n}-auto`, [[a, "auto"]]), e(`${n}-full`, [[a, "100%"]]), e(`-${n}-full`, [[a, "-100%"]]), s2(n, ["--inset", "--spacing"], (f2) => [_2(a, f2)], { supportsNegative: true, supportsFractions: true });
  e("isolate", [["isolation", "isolate"]]), e("isolation-auto", [["isolation", "auto"]]), e("z-auto", [["z-index", "auto"]]), o("z", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--z-index"], handle: (n) => [_2("z-index", n)] }), i("z", () => [{ supportsNegative: true, values: ["0", "10", "20", "30", "40", "50"], valueThemeKeys: ["--z-index"] }]), e("order-first", [["order", "-9999"]]), e("order-last", [["order", "9999"]]), e("order-none", [["order", "0"]]), o("order", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--order"], handle: (n) => [_2("order", n)] }), i("order", () => [{ supportsNegative: true, values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--order"] }]), e("col-auto", [["grid-column", "auto"]]), o("col", { themeKeys: ["--grid-column"], handle: (n) => [_2("grid-column", n)] }), e("col-span-full", [["grid-column", "1 / -1"]]), o("col-span", { handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [_2("grid-column", `span ${n} / span ${n}`)] }), e("col-start-auto", [["grid-column-start", "auto"]]), o("col-start", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-column-start"], handle: (n) => [_2("grid-column-start", n)] }), e("col-end-auto", [["grid-column-end", "auto"]]), o("col-end", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-column-end"], handle: (n) => [_2("grid-column-end", n)] }), i("col-span", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: [] }]), i("col-start", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-column-start"] }]), i("col-end", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-column-end"] }]), e("row-auto", [["grid-row", "auto"]]), o("row", { themeKeys: ["--grid-row"], handle: (n) => [_2("grid-row", n)] }), e("row-span-full", [["grid-row", "1 / -1"]]), o("row-span", { themeKeys: [], handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [_2("grid-row", `span ${n} / span ${n}`)] }), e("row-start-auto", [["grid-row-start", "auto"]]), o("row-start", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-row-start"], handle: (n) => [_2("grid-row-start", n)] }), e("row-end-auto", [["grid-row-end", "auto"]]), o("row-end", { supportsNegative: true, handleBareValue: ({ value: n }) => p(n) ? n : null, themeKeys: ["--grid-row-end"], handle: (n) => [_2("grid-row-end", n)] }), i("row-span", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: [] }]), i("row-start", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-row-start"] }]), i("row-end", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-row-end"] }]), e("float-start", [["float", "inline-start"]]), e("float-end", [["float", "inline-end"]]), e("float-right", [["float", "right"]]), e("float-left", [["float", "left"]]), e("float-none", [["float", "none"]]), e("clear-start", [["clear", "inline-start"]]), e("clear-end", [["clear", "inline-end"]]), e("clear-right", [["clear", "right"]]), e("clear-left", [["clear", "left"]]), e("clear-both", [["clear", "both"]]), e("clear-none", [["clear", "none"]]);
  for (let [n, a] of [["m", "margin"], ["mx", "margin-inline"], ["my", "margin-block"], ["ms", "margin-inline-start"], ["me", "margin-inline-end"], ["mt", "margin-top"], ["mr", "margin-right"], ["mb", "margin-bottom"], ["ml", "margin-left"]]) e(`${n}-auto`, [[a, "auto"]]), s2(n, ["--margin", "--spacing"], (f2) => [_2(a, f2)], { supportsNegative: true });
  e("box-border", [["box-sizing", "border-box"]]), e("box-content", [["box-sizing", "content-box"]]), e("line-clamp-none", [["overflow", "visible"], ["display", "block"], ["-webkit-box-orient", "horizontal"], ["-webkit-line-clamp", "unset"]]), o("line-clamp", { themeKeys: ["--line-clamp"], handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [_2("overflow", "hidden"), _2("display", "-webkit-box"), _2("-webkit-box-orient", "vertical"), _2("-webkit-line-clamp", n)] }), i("line-clamp", () => [{ values: ["1", "2", "3", "4", "5", "6"], valueThemeKeys: ["--line-clamp"] }]), e("block", [["display", "block"]]), e("inline-block", [["display", "inline-block"]]), e("inline", [["display", "inline"]]), e("hidden", [["display", "none"]]), e("inline-flex", [["display", "inline-flex"]]), e("table", [["display", "table"]]), e("inline-table", [["display", "inline-table"]]), e("table-caption", [["display", "table-caption"]]), e("table-cell", [["display", "table-cell"]]), e("table-column", [["display", "table-column"]]), e("table-column-group", [["display", "table-column-group"]]), e("table-footer-group", [["display", "table-footer-group"]]), e("table-header-group", [["display", "table-header-group"]]), e("table-row-group", [["display", "table-row-group"]]), e("table-row", [["display", "table-row"]]), e("flow-root", [["display", "flow-root"]]), e("flex", [["display", "flex"]]), e("grid", [["display", "grid"]]), e("inline-grid", [["display", "inline-grid"]]), e("contents", [["display", "contents"]]), e("list-item", [["display", "list-item"]]), e("field-sizing-content", [["field-sizing", "content"]]), e("field-sizing-fixed", [["field-sizing", "fixed"]]), e("aspect-auto", [["aspect-ratio", "auto"]]), e("aspect-square", [["aspect-ratio", "1 / 1"]]), o("aspect", { themeKeys: ["--aspect"], handleBareValue: ({ fraction: n }) => {
    if (n === null) return null;
    let [a, f2] = u(n, "/");
    return !p(a) || !p(f2) ? null : n;
  }, handle: (n) => [_2("aspect-ratio", n)] });
  for (let [n, a] of [["auto", "auto"], ["full", "100%"], ["svw", "100svw"], ["lvw", "100lvw"], ["dvw", "100dvw"], ["svh", "100svh"], ["lvh", "100lvh"], ["dvh", "100dvh"], ["min", "min-content"], ["max", "max-content"], ["fit", "fit-content"]]) e(`size-${n}`, [["--tw-sort", "size"], ["width", a], ["height", a]]), e(`w-${n}`, [["width", a]]), e(`min-w-${n}`, [["min-width", a]]), e(`max-w-${n}`, [["max-width", a]]), e(`h-${n}`, [["height", a]]), e(`min-h-${n}`, [["min-height", a]]), e(`max-h-${n}`, [["max-height", a]]);
  e("w-screen", [["width", "100vw"]]), e("min-w-screen", [["min-width", "100vw"]]), e("max-w-screen", [["max-width", "100vw"]]), e("h-screen", [["height", "100vh"]]), e("min-h-screen", [["min-height", "100vh"]]), e("max-h-screen", [["max-height", "100vh"]]), e("max-w-none", [["max-width", "none"]]), e("max-h-none", [["max-height", "none"]]), s2("size", ["--size", "--spacing"], (n) => [_2("--tw-sort", "size"), _2("width", n), _2("height", n)], { supportsFractions: true });
  for (let [n, a, f2] of [["w", ["--width", "--spacing", "--container"], "width"], ["min-w", ["--min-width", "--spacing", "--container"], "min-width"], ["max-w", ["--max-width", "--spacing", "--container"], "max-width"], ["h", ["--height", "--spacing"], "height"], ["min-h", ["--min-height", "--height", "--spacing"], "min-height"], ["max-h", ["--max-height", "--height", "--spacing"], "max-height"]]) s2(n, a, (k3) => [_2(f2, k3)], { supportsFractions: true });
  r.static("container", () => {
    let n = [...t.namespace("--breakpoint").values()];
    n.sort((f2, k3) => re2(f2, k3, "asc"));
    let a = [_2("--tw-sort", "--tw-container-component"), _2("width", "100%")];
    for (let f2 of n) a.push($2("@media", `(width >= ${f2})`, [_2("max-width", f2)]));
    return a;
  }), e("flex-auto", [["flex", "auto"]]), e("flex-initial", [["flex", "0 auto"]]), e("flex-none", [["flex", "none"]]), r.functional("flex", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") return n.modifier ? void 0 : [_2("flex", n.value.value)];
      if (n.value.fraction) {
        let [a, f2] = u(n.value.fraction, "/");
        return !p(a) || !p(f2) ? void 0 : [_2("flex", `calc(${n.value.fraction} * 100%)`)];
      }
      if (p(n.value.value)) return n.modifier ? void 0 : [_2("flex", n.value.value)];
    }
  }), o("shrink", { defaultValue: "1", handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [_2("flex-shrink", n)] }), o("grow", { defaultValue: "1", handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [_2("flex-grow", n)] }), i("shrink", () => [{ values: ["0"], valueThemeKeys: [], hasDefaultValue: true }]), i("grow", () => [{ values: ["0"], valueThemeKeys: [], hasDefaultValue: true }]), e("basis-auto", [["flex-basis", "auto"]]), e("basis-full", [["flex-basis", "100%"]]), s2("basis", ["--flex-basis", "--spacing", "--container"], (n) => [_2("flex-basis", n)], { supportsFractions: true }), e("table-auto", [["table-layout", "auto"]]), e("table-fixed", [["table-layout", "fixed"]]), e("caption-top", [["caption-side", "top"]]), e("caption-bottom", [["caption-side", "bottom"]]), e("border-collapse", [["border-collapse", "collapse"]]), e("border-separate", [["border-collapse", "separate"]]);
  let m2 = () => ae([V3("--tw-border-spacing-x", "0", "<length>"), V3("--tw-border-spacing-y", "0", "<length>")]);
  s2("border-spacing", ["--border-spacing", "--spacing"], (n) => [m2(), _2("--tw-border-spacing-x", n), _2("--tw-border-spacing-y", n), _2("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), s2("border-spacing-x", ["--border-spacing", "--spacing"], (n) => [m2(), _2("--tw-border-spacing-x", n), _2("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), s2("border-spacing-y", ["--border-spacing", "--spacing"], (n) => [m2(), _2("--tw-border-spacing-y", n), _2("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), e("origin-center", [["transform-origin", "center"]]), e("origin-top", [["transform-origin", "top"]]), e("origin-top-right", [["transform-origin", "top right"]]), e("origin-right", [["transform-origin", "right"]]), e("origin-bottom-right", [["transform-origin", "bottom right"]]), e("origin-bottom", [["transform-origin", "bottom"]]), e("origin-bottom-left", [["transform-origin", "bottom left"]]), e("origin-left", [["transform-origin", "left"]]), e("origin-top-left", [["transform-origin", "top left"]]), o("origin", { themeKeys: ["--transform-origin"], handle: (n) => [_2("transform-origin", n)] }), e("perspective-origin-center", [["perspective-origin", "center"]]), e("perspective-origin-top", [["perspective-origin", "top"]]), e("perspective-origin-top-right", [["perspective-origin", "top right"]]), e("perspective-origin-right", [["perspective-origin", "right"]]), e("perspective-origin-bottom-right", [["perspective-origin", "bottom right"]]), e("perspective-origin-bottom", [["perspective-origin", "bottom"]]), e("perspective-origin-bottom-left", [["perspective-origin", "bottom left"]]), e("perspective-origin-left", [["perspective-origin", "left"]]), e("perspective-origin-top-left", [["perspective-origin", "top left"]]), o("perspective-origin", { themeKeys: ["--perspective-origin"], handle: (n) => [_2("perspective-origin", n)] }), e("perspective-none", [["perspective", "none"]]), o("perspective", { themeKeys: ["--perspective"], handle: (n) => [_2("perspective", n)] });
  let p2 = () => ae([V3("--tw-translate-x", "0"), V3("--tw-translate-y", "0"), V3("--tw-translate-z", "0")]);
  e("translate-none", [["translate", "none"]]), e("-translate-full", [p2, ["--tw-translate-x", "-100%"], ["--tw-translate-y", "-100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), e("translate-full", [p2, ["--tw-translate-x", "100%"], ["--tw-translate-y", "100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), s2("translate", ["--translate", "--spacing"], (n) => [p2(), _2("--tw-translate-x", n), _2("--tw-translate-y", n), _2("translate", "var(--tw-translate-x) var(--tw-translate-y)")], { supportsNegative: true, supportsFractions: true });
  for (let n of ["x", "y"]) e(`-translate-${n}-full`, [p2, [`--tw-translate-${n}`, "-100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), e(`translate-${n}-full`, [p2, [`--tw-translate-${n}`, "100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), s2(`translate-${n}`, ["--translate", "--spacing"], (a) => [p2(), _2(`--tw-translate-${n}`, a), _2("translate", "var(--tw-translate-x) var(--tw-translate-y)")], { supportsNegative: true, supportsFractions: true });
  s2("translate-z", ["--translate", "--spacing"], (n) => [p2(), _2("--tw-translate-z", n), _2("translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)")], { supportsNegative: true }), e("-translate-z-px", [p2, ["--tw-translate-z", "-1px"], ["translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"]]), e("translate-z-px", [p2, ["--tw-translate-z", "1px"], ["translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"]]), e("translate-3d", [p2, ["translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"]]);
  let u2 = () => ae([V3("--tw-scale-x", "1"), V3("--tw-scale-y", "1"), V3("--tw-scale-z", "1")]);
  e("scale-none", [["scale", "none"]]);
  function d2({ negative: n }) {
    return (a) => {
      if (!a.value || a.modifier) return;
      let f2;
      return a.value.kind === "arbitrary" ? (f2 = a.value.value, [_2("scale", f2)]) : (f2 = t.resolve(a.value.value, ["--scale"]), !f2 && p(a.value.value) && (f2 = `${a.value.value}%`), f2 ? (f2 = n ? `calc(${f2} * -1)` : f2, [u2(), _2("--tw-scale-x", f2), _2("--tw-scale-y", f2), _2("--tw-scale-z", f2), _2("scale", "var(--tw-scale-x) var(--tw-scale-y)")]) : void 0);
    };
  }
  r.functional("-scale", d2({ negative: true })), r.functional("scale", d2({ negative: false })), i("scale", () => [{ supportsNegative: true, values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--scale"] }]);
  for (let n of ["x", "y", "z"]) o(`scale-${n}`, { supportsNegative: true, themeKeys: ["--scale"], handleBareValue: ({ value: a }) => p(a) ? `${a}%` : null, handle: (a) => [u2(), _2(`--tw-scale-${n}`, a), _2("scale", `var(--tw-scale-x) var(--tw-scale-y)${n === "z" ? " var(--tw-scale-z)" : ""}`)] }), i(`scale-${n}`, () => [{ supportsNegative: true, values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--scale"] }]);
  e("scale-3d", [u2, ["scale", "var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z)"]]), e("rotate-none", [["rotate", "none"]]);
  function h2({ negative: n }) {
    return (a) => {
      if (!a.value || a.modifier) return;
      let f2;
      if (a.value.kind === "arbitrary") {
        f2 = a.value.value;
        let k3 = a.value.dataType ?? pe(f2, ["angle", "vector"]);
        if (k3 === "vector") return [_2("rotate", `${f2} var(--tw-rotate)`)];
        if (k3 !== "angle") return [_2("rotate", f2)];
      } else if (f2 = t.resolve(a.value.value, ["--rotate"]), !f2 && p(a.value.value) && (f2 = `${a.value.value}deg`), !f2) return;
      return [_2("rotate", n ? `calc(${f2} * -1)` : f2)];
    };
  }
  r.functional("-rotate", h2({ negative: true })), r.functional("rotate", h2({ negative: false })), i("rotate", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"], valueThemeKeys: ["--rotate"] }]);
  {
    let n = ["var(--tw-rotate-x)", "var(--tw-rotate-y)", "var(--tw-rotate-z)", "var(--tw-skew-x)", "var(--tw-skew-y)"].join(" "), a = () => ae([V3("--tw-rotate-x", "rotateX(0)"), V3("--tw-rotate-y", "rotateY(0)"), V3("--tw-rotate-z", "rotateZ(0)"), V3("--tw-skew-x", "skewX(0)"), V3("--tw-skew-y", "skewY(0)")]);
    for (let f2 of ["x", "y", "z"]) o(`rotate-${f2}`, { supportsNegative: true, themeKeys: ["--rotate"], handleBareValue: ({ value: k3 }) => p(k3) ? `${k3}deg` : null, handle: (k3) => [a(), _2(`--tw-rotate-${f2}`, `rotate${f2.toUpperCase()}(${k3})`), _2("transform", n)] }), i(`rotate-${f2}`, () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"], valueThemeKeys: ["--rotate"] }]);
    o("skew", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: f2 }) => p(f2) ? `${f2}deg` : null, handle: (f2) => [a(), _2("--tw-skew-x", `skewX(${f2})`), _2("--tw-skew-y", `skewY(${f2})`), _2("transform", n)] }), o("skew-x", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: f2 }) => p(f2) ? `${f2}deg` : null, handle: (f2) => [a(), _2("--tw-skew-x", `skewX(${f2})`), _2("transform", n)] }), o("skew-y", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: f2 }) => p(f2) ? `${f2}deg` : null, handle: (f2) => [a(), _2("--tw-skew-y", `skewY(${f2})`), _2("transform", n)] }), i("skew", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), i("skew-x", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), i("skew-y", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), r.functional("transform", (f2) => {
      if (f2.modifier) return;
      let k3 = null;
      if (f2.value ? f2.value.kind === "arbitrary" && (k3 = f2.value.value) : k3 = n, k3 !== null) return [a(), _2("transform", k3)];
    }), i("transform", () => [{ hasDefaultValue: true }]), e("transform-cpu", [["transform", n]]), e("transform-gpu", [["transform", `translateZ(0) ${n}`]]), e("transform-none", [["transform", "none"]]);
  }
  e("transform-flat", [["transform-style", "flat"]]), e("transform-3d", [["transform-style", "preserve-3d"]]), e("transform-content", [["transform-box", "content-box"]]), e("transform-border", [["transform-box", "border-box"]]), e("transform-fill", [["transform-box", "fill-box"]]), e("transform-stroke", [["transform-box", "stroke-box"]]), e("transform-view", [["transform-box", "view-box"]]), e("backface-visible", [["backface-visibility", "visible"]]), e("backface-hidden", [["backface-visibility", "hidden"]]);
  for (let n of ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out"]) e(`cursor-${n}`, [["cursor", n]]);
  o("cursor", { themeKeys: ["--cursor"], handle: (n) => [_2("cursor", n)] });
  for (let n of ["auto", "none", "manipulation"]) e(`touch-${n}`, [["touch-action", n]]);
  let g2 = () => ae([V3("--tw-pan-x"), V3("--tw-pan-y"), V3("--tw-pinch-zoom")]);
  for (let n of ["x", "left", "right"]) e(`touch-pan-${n}`, [g2, ["--tw-pan-x", `pan-${n}`], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  for (let n of ["y", "up", "down"]) e(`touch-pan-${n}`, [g2, ["--tw-pan-y", `pan-${n}`], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  e("touch-pinch-zoom", [g2, ["--tw-pinch-zoom", "pinch-zoom"], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  for (let n of ["none", "text", "all", "auto"]) e(`select-${n}`, [["-webkit-user-select", n], ["user-select", n]]);
  e("resize-none", [["resize", "none"]]), e("resize-x", [["resize", "horizontal"]]), e("resize-y", [["resize", "vertical"]]), e("resize", [["resize", "both"]]), e("snap-none", [["scroll-snap-type", "none"]]);
  let y3 = () => ae([V3("--tw-scroll-snap-strictness", "proximity", "*")]);
  for (let n of ["x", "y", "both"]) e(`snap-${n}`, [y3, ["scroll-snap-type", `${n} var(--tw-scroll-snap-strictness)`]]);
  e("snap-mandatory", [y3, ["--tw-scroll-snap-strictness", "mandatory"]]), e("snap-proximity", [y3, ["--tw-scroll-snap-strictness", "proximity"]]), e("snap-align-none", [["scroll-snap-align", "none"]]), e("snap-start", [["scroll-snap-align", "start"]]), e("snap-end", [["scroll-snap-align", "end"]]), e("snap-center", [["scroll-snap-align", "center"]]), e("snap-normal", [["scroll-snap-stop", "normal"]]), e("snap-always", [["scroll-snap-stop", "always"]]);
  for (let [n, a] of [["scroll-m", "scroll-margin"], ["scroll-mx", "scroll-margin-inline"], ["scroll-my", "scroll-margin-block"], ["scroll-ms", "scroll-margin-inline-start"], ["scroll-me", "scroll-margin-inline-end"], ["scroll-mt", "scroll-margin-top"], ["scroll-mr", "scroll-margin-right"], ["scroll-mb", "scroll-margin-bottom"], ["scroll-ml", "scroll-margin-left"]]) s2(n, ["--scroll-margin", "--spacing"], (f2) => [_2(a, f2)], { supportsNegative: true });
  for (let [n, a] of [["scroll-p", "scroll-padding"], ["scroll-px", "scroll-padding-inline"], ["scroll-py", "scroll-padding-block"], ["scroll-ps", "scroll-padding-inline-start"], ["scroll-pe", "scroll-padding-inline-end"], ["scroll-pt", "scroll-padding-top"], ["scroll-pr", "scroll-padding-right"], ["scroll-pb", "scroll-padding-bottom"], ["scroll-pl", "scroll-padding-left"]]) s2(n, ["--scroll-padding", "--spacing"], (f2) => [_2(a, f2)]);
  e("list-inside", [["list-style-position", "inside"]]), e("list-outside", [["list-style-position", "outside"]]), e("list-none", [["list-style-type", "none"]]), e("list-disc", [["list-style-type", "disc"]]), e("list-decimal", [["list-style-type", "decimal"]]), o("list", { themeKeys: ["--list-style-type"], handle: (n) => [_2("list-style-type", n)] }), e("list-image-none", [["list-style-image", "none"]]), o("list-image", { themeKeys: ["--list-style-image"], handle: (n) => [_2("list-style-image", n)] }), e("appearance-none", [["appearance", "none"]]), e("appearance-auto", [["appearance", "auto"]]), e("scheme-normal", [["color-scheme", "normal"]]), e("scheme-dark", [["color-scheme", "dark"]]), e("scheme-light", [["color-scheme", "light"]]), e("scheme-light-dark", [["color-scheme", "light dark"]]), e("scheme-only-dark", [["color-scheme", "only dark"]]), e("scheme-only-light", [["color-scheme", "only light"]]), e("columns-auto", [["columns", "auto"]]), o("columns", { themeKeys: ["--columns", "--container"], handleBareValue: ({ value: n }) => p(n) ? n : null, handle: (n) => [_2("columns", n)] }), i("columns", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--columns", "--container"] }]);
  for (let n of ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]) e(`break-before-${n}`, [["break-before", n]]);
  for (let n of ["auto", "avoid", "avoid-page", "avoid-column"]) e(`break-inside-${n}`, [["break-inside", n]]);
  for (let n of ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]) e(`break-after-${n}`, [["break-after", n]]);
  e("grid-flow-row", [["grid-auto-flow", "row"]]), e("grid-flow-col", [["grid-auto-flow", "column"]]), e("grid-flow-dense", [["grid-auto-flow", "dense"]]), e("grid-flow-row-dense", [["grid-auto-flow", "row dense"]]), e("grid-flow-col-dense", [["grid-auto-flow", "column dense"]]), e("auto-cols-auto", [["grid-auto-columns", "auto"]]), e("auto-cols-min", [["grid-auto-columns", "min-content"]]), e("auto-cols-max", [["grid-auto-columns", "max-content"]]), e("auto-cols-fr", [["grid-auto-columns", "minmax(0, 1fr)"]]), o("auto-cols", { themeKeys: ["--grid-auto-columns"], handle: (n) => [_2("grid-auto-columns", n)] }), e("auto-rows-auto", [["grid-auto-rows", "auto"]]), e("auto-rows-min", [["grid-auto-rows", "min-content"]]), e("auto-rows-max", [["grid-auto-rows", "max-content"]]), e("auto-rows-fr", [["grid-auto-rows", "minmax(0, 1fr)"]]), o("auto-rows", { themeKeys: ["--grid-auto-rows"], handle: (n) => [_2("grid-auto-rows", n)] }), e("grid-cols-none", [["grid-template-columns", "none"]]), e("grid-cols-subgrid", [["grid-template-columns", "subgrid"]]), o("grid-cols", { themeKeys: ["--grid-template-columns"], handleBareValue: ({ value: n }) => ge(n) ? `repeat(${n}, minmax(0, 1fr))` : null, handle: (n) => [_2("grid-template-columns", n)] }), e("grid-rows-none", [["grid-template-rows", "none"]]), e("grid-rows-subgrid", [["grid-template-rows", "subgrid"]]), o("grid-rows", { themeKeys: ["--grid-template-rows"], handleBareValue: ({ value: n }) => ge(n) ? `repeat(${n}, minmax(0, 1fr))` : null, handle: (n) => [_2("grid-template-rows", n)] }), i("grid-cols", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-template-columns"] }]), i("grid-rows", () => [{ values: Array.from({ length: 12 }, (n, a) => `${a + 1}`), valueThemeKeys: ["--grid-template-rows"] }]), e("flex-row", [["flex-direction", "row"]]), e("flex-row-reverse", [["flex-direction", "row-reverse"]]), e("flex-col", [["flex-direction", "column"]]), e("flex-col-reverse", [["flex-direction", "column-reverse"]]), e("flex-wrap", [["flex-wrap", "wrap"]]), e("flex-nowrap", [["flex-wrap", "nowrap"]]), e("flex-wrap-reverse", [["flex-wrap", "wrap-reverse"]]), e("place-content-center", [["place-content", "center"]]), e("place-content-start", [["place-content", "start"]]), e("place-content-end", [["place-content", "end"]]), e("place-content-between", [["place-content", "space-between"]]), e("place-content-around", [["place-content", "space-around"]]), e("place-content-evenly", [["place-content", "space-evenly"]]), e("place-content-baseline", [["place-content", "baseline"]]), e("place-content-stretch", [["place-content", "stretch"]]), e("place-items-center", [["place-items", "center"]]), e("place-items-start", [["place-items", "start"]]), e("place-items-end", [["place-items", "end"]]), e("place-items-baseline", [["place-items", "baseline"]]), e("place-items-stretch", [["place-items", "stretch"]]), e("content-normal", [["align-content", "normal"]]), e("content-center", [["align-content", "center"]]), e("content-start", [["align-content", "flex-start"]]), e("content-end", [["align-content", "flex-end"]]), e("content-between", [["align-content", "space-between"]]), e("content-around", [["align-content", "space-around"]]), e("content-evenly", [["align-content", "space-evenly"]]), e("content-baseline", [["align-content", "baseline"]]), e("content-stretch", [["align-content", "stretch"]]), e("items-center", [["align-items", "center"]]), e("items-start", [["align-items", "flex-start"]]), e("items-end", [["align-items", "flex-end"]]), e("items-baseline", [["align-items", "baseline"]]), e("items-stretch", [["align-items", "stretch"]]), e("justify-normal", [["justify-content", "normal"]]), e("justify-center", [["justify-content", "center"]]), e("justify-start", [["justify-content", "flex-start"]]), e("justify-end", [["justify-content", "flex-end"]]), e("justify-between", [["justify-content", "space-between"]]), e("justify-around", [["justify-content", "space-around"]]), e("justify-evenly", [["justify-content", "space-evenly"]]), e("justify-baseline", [["justify-content", "baseline"]]), e("justify-stretch", [["justify-content", "stretch"]]), e("justify-items-normal", [["justify-items", "normal"]]), e("justify-items-center", [["justify-items", "center"]]), e("justify-items-start", [["justify-items", "start"]]), e("justify-items-end", [["justify-items", "end"]]), e("justify-items-stretch", [["justify-items", "stretch"]]), s2("gap", ["--gap", "--spacing"], (n) => [_2("gap", n)]), s2("gap-x", ["--gap", "--spacing"], (n) => [_2("column-gap", n)]), s2("gap-y", ["--gap", "--spacing"], (n) => [_2("row-gap", n)]), s2("space-x", ["--space", "--spacing"], (n) => [ae([V3("--tw-space-x-reverse", "0")]), G2(":where(& > :not(:last-child))", [_2("--tw-sort", "row-gap"), _2("--tw-space-x-reverse", "0"), _2("margin-inline-start", `calc(${n} * var(--tw-space-x-reverse))`), _2("margin-inline-end", `calc(${n} * calc(1 - var(--tw-space-x-reverse)))`)])], { supportsNegative: true }), s2("space-y", ["--space", "--spacing"], (n) => [ae([V3("--tw-space-y-reverse", "0")]), G2(":where(& > :not(:last-child))", [_2("--tw-sort", "column-gap"), _2("--tw-space-y-reverse", "0"), _2("margin-block-start", `calc(${n} * var(--tw-space-y-reverse))`), _2("margin-block-end", `calc(${n} * calc(1 - var(--tw-space-y-reverse)))`)])], { supportsNegative: true }), e("space-x-reverse", [() => ae([V3("--tw-space-x-reverse", "0")]), () => G2(":where(& > :not(:last-child))", [_2("--tw-sort", "row-gap"), _2("--tw-space-x-reverse", "1")])]), e("space-y-reverse", [() => ae([V3("--tw-space-y-reverse", "0")]), () => G2(":where(& > :not(:last-child))", [_2("--tw-sort", "column-gap"), _2("--tw-space-y-reverse", "1")])]), e("accent-auto", [["accent-color", "auto"]]), c("accent", { themeKeys: ["--accent-color", "--color"], handle: (n) => [_2("accent-color", n)] }), c("caret", { themeKeys: ["--caret-color", "--color"], handle: (n) => [_2("caret-color", n)] }), c("divide", { themeKeys: ["--divide-color", "--color"], handle: (n) => [G2(":where(& > :not(:last-child))", [_2("--tw-sort", "divide-color"), _2("border-color", n)])] }), e("place-self-auto", [["place-self", "auto"]]), e("place-self-start", [["place-self", "start"]]), e("place-self-end", [["place-self", "end"]]), e("place-self-center", [["place-self", "center"]]), e("place-self-stretch", [["place-self", "stretch"]]), e("self-auto", [["align-self", "auto"]]), e("self-start", [["align-self", "flex-start"]]), e("self-end", [["align-self", "flex-end"]]), e("self-center", [["align-self", "center"]]), e("self-stretch", [["align-self", "stretch"]]), e("self-baseline", [["align-self", "baseline"]]), e("justify-self-auto", [["justify-self", "auto"]]), e("justify-self-start", [["justify-self", "flex-start"]]), e("justify-self-end", [["justify-self", "flex-end"]]), e("justify-self-center", [["justify-self", "center"]]), e("justify-self-stretch", [["justify-self", "stretch"]]);
  for (let n of ["auto", "hidden", "clip", "visible", "scroll"]) e(`overflow-${n}`, [["overflow", n]]), e(`overflow-x-${n}`, [["overflow-x", n]]), e(`overflow-y-${n}`, [["overflow-y", n]]);
  for (let n of ["auto", "contain", "none"]) e(`overscroll-${n}`, [["overscroll-behavior", n]]), e(`overscroll-x-${n}`, [["overscroll-behavior-x", n]]), e(`overscroll-y-${n}`, [["overscroll-behavior-y", n]]);
  e("scroll-auto", [["scroll-behavior", "auto"]]), e("scroll-smooth", [["scroll-behavior", "smooth"]]), e("truncate", [["overflow", "hidden"], ["text-overflow", "ellipsis"], ["white-space", "nowrap"]]), e("text-ellipsis", [["text-overflow", "ellipsis"]]), e("text-clip", [["text-overflow", "clip"]]), e("hyphens-none", [["-webkit-hyphens", "none"], ["hyphens", "none"]]), e("hyphens-manual", [["-webkit-hyphens", "manual"], ["hyphens", "manual"]]), e("hyphens-auto", [["-webkit-hyphens", "auto"], ["hyphens", "auto"]]), e("whitespace-normal", [["white-space", "normal"]]), e("whitespace-nowrap", [["white-space", "nowrap"]]), e("whitespace-pre", [["white-space", "pre"]]), e("whitespace-pre-line", [["white-space", "pre-line"]]), e("whitespace-pre-wrap", [["white-space", "pre-wrap"]]), e("whitespace-break-spaces", [["white-space", "break-spaces"]]), e("text-wrap", [["text-wrap", "wrap"]]), e("text-nowrap", [["text-wrap", "nowrap"]]), e("text-balance", [["text-wrap", "balance"]]), e("text-pretty", [["text-wrap", "pretty"]]), e("break-normal", [["overflow-wrap", "normal"], ["word-break", "normal"]]), e("break-words", [["overflow-wrap", "break-word"]]), e("break-all", [["word-break", "break-all"]]), e("break-keep", [["word-break", "keep-all"]]);
  for (let [n, a] of [["rounded", ["border-radius"]], ["rounded-s", ["border-start-start-radius", "border-end-start-radius"]], ["rounded-e", ["border-start-end-radius", "border-end-end-radius"]], ["rounded-t", ["border-top-left-radius", "border-top-right-radius"]], ["rounded-r", ["border-top-right-radius", "border-bottom-right-radius"]], ["rounded-b", ["border-bottom-right-radius", "border-bottom-left-radius"]], ["rounded-l", ["border-top-left-radius", "border-bottom-left-radius"]], ["rounded-ss", ["border-start-start-radius"]], ["rounded-se", ["border-start-end-radius"]], ["rounded-ee", ["border-end-end-radius"]], ["rounded-es", ["border-end-start-radius"]], ["rounded-tl", ["border-top-left-radius"]], ["rounded-tr", ["border-top-right-radius"]], ["rounded-br", ["border-bottom-right-radius"]], ["rounded-bl", ["border-bottom-left-radius"]]]) e(`${n}-none`, a.map((f2) => [f2, "0"])), e(`${n}-full`, a.map((f2) => [f2, "calc(infinity * 1px)"])), o(n, { themeKeys: ["--radius"], handle: (f2) => a.map((k3) => _2(k3, f2)) });
  e("border-solid", [["--tw-border-style", "solid"], ["border-style", "solid"]]), e("border-dashed", [["--tw-border-style", "dashed"], ["border-style", "dashed"]]), e("border-dotted", [["--tw-border-style", "dotted"], ["border-style", "dotted"]]), e("border-double", [["--tw-border-style", "double"], ["border-style", "double"]]), e("border-hidden", [["--tw-border-style", "hidden"], ["border-style", "hidden"]]), e("border-none", [["--tw-border-style", "none"], ["border-style", "none"]]);
  {
    let a = function(f2, k3) {
      r.functional(f2, (b3) => {
        if (!b3.value) {
          if (b3.modifier) return;
          let $3 = t.get(["--default-border-width"]) ?? "1px", K3 = k3.width($3);
          return K3 ? [n(), ...K3] : void 0;
        }
        if (b3.value.kind === "arbitrary") {
          let $3 = b3.value.value;
          switch (b3.value.dataType ?? pe($3, ["color", "line-width", "length"])) {
            case "line-width":
            case "length": {
              if (b3.modifier) return;
              let C3 = k3.width($3);
              return C3 ? [n(), ...C3] : void 0;
            }
            default:
              return $3 = L3($3, b3.modifier, t), $3 === null ? void 0 : k3.color($3);
          }
        }
        {
          let $3 = q3(b3, t, ["--border-color", "--color"]);
          if ($3) return k3.color($3);
        }
        {
          if (b3.modifier) return;
          let $3 = t.resolve(b3.value.value, ["--border-width"]);
          if ($3) {
            let K3 = k3.width($3);
            return K3 ? [n(), ...K3] : void 0;
          }
          if (p(b3.value.value)) {
            let K3 = k3.width(`${b3.value.value}px`);
            return K3 ? [n(), ...K3] : void 0;
          }
        }
      }), i(f2, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--border-color", "--color"], modifiers: Array.from({ length: 21 }, (b3, $3) => `${$3 * 5}`), hasDefaultValue: true }, { values: ["0", "2", "4", "8"], valueThemeKeys: ["--border-width"] }]);
    };
    var x2 = a;
    let n = () => ae([V3("--tw-border-style", "solid")]);
    a("border", { width: (f2) => [_2("border-style", "var(--tw-border-style)"), _2("border-width", f2)], color: (f2) => [_2("border-color", f2)] }), a("border-x", { width: (f2) => [_2("border-inline-style", "var(--tw-border-style)"), _2("border-inline-width", f2)], color: (f2) => [_2("border-inline-color", f2)] }), a("border-y", { width: (f2) => [_2("border-block-style", "var(--tw-border-style)"), _2("border-block-width", f2)], color: (f2) => [_2("border-block-color", f2)] }), a("border-s", { width: (f2) => [_2("border-inline-start-style", "var(--tw-border-style)"), _2("border-inline-start-width", f2)], color: (f2) => [_2("border-inline-start-color", f2)] }), a("border-e", { width: (f2) => [_2("border-inline-end-style", "var(--tw-border-style)"), _2("border-inline-end-width", f2)], color: (f2) => [_2("border-inline-end-color", f2)] }), a("border-t", { width: (f2) => [_2("border-top-style", "var(--tw-border-style)"), _2("border-top-width", f2)], color: (f2) => [_2("border-top-color", f2)] }), a("border-r", { width: (f2) => [_2("border-right-style", "var(--tw-border-style)"), _2("border-right-width", f2)], color: (f2) => [_2("border-right-color", f2)] }), a("border-b", { width: (f2) => [_2("border-bottom-style", "var(--tw-border-style)"), _2("border-bottom-width", f2)], color: (f2) => [_2("border-bottom-color", f2)] }), a("border-l", { width: (f2) => [_2("border-left-style", "var(--tw-border-style)"), _2("border-left-width", f2)], color: (f2) => [_2("border-left-color", f2)] }), o("divide-x", { defaultValue: t.get(["--default-border-width"]) ?? "1px", themeKeys: ["--divide-width", "--border-width"], handleBareValue: ({ value: f2 }) => p(f2) ? `${f2}px` : null, handle: (f2) => [ae([V3("--tw-divide-x-reverse", "0")]), G2(":where(& > :not(:last-child))", [_2("--tw-sort", "divide-x-width"), n(), _2("--tw-divide-x-reverse", "0"), _2("border-inline-style", "var(--tw-border-style)"), _2("border-inline-start-width", `calc(${f2} * var(--tw-divide-x-reverse))`), _2("border-inline-end-width", `calc(${f2} * calc(1 - var(--tw-divide-x-reverse)))`)])] }), o("divide-y", { defaultValue: t.get(["--default-border-width"]) ?? "1px", themeKeys: ["--divide-width", "--border-width"], handleBareValue: ({ value: f2 }) => p(f2) ? `${f2}px` : null, handle: (f2) => [ae([V3("--tw-divide-y-reverse", "0")]), G2(":where(& > :not(:last-child))", [_2("--tw-sort", "divide-y-width"), n(), _2("--tw-divide-y-reverse", "0"), _2("border-bottom-style", "var(--tw-border-style)"), _2("border-top-style", "var(--tw-border-style)"), _2("border-top-width", `calc(${f2} * var(--tw-divide-y-reverse))`), _2("border-bottom-width", `calc(${f2} * calc(1 - var(--tw-divide-y-reverse)))`)])] }), i("divide-x", () => [{ values: ["0", "2", "4", "8"], valueThemeKeys: ["--divide-width", "--border-width"], hasDefaultValue: true }]), i("divide-y", () => [{ values: ["0", "2", "4", "8"], valueThemeKeys: ["--divide-width", "--border-width"], hasDefaultValue: true }]), e("divide-x-reverse", [() => ae([V3("--tw-divide-x-reverse", "0")]), () => G2(":where(& > :not(:last-child))", [_2("--tw-divide-x-reverse", "1")])]), e("divide-y-reverse", [() => ae([V3("--tw-divide-y-reverse", "0")]), () => G2(":where(& > :not(:last-child))", [_2("--tw-divide-y-reverse", "1")])]);
    for (let f2 of ["solid", "dashed", "dotted", "double", "none"]) e(`divide-${f2}`, [() => G2(":where(& > :not(:last-child))", [_2("--tw-sort", "divide-style"), _2("--tw-border-style", f2), _2("border-style", f2)])]);
  }
  e("bg-auto", [["background-size", "auto"]]), e("bg-cover", [["background-size", "cover"]]), e("bg-contain", [["background-size", "contain"]]), e("bg-fixed", [["background-attachment", "fixed"]]), e("bg-local", [["background-attachment", "local"]]), e("bg-scroll", [["background-attachment", "scroll"]]), e("bg-center", [["background-position", "center"]]), e("bg-top", [["background-position", "top"]]), e("bg-right-top", [["background-position", "right top"]]), e("bg-right", [["background-position", "right"]]), e("bg-right-bottom", [["background-position", "right bottom"]]), e("bg-bottom", [["background-position", "bottom"]]), e("bg-left-bottom", [["background-position", "left bottom"]]), e("bg-left", [["background-position", "left"]]), e("bg-left-top", [["background-position", "left top"]]), e("bg-repeat", [["background-repeat", "repeat"]]), e("bg-no-repeat", [["background-repeat", "no-repeat"]]), e("bg-repeat-x", [["background-repeat", "repeat-x"]]), e("bg-repeat-y", [["background-repeat", "repeat-y"]]), e("bg-repeat-round", [["background-repeat", "round"]]), e("bg-repeat-space", [["background-repeat", "space"]]), e("bg-none", [["background-image", "none"]]);
  {
    let f2 = function($3) {
      let K3 = "in oklab";
      if (($3 == null ? void 0 : $3.kind) === "named") switch ($3.value) {
        case "longer":
        case "shorter":
        case "increasing":
        case "decreasing":
          K3 = `in oklch ${$3.value} hue`;
          break;
        default:
          K3 = `in ${$3.value}`;
      }
      else ($3 == null ? void 0 : $3.kind) === "arbitrary" && (K3 = $3.value);
      return K3;
    }, k3 = function({ negative: $3 }) {
      return (K3) => {
        if (!K3.value) return;
        if (K3.value.kind === "arbitrary") {
          if (K3.modifier) return;
          let U3 = K3.value.value;
          switch (K3.value.dataType ?? pe(U3, ["angle"])) {
            case "angle":
              return U3 = $3 ? `calc(${U3} * -1)` : `${U3}`, [_2("--tw-gradient-position", U3), _2("background-image", `linear-gradient(var(--tw-gradient-stops,${U3}))`)];
            default:
              return $3 ? void 0 : [_2("--tw-gradient-position", U3), _2("background-image", `linear-gradient(var(--tw-gradient-stops,${U3}))`)];
          }
        }
        let C3 = K3.value.value;
        if (!$3 && a.has(C3)) C3 = a.get(C3);
        else if (p(C3)) C3 = $3 ? `calc(${C3}deg * -1)` : `${C3}deg`;
        else return;
        let A2 = f2(K3.modifier);
        return [_2("--tw-gradient-position", `${C3} ${A2}`), _2("background-image", "linear-gradient(var(--tw-gradient-stops))")];
      };
    }, b3 = function({ negative: $3 }) {
      return (K3) => {
        var _a2;
        if (((_a2 = K3.value) == null ? void 0 : _a2.kind) === "arbitrary") {
          if (K3.modifier) return;
          let U3 = K3.value.value;
          return [_2("--tw-gradient-position", U3), _2("background-image", `conic-gradient(var(--tw-gradient-stops,${U3}))`)];
        }
        let C3 = f2(K3.modifier);
        if (!K3.value) return [_2("--tw-gradient-position", C3), _2("background-image", "conic-gradient(var(--tw-gradient-stops))")];
        let A2 = K3.value.value;
        if (p(A2)) return A2 = $3 ? `calc(${A2} * -1)` : `${A2}deg`, [_2("--tw-gradient-position", `from ${A2} ${C3}`), _2("background-image", "conic-gradient(var(--tw-gradient-stops))")];
      };
    };
    var T3 = f2, N3 = k3, R3 = b3;
    let n = ["oklab", "oklch", "srgb", "hsl", "longer", "shorter", "increasing", "decreasing"], a = /* @__PURE__ */ new Map([["to-t", "to top"], ["to-tr", "to top right"], ["to-r", "to right"], ["to-br", "to bottom right"], ["to-b", "to bottom"], ["to-bl", "to bottom left"], ["to-l", "to left"], ["to-tl", "to top left"]]);
    r.functional("-bg-linear", k3({ negative: true })), r.functional("bg-linear", k3({ negative: false })), i("bg-linear", () => [{ values: [...a.keys()], modifiers: n }, { values: ["0", "30", "60", "90", "120", "150", "180", "210", "240", "270", "300", "330"], supportsNegative: true, modifiers: n }]), r.functional("-bg-conic", b3({ negative: true })), r.functional("bg-conic", b3({ negative: false })), i("bg-conic", () => [{ hasDefaultValue: true, modifiers: n }, { values: ["0", "30", "60", "90", "120", "150", "180", "210", "240", "270", "300", "330"], supportsNegative: true, modifiers: n }]), r.functional("bg-radial", ($3) => {
      if (!$3.value) {
        let K3 = f2($3.modifier);
        return [_2("--tw-gradient-position", K3), _2("background-image", "radial-gradient(var(--tw-gradient-stops))")];
      }
      if ($3.value.kind === "arbitrary") {
        if ($3.modifier) return;
        let K3 = $3.value.value;
        return [_2("--tw-gradient-position", K3), _2("background-image", `radial-gradient(var(--tw-gradient-stops,${K3}))`)];
      }
    }), i("bg-radial", () => [{ hasDefaultValue: true, modifiers: n }]);
  }
  r.functional("bg", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["image", "color", "percentage", "position", "bg-size", "length", "url"])) {
          case "percentage":
          case "position":
            return n.modifier ? void 0 : [_2("background-position", a)];
          case "bg-size":
          case "length":
          case "size":
            return n.modifier ? void 0 : [_2("background-size", a)];
          case "image":
          case "url":
            return n.modifier ? void 0 : [_2("background-image", a)];
          default:
            return a = L3(a, n.modifier, t), a === null ? void 0 : [_2("background-color", a)];
        }
      }
      {
        let a = q3(n, t, ["--background-color", "--color"]);
        if (a) return [_2("background-color", a)];
      }
      {
        if (n.modifier) return;
        let a = t.resolve(n.value.value, ["--background-image"]);
        if (a) return [_2("background-image", a)];
      }
    }
  }), i("bg", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: [], valueThemeKeys: ["--background-image"] }]);
  let w3 = () => ae([V3("--tw-gradient-position"), V3("--tw-gradient-from", "#0000", "<color>"), V3("--tw-gradient-via", "#0000", "<color>"), V3("--tw-gradient-to", "#0000", "<color>"), V3("--tw-gradient-stops"), V3("--tw-gradient-via-stops"), V3("--tw-gradient-from-position", "0%", "<length-percentage>"), V3("--tw-gradient-via-position", "50%", "<length-percentage>"), V3("--tw-gradient-to-position", "100%", "<length-percentage>")]);
  function v2(n, a) {
    r.functional(n, (f2) => {
      if (f2.value) {
        if (f2.value.kind === "arbitrary") {
          let k3 = f2.value.value;
          switch (f2.value.dataType ?? pe(k3, ["color", "length", "percentage"])) {
            case "length":
            case "percentage":
              return f2.modifier ? void 0 : a.position(k3);
            default:
              return k3 = L3(k3, f2.modifier, t), k3 === null ? void 0 : a.color(k3);
          }
        }
        {
          let k3 = q3(f2, t, ["--background-color", "--color"]);
          if (k3) return a.color(k3);
        }
        {
          if (f2.modifier) return;
          let k3 = t.resolve(f2.value.value, ["--gradient-color-stop-positions"]);
          if (k3) return a.position(k3);
          if (f2.value.value[f2.value.value.length - 1] === "%" && p(f2.value.value.slice(0, -1))) return a.position(f2.value.value);
        }
      }
    }), i(n, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (f2, k3) => `${k3 * 5}`) }, { values: Array.from({ length: 21 }, (f2, k3) => `${k3 * 5}%`), valueThemeKeys: ["--gradient-color-stop-positions"] }]);
  }
  v2("from", { color: (n) => [w3(), _2("--tw-sort", "--tw-gradient-from"), _2("--tw-gradient-from", n), _2("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")], position: (n) => [w3(), _2("--tw-gradient-from-position", n)] }), e("via-none", [["--tw-gradient-via-stops", "initial"]]), v2("via", { color: (n) => [w3(), _2("--tw-sort", "--tw-gradient-via"), _2("--tw-gradient-via", n), _2("--tw-gradient-via-stops", "var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position)"), _2("--tw-gradient-stops", "var(--tw-gradient-via-stops)")], position: (n) => [w3(), _2("--tw-gradient-via-position", n)] }), v2("to", { color: (n) => [w3(), _2("--tw-sort", "--tw-gradient-to"), _2("--tw-gradient-to", n), _2("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")], position: (n) => [w3(), _2("--tw-gradient-to-position", n)] }), e("box-decoration-slice", [["-webkit-box-decoration-break", "slice"], ["box-decoration-break", "slice"]]), e("box-decoration-clone", [["-webkit-box-decoration-break", "clone"], ["box-decoration-break", "clone"]]), e("bg-clip-text", [["background-clip", "text"]]), e("bg-clip-border", [["background-clip", "border-box"]]), e("bg-clip-padding", [["background-clip", "padding-box"]]), e("bg-clip-content", [["background-clip", "content-box"]]), e("bg-origin-border", [["background-origin", "border-box"]]), e("bg-origin-padding", [["background-origin", "padding-box"]]), e("bg-origin-content", [["background-origin", "content-box"]]);
  for (let n of ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"]) e(`bg-blend-${n}`, [["background-blend-mode", n]]), e(`mix-blend-${n}`, [["mix-blend-mode", n]]);
  e("mix-blend-plus-darker", [["mix-blend-mode", "plus-darker"]]), e("mix-blend-plus-lighter", [["mix-blend-mode", "plus-lighter"]]), e("fill-none", [["fill", "none"]]), r.functional("fill", (n) => {
    if (!n.value) return;
    if (n.value.kind === "arbitrary") {
      let f2 = L3(n.value.value, n.modifier, t);
      return f2 === null ? void 0 : [_2("fill", f2)];
    }
    let a = q3(n, t, ["--fill", "--color"]);
    if (a) return [_2("fill", a)];
  }), i("fill", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--fill", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }]), e("stroke-none", [["stroke", "none"]]), r.functional("stroke", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["color", "number", "length", "percentage"])) {
          case "number":
          case "length":
          case "percentage":
            return n.modifier ? void 0 : [_2("stroke-width", a)];
          default:
            return a = L3(n.value.value, n.modifier, t), a === null ? void 0 : [_2("stroke", a)];
        }
      }
      {
        let a = q3(n, t, ["--stroke", "--color"]);
        if (a) return [_2("stroke", a)];
      }
      {
        let a = t.resolve(n.value.value, ["--stroke-width"]);
        if (a) return [_2("stroke-width", a)];
        if (p(n.value.value)) return [_2("stroke-width", n.value.value)];
      }
    }
  }), i("stroke", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--stroke", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: ["0", "1", "2", "3"], valueThemeKeys: ["--stroke-width"] }]), e("object-contain", [["object-fit", "contain"]]), e("object-cover", [["object-fit", "cover"]]), e("object-fill", [["object-fit", "fill"]]), e("object-none", [["object-fit", "none"]]), e("object-scale-down", [["object-fit", "scale-down"]]), e("object-bottom", [["object-position", "bottom"]]), e("object-center", [["object-position", "center"]]), e("object-left", [["object-position", "left"]]), e("object-left-bottom", [["object-position", "left bottom"]]), e("object-left-top", [["object-position", "left top"]]), e("object-right", [["object-position", "right"]]), e("object-right-bottom", [["object-position", "right bottom"]]), e("object-right-top", [["object-position", "right top"]]), e("object-top", [["object-position", "top"]]), o("object", { themeKeys: ["--object-position"], handle: (n) => [_2("object-position", n)] });
  for (let [n, a] of [["p", "padding"], ["px", "padding-inline"], ["py", "padding-block"], ["ps", "padding-inline-start"], ["pe", "padding-inline-end"], ["pt", "padding-top"], ["pr", "padding-right"], ["pb", "padding-bottom"], ["pl", "padding-left"]]) s2(n, ["--padding", "--spacing"], (f2) => [_2(a, f2)]);
  e("text-left", [["text-align", "left"]]), e("text-center", [["text-align", "center"]]), e("text-right", [["text-align", "right"]]), e("text-justify", [["text-align", "justify"]]), e("text-start", [["text-align", "start"]]), e("text-end", [["text-align", "end"]]), s2("indent", ["--text-indent", "--spacing"], (n) => [_2("text-indent", n)], { supportsNegative: true }), e("align-baseline", [["vertical-align", "baseline"]]), e("align-top", [["vertical-align", "top"]]), e("align-middle", [["vertical-align", "middle"]]), e("align-bottom", [["vertical-align", "bottom"]]), e("align-text-top", [["vertical-align", "text-top"]]), e("align-text-bottom", [["vertical-align", "text-bottom"]]), e("align-sub", [["vertical-align", "sub"]]), e("align-super", [["vertical-align", "super"]]), o("align", { themeKeys: [], handle: (n) => [_2("vertical-align", n)] }), r.functional("font", (n) => {
    if (!(!n.value || n.modifier)) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["number", "generic-name", "family-name"])) {
          case "generic-name":
          case "family-name":
            return [_2("font-family", a)];
          default:
            return [ae([V3("--tw-font-weight")]), _2("--tw-font-weight", a), _2("font-weight", a)];
        }
      }
      {
        let a = t.resolveWith(n.value.value, ["--font"], ["--font-feature-settings", "--font-variation-settings"]);
        if (a) {
          let [f2, k3 = {}] = a;
          return [_2("font-family", f2), _2("font-feature-settings", k3["--font-feature-settings"]), _2("font-variation-settings", k3["--font-variation-settings"])];
        }
      }
      {
        let a = t.resolve(n.value.value, ["--font-weight"]);
        if (a) return [ae([V3("--tw-font-weight")]), _2("--tw-font-weight", a), _2("font-weight", a)];
      }
    }
  }), i("font", () => [{ values: [], valueThemeKeys: ["--font"] }, { values: [], valueThemeKeys: ["--font-weight"] }]), e("uppercase", [["text-transform", "uppercase"]]), e("lowercase", [["text-transform", "lowercase"]]), e("capitalize", [["text-transform", "capitalize"]]), e("normal-case", [["text-transform", "none"]]), e("italic", [["font-style", "italic"]]), e("not-italic", [["font-style", "normal"]]), e("underline", [["text-decoration-line", "underline"]]), e("overline", [["text-decoration-line", "overline"]]), e("line-through", [["text-decoration-line", "line-through"]]), e("no-underline", [["text-decoration-line", "none"]]), e("font-stretch-normal", [["font-stretch", "normal"]]), e("font-stretch-ultra-condensed", [["font-stretch", "ultra-condensed"]]), e("font-stretch-extra-condensed", [["font-stretch", "extra-condensed"]]), e("font-stretch-condensed", [["font-stretch", "condensed"]]), e("font-stretch-semi-condensed", [["font-stretch", "semi-condensed"]]), e("font-stretch-semi-expanded", [["font-stretch", "semi-expanded"]]), e("font-stretch-expanded", [["font-stretch", "expanded"]]), e("font-stretch-extra-expanded", [["font-stretch", "extra-expanded"]]), e("font-stretch-ultra-expanded", [["font-stretch", "ultra-expanded"]]), o("font-stretch", { handleBareValue: ({ value: n }) => {
    if (!n.endsWith("%")) return null;
    let a = Number(n.slice(0, -1));
    return !p(a) || Number.isNaN(a) || a < 50 || a > 200 ? null : n;
  }, handle: (n) => [_2("font-stretch", n)] }), i("font-stretch", () => [{ values: ["50%", "75%", "90%", "95%", "100%", "105%", "110%", "125%", "150%", "200%"] }]), c("placeholder", { themeKeys: ["--background-color", "--color"], handle: (n) => [G2("&::placeholder", [_2("--tw-sort", "placeholder-color"), _2("color", n)])] }), e("decoration-solid", [["text-decoration-style", "solid"]]), e("decoration-double", [["text-decoration-style", "double"]]), e("decoration-dotted", [["text-decoration-style", "dotted"]]), e("decoration-dashed", [["text-decoration-style", "dashed"]]), e("decoration-wavy", [["text-decoration-style", "wavy"]]), e("decoration-auto", [["text-decoration-thickness", "auto"]]), e("decoration-from-font", [["text-decoration-thickness", "from-font"]]), r.functional("decoration", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["color", "length", "percentage"])) {
          case "length":
          case "percentage":
            return n.modifier ? void 0 : [_2("text-decoration-thickness", a)];
          default:
            return a = L3(a, n.modifier, t), a === null ? void 0 : [_2("text-decoration-color", a)];
        }
      }
      {
        let a = t.resolve(n.value.value, ["--text-decoration-thickness"]);
        if (a) return n.modifier ? void 0 : [_2("text-decoration-thickness", a)];
        if (p(n.value.value)) return n.modifier ? void 0 : [_2("text-decoration-thickness", `${n.value.value}px`)];
      }
      {
        let a = q3(n, t, ["--text-decoration-color", "--color"]);
        if (a) return [_2("text-decoration-color", a)];
      }
    }
  }), i("decoration", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--text-decoration-color", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: ["0", "1", "2"], valueThemeKeys: ["--text-decoration-thickness"] }]), e("animate-none", [["animation", "none"]]), o("animate", { themeKeys: ["--animate"], handle: (n) => [_2("animation", n)] });
  {
    let n = ["var(--tw-blur,)", "var(--tw-brightness,)", "var(--tw-contrast,)", "var(--tw-grayscale,)", "var(--tw-hue-rotate,)", "var(--tw-invert,)", "var(--tw-saturate,)", "var(--tw-sepia,)", "var(--tw-drop-shadow,)"].join(" "), a = ["var(--tw-backdrop-blur,)", "var(--tw-backdrop-brightness,)", "var(--tw-backdrop-contrast,)", "var(--tw-backdrop-grayscale,)", "var(--tw-backdrop-hue-rotate,)", "var(--tw-backdrop-invert,)", "var(--tw-backdrop-opacity,)", "var(--tw-backdrop-saturate,)", "var(--tw-backdrop-sepia,)"].join(" "), f2 = () => ae([V3("--tw-blur"), V3("--tw-brightness"), V3("--tw-contrast"), V3("--tw-grayscale"), V3("--tw-hue-rotate"), V3("--tw-invert"), V3("--tw-opacity"), V3("--tw-saturate"), V3("--tw-sepia")]), k3 = () => ae([V3("--tw-backdrop-blur"), V3("--tw-backdrop-brightness"), V3("--tw-backdrop-contrast"), V3("--tw-backdrop-grayscale"), V3("--tw-backdrop-hue-rotate"), V3("--tw-backdrop-invert"), V3("--tw-backdrop-opacity"), V3("--tw-backdrop-saturate"), V3("--tw-backdrop-sepia")]);
    r.functional("filter", (b3) => {
      if (!b3.modifier) {
        if (b3.value === null) return [f2(), _2("filter", n)];
        if (b3.value.kind === "arbitrary") return [_2("filter", b3.value.value)];
        switch (b3.value.value) {
          case "none":
            return [_2("filter", "none")];
        }
      }
    }), r.functional("backdrop-filter", (b3) => {
      if (!b3.modifier) {
        if (b3.value === null) return [k3(), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)];
        if (b3.value.kind === "arbitrary") return [_2("-webkit-backdrop-filter", b3.value.value), _2("backdrop-filter", b3.value.value)];
        switch (b3.value.value) {
          case "none":
            return [_2("-webkit-backdrop-filter", "none"), _2("backdrop-filter", "none")];
        }
      }
    }), o("blur", { themeKeys: ["--blur"], handle: (b3) => [f2(), _2("--tw-blur", `blur(${b3})`), _2("filter", n)] }), e("blur-none", [f2, ["--tw-blur", " "], ["filter", n]]), o("backdrop-blur", { themeKeys: ["--backdrop-blur", "--blur"], handle: (b3) => [k3(), _2("--tw-backdrop-blur", `blur(${b3})`), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)] }), e("backdrop-blur-none", [k3, ["--tw-backdrop-blur", " "], ["-webkit-backdrop-filter", a], ["backdrop-filter", a]]), o("brightness", { themeKeys: ["--brightness"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, handle: (b3) => [f2(), _2("--tw-brightness", `brightness(${b3})`), _2("filter", n)] }), o("backdrop-brightness", { themeKeys: ["--backdrop-brightness", "--brightness"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, handle: (b3) => [k3(), _2("--tw-backdrop-brightness", `brightness(${b3})`), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)] }), i("brightness", () => [{ values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--brightness"] }]), i("backdrop-brightness", () => [{ values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--backdrop-brightness", "--brightness"] }]), o("contrast", { themeKeys: ["--contrast"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, handle: (b3) => [f2(), _2("--tw-contrast", `contrast(${b3})`), _2("filter", n)] }), o("backdrop-contrast", { themeKeys: ["--backdrop-contrast", "--contrast"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, handle: (b3) => [k3(), _2("--tw-backdrop-contrast", `contrast(${b3})`), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)] }), i("contrast", () => [{ values: ["0", "50", "75", "100", "125", "150", "200"], valueThemeKeys: ["--contrast"] }]), i("backdrop-contrast", () => [{ values: ["0", "50", "75", "100", "125", "150", "200"], valueThemeKeys: ["--backdrop-contrast", "--contrast"] }]), o("grayscale", { themeKeys: ["--grayscale"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, defaultValue: "100%", handle: (b3) => [f2(), _2("--tw-grayscale", `grayscale(${b3})`), _2("filter", n)] }), o("backdrop-grayscale", { themeKeys: ["--backdrop-grayscale", "--grayscale"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, defaultValue: "100%", handle: (b3) => [k3(), _2("--tw-backdrop-grayscale", `grayscale(${b3})`), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)] }), i("grayscale", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--grayscale"], hasDefaultValue: true }]), i("backdrop-grayscale", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--backdrop-grayscale", "--grayscale"], hasDefaultValue: true }]), o("hue-rotate", { supportsNegative: true, themeKeys: ["--hue-rotate"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}deg` : null, handle: (b3) => [f2(), _2("--tw-hue-rotate", `hue-rotate(${b3})`), _2("filter", n)] }), o("backdrop-hue-rotate", { supportsNegative: true, themeKeys: ["--backdrop-hue-rotate", "--hue-rotate"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}deg` : null, handle: (b3) => [k3(), _2("--tw-backdrop-hue-rotate", `hue-rotate(${b3})`), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)] }), i("hue-rotate", () => [{ values: ["0", "15", "30", "60", "90", "180"], valueThemeKeys: ["--hue-rotate"] }]), i("backdrop-hue-rotate", () => [{ values: ["0", "15", "30", "60", "90", "180"], valueThemeKeys: ["--backdrop-hue-rotate", "--hue-rotate"] }]), o("invert", { themeKeys: ["--invert"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, defaultValue: "100%", handle: (b3) => [f2(), _2("--tw-invert", `invert(${b3})`), _2("filter", n)] }), o("backdrop-invert", { themeKeys: ["--backdrop-invert", "--invert"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, defaultValue: "100%", handle: (b3) => [k3(), _2("--tw-backdrop-invert", `invert(${b3})`), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)] }), i("invert", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--invert"], hasDefaultValue: true }]), i("backdrop-invert", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--backdrop-invert", "--invert"], hasDefaultValue: true }]), o("saturate", { themeKeys: ["--saturate"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, handle: (b3) => [f2(), _2("--tw-saturate", `saturate(${b3})`), _2("filter", n)] }), o("backdrop-saturate", { themeKeys: ["--backdrop-saturate", "--saturate"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, handle: (b3) => [k3(), _2("--tw-backdrop-saturate", `saturate(${b3})`), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)] }), i("saturate", () => [{ values: ["0", "50", "100", "150", "200"], valueThemeKeys: ["--saturate"] }]), i("backdrop-saturate", () => [{ values: ["0", "50", "100", "150", "200"], valueThemeKeys: ["--backdrop-saturate", "--saturate"] }]), o("sepia", { themeKeys: ["--sepia"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, defaultValue: "100%", handle: (b3) => [f2(), _2("--tw-sepia", `sepia(${b3})`), _2("filter", n)] }), o("backdrop-sepia", { themeKeys: ["--backdrop-sepia", "--sepia"], handleBareValue: ({ value: b3 }) => p(b3) ? `${b3}%` : null, defaultValue: "100%", handle: (b3) => [k3(), _2("--tw-backdrop-sepia", `sepia(${b3})`), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)] }), i("sepia", () => [{ values: ["0", "50", "100"], valueThemeKeys: ["--sepia"], hasDefaultValue: true }]), i("backdrop-sepia", () => [{ values: ["0", "50", "100"], valueThemeKeys: ["--backdrop-sepia", "--sepia"], hasDefaultValue: true }]), e("drop-shadow-none", [f2, ["--tw-drop-shadow", " "], ["filter", n]]), o("drop-shadow", { themeKeys: ["--drop-shadow"], handle: (b3) => [f2(), _2("--tw-drop-shadow", u(b3, ",").map(($3) => `drop-shadow(${$3})`).join(" ")), _2("filter", n)] }), o("backdrop-opacity", { themeKeys: ["--backdrop-opacity", "--opacity"], handleBareValue: ({ value: b3 }) => de(b3) ? `${b3}%` : null, handle: (b3) => [k3(), _2("--tw-backdrop-opacity", `opacity(${b3})`), _2("-webkit-backdrop-filter", a), _2("backdrop-filter", a)] }), i("backdrop-opacity", () => [{ values: Array.from({ length: 21 }, (b3, $3) => `${$3 * 5}`), valueThemeKeys: ["--backdrop-opacity", "--opacity"] }]);
  }
  {
    let n = `var(--tw-ease, ${t.resolve(null, ["--default-transition-timing-function"]) ?? "ease"})`, a = `var(--tw-duration, ${t.resolve(null, ["--default-transition-duration"]) ?? "0s"})`;
    e("transition-none", [["transition-property", "none"]]), e("transition-all", [["transition-property", "all"], ["transition-timing-function", n], ["transition-duration", a]]), e("transition-colors", [["transition-property", "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to"], ["transition-timing-function", n], ["transition-duration", a]]), e("transition-opacity", [["transition-property", "opacity"], ["transition-timing-function", n], ["transition-duration", a]]), e("transition-shadow", [["transition-property", "box-shadow"], ["transition-timing-function", n], ["transition-duration", a]]), e("transition-transform", [["transition-property", "transform, translate, scale, rotate"], ["transition-timing-function", n], ["transition-duration", a]]), o("transition", { defaultValue: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter", themeKeys: ["--transition-property"], handle: (f2) => [_2("transition-property", f2), _2("transition-timing-function", n), _2("transition-duration", a)] }), e("transition-discrete", [["transition-behavior", "allow-discrete"]]), e("transition-normal", [["transition-behavior", "normal"]]), o("delay", { handleBareValue: ({ value: f2 }) => p(f2) ? `${f2}ms` : null, themeKeys: ["--transition-delay"], handle: (f2) => [_2("transition-delay", f2)] });
    {
      let f2 = () => ae([V3("--tw-duration")]);
      e("duration-initial", [f2, ["--tw-duration", "initial"]]), r.functional("duration", (k3) => {
        if (k3.modifier || !k3.value) return;
        let b3 = null;
        if (k3.value.kind === "arbitrary" ? b3 = k3.value.value : (b3 = t.resolve(k3.value.fraction ?? k3.value.value, ["--transition-duration"]), b3 === null && p(k3.value.value) && (b3 = `${k3.value.value}ms`)), b3 !== null) return [f2(), _2("--tw-duration", b3), _2("transition-duration", b3)];
      });
    }
    i("delay", () => [{ values: ["75", "100", "150", "200", "300", "500", "700", "1000"], valueThemeKeys: ["--transition-delay"] }]), i("duration", () => [{ values: ["75", "100", "150", "200", "300", "500", "700", "1000"], valueThemeKeys: ["--transition-duration"] }]);
  }
  {
    let n = () => ae([V3("--tw-ease")]);
    e("ease-initial", [n, ["--tw-ease", "initial"]]), e("ease-linear", [n, ["--tw-ease", "linear"], ["transition-timing-function", "linear"]]), o("ease", { themeKeys: ["--ease"], handle: (a) => [n(), _2("--tw-ease", a), _2("transition-timing-function", a)] });
  }
  e("will-change-auto", [["will-change", "auto"]]), e("will-change-scroll", [["will-change", "scroll-position"]]), e("will-change-contents", [["will-change", "contents"]]), e("will-change-transform", [["will-change", "transform"]]), o("will-change", { themeKeys: [], handle: (n) => [_2("will-change", n)] }), e("content-none", [["--tw-content", "none"], ["content", "none"]]), o("content", { themeKeys: [], handle: (n) => [ae([V3("--tw-content", '""')]), _2("--tw-content", n), _2("content", "var(--tw-content)")] });
  {
    let n = "var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,)", a = () => ae([V3("--tw-contain-size"), V3("--tw-contain-layout"), V3("--tw-contain-paint"), V3("--tw-contain-style")]);
    e("contain-none", [["contain", "none"]]), e("contain-content", [["contain", "content"]]), e("contain-strict", [["contain", "strict"]]), e("contain-size", [a, ["--tw-contain-size", "size"], ["contain", n]]), e("contain-inline-size", [a, ["--tw-contain-size", "inline-size"], ["contain", n]]), e("contain-layout", [a, ["--tw-contain-layout", "layout"], ["contain", n]]), e("contain-paint", [a, ["--tw-contain-paint", "paint"], ["contain", n]]), e("contain-style", [a, ["--tw-contain-style", "style"], ["contain", n]]), o("contain", { themeKeys: [], handle: (f2) => [_2("contain", f2)] });
  }
  e("forced-color-adjust-none", [["forced-color-adjust", "none"]]), e("forced-color-adjust-auto", [["forced-color-adjust", "auto"]]), e("leading-none", [() => ae([V3("--tw-leading")]), ["--tw-leading", "1"], ["line-height", "1"]]), s2("leading", ["--leading", "--spacing"], (n) => [ae([V3("--tw-leading")]), _2("--tw-leading", n), _2("line-height", n)]), o("tracking", { supportsNegative: true, themeKeys: ["--tracking"], handle: (n) => [ae([V3("--tw-tracking")]), _2("--tw-tracking", n), _2("letter-spacing", n)] }), e("antialiased", [["-webkit-font-smoothing", "antialiased"], ["-moz-osx-font-smoothing", "grayscale"]]), e("subpixel-antialiased", [["-webkit-font-smoothing", "auto"], ["-moz-osx-font-smoothing", "auto"]]);
  {
    let n = "var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,)", a = () => ae([V3("--tw-ordinal"), V3("--tw-slashed-zero"), V3("--tw-numeric-figure"), V3("--tw-numeric-spacing"), V3("--tw-numeric-fraction")]);
    e("normal-nums", [["font-variant-numeric", "normal"]]), e("ordinal", [a, ["--tw-ordinal", "ordinal"], ["font-variant-numeric", n]]), e("slashed-zero", [a, ["--tw-slashed-zero", "slashed-zero"], ["font-variant-numeric", n]]), e("lining-nums", [a, ["--tw-numeric-figure", "lining-nums"], ["font-variant-numeric", n]]), e("oldstyle-nums", [a, ["--tw-numeric-figure", "oldstyle-nums"], ["font-variant-numeric", n]]), e("proportional-nums", [a, ["--tw-numeric-spacing", "proportional-nums"], ["font-variant-numeric", n]]), e("tabular-nums", [a, ["--tw-numeric-spacing", "tabular-nums"], ["font-variant-numeric", n]]), e("diagonal-fractions", [a, ["--tw-numeric-fraction", "diagonal-fractions"], ["font-variant-numeric", n]]), e("stacked-fractions", [a, ["--tw-numeric-fraction", "stacked-fractions"], ["font-variant-numeric", n]]);
  }
  {
    let n = () => ae([V3("--tw-outline-style", "solid")]);
    r.static("outline-hidden", () => [_2("outline-style", "none"), $2("@media", "(forced-colors: active)", [_2("outline", "2px solid transparent"), _2("outline-offset", "2px")])]), e("outline-none", [["--tw-outline-style", "none"], ["outline-style", "none"]]), e("outline-solid", [["--tw-outline-style", "solid"], ["outline-style", "solid"]]), e("outline-dashed", [["--tw-outline-style", "dashed"], ["outline-style", "dashed"]]), e("outline-dotted", [["--tw-outline-style", "dotted"], ["outline-style", "dotted"]]), e("outline-double", [["--tw-outline-style", "double"], ["outline-style", "double"]]), r.functional("outline", (a) => {
      if (a.value === null) return a.modifier ? void 0 : [n(), _2("outline-style", "var(--tw-outline-style)"), _2("outline-width", "1px")];
      if (a.value.kind === "arbitrary") {
        let f2 = a.value.value;
        switch (a.value.dataType ?? pe(f2, ["color", "length", "number", "percentage"])) {
          case "length":
          case "number":
          case "percentage":
            return a.modifier ? void 0 : [n(), _2("outline-style", "var(--tw-outline-style)"), _2("outline-width", f2)];
          default:
            return f2 = L3(f2, a.modifier, t), f2 === null ? void 0 : [_2("outline-color", f2)];
        }
      }
      {
        let f2 = q3(a, t, ["--outline-color", "--color"]);
        if (f2) return [_2("outline-color", f2)];
      }
      {
        if (a.modifier) return;
        let f2 = t.resolve(a.value.value, ["--outline-width"]);
        if (f2) return [n(), _2("outline-style", "var(--tw-outline-style)"), _2("outline-width", f2)];
        if (p(a.value.value)) return [n(), _2("outline-style", "var(--tw-outline-style)"), _2("outline-width", `${a.value.value}px`)];
      }
    }), i("outline", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--outline-color", "--color"], modifiers: Array.from({ length: 21 }, (a, f2) => `${f2 * 5}`), hasDefaultValue: true }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--outline-width"] }]), o("outline-offset", { supportsNegative: true, themeKeys: ["--outline-offset"], handleBareValue: ({ value: a }) => p(a) ? `${a}px` : null, handle: (a) => [_2("outline-offset", a)] }), i("outline-offset", () => [{ supportsNegative: true, values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--outline-offset"] }]);
  }
  o("opacity", { themeKeys: ["--opacity"], handleBareValue: ({ value: n }) => de(n) ? `${n}%` : null, handle: (n) => [_2("opacity", n)] }), i("opacity", () => [{ values: Array.from({ length: 21 }, (n, a) => `${a * 5}`), valueThemeKeys: ["--opacity"] }]), e("underline-offset-auto", [["text-underline-offset", "auto"]]), o("underline-offset", { supportsNegative: true, themeKeys: ["--text-underline-offset"], handleBareValue: ({ value: n }) => p(n) ? `${n}px` : null, handle: (n) => [_2("text-underline-offset", n)] }), i("underline-offset", () => [{ supportsNegative: true, values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--text-underline-offset"] }]), r.functional("text", (n) => {
    if (n.value) {
      if (n.value.kind === "arbitrary") {
        let a = n.value.value;
        switch (n.value.dataType ?? pe(a, ["color", "length", "percentage", "absolute-size", "relative-size"])) {
          case "size":
          case "length":
          case "percentage":
          case "absolute-size":
          case "relative-size": {
            if (n.modifier) {
              let k3 = n.modifier.kind === "arbitrary" ? n.modifier.value : t.resolve(n.modifier.value, ["--leading"]);
              if (!k3 && ue(n.modifier.value)) {
                let b3 = t.resolve(null, ["--spacing"]);
                if (!b3) return null;
                k3 = `calc(${b3} * ${n.modifier.value})`;
              }
              return !k3 && n.modifier.value === "none" && (k3 = "1"), k3 ? [_2("font-size", a), _2("line-height", k3)] : null;
            }
            return [_2("font-size", a)];
          }
          default:
            return a = L3(a, n.modifier, t), a === null ? void 0 : [_2("color", a)];
        }
      }
      {
        let a = q3(n, t, ["--text-color", "--color"]);
        if (a) return [_2("color", a)];
      }
      {
        let a = t.resolveWith(n.value.value, ["--text"], ["--line-height", "--letter-spacing", "--font-weight"]);
        if (a) {
          let [f2, k3 = {}] = Array.isArray(a) ? a : [a];
          if (n.modifier) {
            let b3 = n.modifier.kind === "arbitrary" ? n.modifier.value : t.resolve(n.modifier.value, ["--leading"]);
            if (!b3 && ue(n.modifier.value)) {
              let K3 = t.resolve(null, ["--spacing"]);
              if (!K3) return null;
              b3 = `calc(${K3} * ${n.modifier.value})`;
            }
            if (!b3 && n.modifier.value === "none" && (b3 = "1"), !b3) return null;
            let $3 = [_2("font-size", f2)];
            return b3 && $3.push(_2("line-height", b3)), $3;
          }
          return typeof k3 == "string" ? [_2("font-size", f2), _2("line-height", k3)] : [_2("font-size", f2), _2("line-height", k3["--line-height"] ? `var(--tw-leading, ${k3["--line-height"]})` : void 0), _2("letter-spacing", k3["--letter-spacing"] ? `var(--tw-tracking, ${k3["--letter-spacing"]})` : void 0), _2("font-weight", k3["--font-weight"] ? `var(--tw-font-weight, ${k3["--font-weight"]})` : void 0)];
        }
      }
    }
  }), i("text", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--text-color", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: [], valueThemeKeys: ["--text"], modifiers: [], modifierThemeKeys: ["--leading"] }]);
  {
    let b3 = function(C3) {
      return `var(--tw-ring-inset,) 0 0 0 calc(${C3} + var(--tw-ring-offset-width)) var(--tw-ring-color, ${k3})`;
    }, $3 = function(C3) {
      return `inset 0 0 0 ${C3} var(--tw-inset-ring-color, currentColor)`;
    };
    var E3 = b3, P3 = $3;
    let n = ["var(--tw-inset-shadow)", "var(--tw-inset-ring-shadow)", "var(--tw-ring-offset-shadow)", "var(--tw-ring-shadow)", "var(--tw-shadow)"].join(", "), a = "0 0 #0000", f2 = () => ae([V3("--tw-shadow", a), V3("--tw-shadow-color"), V3("--tw-inset-shadow", a), V3("--tw-inset-shadow-color"), V3("--tw-ring-color"), V3("--tw-ring-shadow", a), V3("--tw-inset-ring-color"), V3("--tw-inset-ring-shadow", a), V3("--tw-ring-inset"), V3("--tw-ring-offset-width", "0px", "<length>"), V3("--tw-ring-offset-color", "#fff"), V3("--tw-ring-offset-shadow", a)]);
    e("shadow-initial", [f2, ["--tw-shadow-color", "initial"]]), r.functional("shadow", (C3) => {
      if (!C3.value) {
        let A2 = t.get(["--shadow"]);
        return A2 === null ? void 0 : [f2(), _2("--tw-shadow", ne2(A2, (U3) => `var(--tw-shadow-color, ${U3})`)), _2("box-shadow", n)];
      }
      if (C3.value.kind === "arbitrary") {
        let A2 = C3.value.value;
        switch (C3.value.dataType ?? pe(A2, ["color"])) {
          case "color":
            return A2 = L3(A2, C3.modifier, t), A2 === null ? void 0 : [f2(), _2("--tw-shadow-color", A2)];
          default:
            return [f2(), _2("--tw-shadow", ne2(A2, (ve) => `var(--tw-shadow-color, ${ve})`)), _2("box-shadow", n)];
        }
      }
      switch (C3.value.value) {
        case "none":
          return C3.modifier ? void 0 : [f2(), _2("--tw-shadow", a), _2("box-shadow", n)];
      }
      {
        let A2 = t.get([`--shadow-${C3.value.value}`]);
        if (A2) return C3.modifier ? void 0 : [f2(), _2("--tw-shadow", ne2(A2, (U3) => `var(--tw-shadow-color, ${U3})`)), _2("box-shadow", n)];
      }
      {
        let A2 = q3(C3, t, ["--box-shadow-color", "--color"]);
        if (A2) return [f2(), _2("--tw-shadow-color", A2)];
      }
    }), i("shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--box-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (C3, A2) => `${A2 * 5}`) }, { values: ["none"], valueThemeKeys: ["--shadow"], hasDefaultValue: true }]), e("inset-shadow-initial", [f2, ["--tw-inset-shadow-color", "initial"]]), r.functional("inset-shadow", (C3) => {
      if (!C3.value) {
        let A2 = t.get(["--inset-shadow"]);
        return A2 === null ? void 0 : [f2(), _2("--tw-inset-shadow", ne2(A2, (U3) => `var(--tw-inset-shadow-color, ${U3})`)), _2("box-shadow", n)];
      }
      if (C3.value.kind === "arbitrary") {
        let A2 = C3.value.value;
        switch (C3.value.dataType ?? pe(A2, ["color"])) {
          case "color":
            return A2 = L3(A2, C3.modifier, t), A2 === null ? void 0 : [f2(), _2("--tw-inset-shadow-color", A2)];
          default:
            return [f2(), _2("--tw-inset-shadow", `inset ${ne2(A2, (ve) => `var(--tw-inset-shadow-color, ${ve})`)}`), _2("box-shadow", n)];
        }
      }
      switch (C3.value.value) {
        case "none":
          return C3.modifier ? void 0 : [f2(), _2("--tw-inset-shadow", a), _2("box-shadow", n)];
      }
      {
        let A2 = t.get([`--inset-shadow-${C3.value.value}`]);
        if (A2) return C3.modifier ? void 0 : [f2(), _2("--tw-inset-shadow", ne2(A2, (U3) => `var(--tw-inset-shadow-color, ${U3})`)), _2("box-shadow", n)];
      }
      {
        let A2 = q3(C3, t, ["--box-shadow-color", "--color"]);
        if (A2) return [f2(), _2("--tw-inset-shadow-color", A2)];
      }
    }), i("inset-shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--box-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (C3, A2) => `${A2 * 5}`) }, { values: [], valueThemeKeys: ["--inset-shadow"], hasDefaultValue: true }]), e("ring-inset", [f2, ["--tw-ring-inset", "inset"]]);
    let k3 = t.get(["--default-ring-color"]) ?? "currentColor";
    r.functional("ring", (C3) => {
      if (!C3.value) {
        if (C3.modifier) return;
        let A2 = t.get(["--default-ring-width"]) ?? "1px";
        return [f2(), _2("--tw-ring-shadow", b3(A2)), _2("box-shadow", n)];
      }
      if (C3.value.kind === "arbitrary") {
        let A2 = C3.value.value;
        switch (C3.value.dataType ?? pe(A2, ["color", "length"])) {
          case "length":
            return C3.modifier ? void 0 : [f2(), _2("--tw-ring-shadow", b3(A2)), _2("box-shadow", n)];
          default:
            return A2 = L3(A2, C3.modifier, t), A2 === null ? void 0 : [_2("--tw-ring-color", A2)];
        }
      }
      {
        let A2 = q3(C3, t, ["--ring-color", "--color"]);
        if (A2) return [_2("--tw-ring-color", A2)];
      }
      {
        if (C3.modifier) return;
        let A2 = t.resolve(C3.value.value, ["--ring-width"]);
        if (A2 === null && p(C3.value.value) && (A2 = `${C3.value.value}px`), A2) return [f2(), _2("--tw-ring-shadow", b3(A2)), _2("box-shadow", n)];
      }
    }), i("ring", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-color", "--color"], modifiers: Array.from({ length: 21 }, (C3, A2) => `${A2 * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-width"], hasDefaultValue: true }]), r.functional("inset-ring", (C3) => {
      if (!C3.value) return C3.modifier ? void 0 : [f2(), _2("--tw-inset-ring-shadow", $3("1px")), _2("box-shadow", n)];
      if (C3.value.kind === "arbitrary") {
        let A2 = C3.value.value;
        switch (C3.value.dataType ?? pe(A2, ["color", "length"])) {
          case "length":
            return C3.modifier ? void 0 : [f2(), _2("--tw-inset-ring-shadow", $3(A2)), _2("box-shadow", n)];
          default:
            return A2 = L3(A2, C3.modifier, t), A2 === null ? void 0 : [_2("--tw-inset-ring-color", A2)];
        }
      }
      {
        let A2 = q3(C3, t, ["--ring-color", "--color"]);
        if (A2) return [_2("--tw-inset-ring-color", A2)];
      }
      {
        if (C3.modifier) return;
        let A2 = t.resolve(C3.value.value, ["--ring-width"]);
        if (A2 === null && p(C3.value.value) && (A2 = `${C3.value.value}px`), A2) return [f2(), _2("--tw-inset-ring-shadow", $3(A2)), _2("box-shadow", n)];
      }
    }), i("inset-ring", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-color", "--color"], modifiers: Array.from({ length: 21 }, (C3, A2) => `${A2 * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-width"], hasDefaultValue: true }]);
    let K3 = "var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)";
    r.functional("ring-offset", (C3) => {
      if (C3.value) {
        if (C3.value.kind === "arbitrary") {
          let A2 = C3.value.value;
          switch (C3.value.dataType ?? pe(A2, ["color", "length"])) {
            case "length":
              return C3.modifier ? void 0 : [_2("--tw-ring-offset-width", A2), _2("--tw-ring-offset-shadow", K3)];
            default:
              return A2 = L3(A2, C3.modifier, t), A2 === null ? void 0 : [_2("--tw-ring-offset-color", A2)];
          }
        }
        {
          let A2 = t.resolve(C3.value.value, ["--ring-offset-width"]);
          if (A2) return C3.modifier ? void 0 : [_2("--tw-ring-offset-width", A2), _2("--tw-ring-offset-shadow", K3)];
          if (p(C3.value.value)) return C3.modifier ? void 0 : [_2("--tw-ring-offset-width", `${C3.value.value}px`), _2("--tw-ring-offset-shadow", K3)];
        }
        {
          let A2 = q3(C3, t, ["--ring-offset-color", "--color"]);
          if (A2) return [_2("--tw-ring-offset-color", A2)];
        }
      }
    });
  }
  return i("ring-offset", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-offset-color", "--color"], modifiers: Array.from({ length: 21 }, (n, a) => `${a * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-offset-width"] }]), r.functional("@container", (n) => {
    let a = null;
    if (n.value === null ? a = "inline-size" : n.value.kind === "arbitrary" ? a = n.value.value : n.value.kind === "named" && n.value.value === "normal" && (a = "normal"), a !== null) return n.modifier ? [_2("container-type", a), _2("container-name", n.modifier.value)] : [_2("container-type", a)];
  }), i("@container", () => [{ values: ["normal"], valueThemeKeys: [], hasDefaultValue: true }]), r;
}
function gt(t) {
  let r = t.params;
  return mr.test(r) ? (i) => {
    let e = /* @__PURE__ */ new Set(), o = /* @__PURE__ */ new Set();
    b2(t.nodes, (c) => {
      if (c.kind !== "declaration" || !c.value || !c.value.includes("--value(") && !c.value.includes("--modifier(")) return;
      let s2 = z3(c.value);
      Y3(s2, (m2) => {
        if (m2.kind !== "function" || m2.value !== "--value" && m2.value !== "--modifier") return;
        let p2 = u(B3(m2.nodes), ",");
        for (let [u2, d2] of p2.entries()) d2 = d2.replace(/\\\*/g, "*"), d2 = d2.replace(/--(.*?)\s--(.*?)/g, "--$1-*--$2"), d2 = d2.replace(/\s+/g, ""), d2 = d2.replace(/(-\*){2,}/g, "-*"), d2[0] === "-" && d2[1] === "-" && !d2.includes("-*") && (d2 += "-*"), p2[u2] = d2;
        m2.nodes = z3(p2.join(","));
        for (let u2 of m2.nodes) if (u2.kind === "word" && u2.value[0] === "-" && u2.value[1] === "-") {
          let d2 = u2.value.replace(/-\*.*$/g, "");
          m2.value === "--value" ? e.add(d2) : m2.value === "--modifier" && o.add(d2);
        }
      }), c.value = B3(s2);
    }), i.utilities.functional(r.slice(0, -2), (c) => {
      let s2 = structuredClone(t), m2 = c.value, p2 = c.modifier;
      if (m2 === null) return;
      let u2 = false, d2 = false, h2 = false, g2 = false, y3 = /* @__PURE__ */ new Map(), w3 = false;
      if (b2([s2], (v2, { parent: x2, replaceWith: T3 }) => {
        if ((x2 == null ? void 0 : x2.kind) !== "rule" && (x2 == null ? void 0 : x2.kind) !== "at-rule" || v2.kind !== "declaration" || !v2.value) return;
        let N3 = z3(v2.value);
        (Y3(N3, (E3, { replaceWith: P3 }) => {
          if (E3.kind === "function") {
            if (E3.value === "--value") {
              u2 = true;
              let n = dt(m2, E3, i);
              return n ? (d2 = true, n.ratio ? w3 = true : y3.set(v2, x2), P3(n.nodes), 1) : (u2 || (u2 = false), T3([]), 2);
            } else if (E3.value === "--modifier") {
              if (p2 === null) return T3([]), 1;
              h2 = true;
              let n = dt(p2, E3, i);
              return n ? (g2 = true, P3(n.nodes), 1) : (h2 || (h2 = false), T3([]), 2);
            }
          }
        }) ?? 0) === 0 && (v2.value = B3(N3));
      }), u2 && !d2 || h2 && !g2 || w3 && g2 || p2 && !w3 && !g2) return null;
      if (w3) for (let [v2, x2] of y3) {
        let T3 = x2.nodes.indexOf(v2);
        T3 !== -1 && x2.nodes.splice(T3, 1);
      }
      return s2.nodes;
    }), i.utilities.suggest(r.slice(0, -2), () => [{ values: i.theme.keysInNamespaces(e).map((c) => c.replaceAll("_", ".")), modifiers: i.theme.keysInNamespaces(o).map((c) => c.replaceAll("_", ".")) }]);
  } : gr.test(r) ? (i) => {
    i.utilities.static(r, () => structuredClone(t.nodes));
  } : null;
}
function dt(t, r, i) {
  for (let e of r.nodes) if (t.kind === "named" && e.kind === "word" && e.value[0] === "-" && e.value[1] === "-") {
    let o = e.value;
    if (o.endsWith("-*")) {
      o = o.slice(0, -2);
      let c = i.theme.resolve(t.value, [o]);
      if (c) return { nodes: z3(c) };
    } else {
      let c = o.split("-*");
      if (c.length <= 1) continue;
      let s2 = [c.shift()], m2 = i.theme.resolveWith(t.value, s2, c);
      if (m2) {
        let [, p2 = {}] = m2;
        {
          let u2 = p2[c.pop()];
          if (u2) return { nodes: z3(u2) };
        }
      }
    }
  } else if (t.kind === "named" && e.kind === "word") {
    if (e.value !== "number" && e.value !== "integer" && e.value !== "ratio" && e.value !== "percentage") continue;
    let o = e.value === "ratio" && "fraction" in t ? t.fraction : t.value;
    if (!o) continue;
    let c = pe(o, [e.value]);
    if (c === null) continue;
    if (c === "ratio") {
      let [s2, m2] = u(o, "/");
      if (!p(s2) || !p(m2)) continue;
    } else {
      if (c === "number" && !ue(o)) continue;
      if (c === "percentage" && !p(o.slice(0, -1))) continue;
    }
    return { nodes: z3(o), ratio: c === "ratio" };
  } else if (t.kind === "arbitrary" && e.kind === "word" && e.value[0] === "[" && e.value[e.value.length - 1] === "]") {
    let o = e.value.slice(1, -1);
    if (o === "*") return { nodes: z3(t.value) };
    if ("dataType" in t && t.dataType && t.dataType !== o) continue;
    if ("dataType" in t && t.dataType) return { nodes: z3(t.value) };
    if (pe(t.value, [o]) !== null) return { nodes: z3(t.value) };
  }
}
var Pe = { "--alpha": hr, "--spacing": vr, "--theme": yr, theme: vt };
function hr(t, r, ...i) {
  let [e, o] = u(r, "/").map((c) => c.trim());
  if (!e || !o) throw new Error(`The --alpha(…) function requires a color and an alpha value, e.g.: \`--alpha(${e || "var(--my-color)"} / ${o || "50%"})\``);
  if (i.length > 0) throw new Error(`The --alpha(…) function only accepts one argument, e.g.: \`--alpha(${e || "var(--my-color)"} / ${o || "50%"})\``);
  return G3(e, o);
}
function vr(t, r, ...i) {
  if (!r) throw new Error("The --spacing(…) function requires an argument, but received none.");
  if (i.length > 0) throw new Error(`The --spacing(…) function only accepts a single argument, but received ${i.length + 1}.`);
  let e = t.theme.resolve(null, ["--spacing"]);
  if (!e) throw new Error("The --spacing(…) function requires that the `--spacing` theme variable exists, but it was not found.");
  return `calc(${e} * ${r})`;
}
function yr(t, r, ...i) {
  if (!r.startsWith("--")) throw new Error("The --theme(…) function can only be used with CSS variables from your theme.");
  return vt(t, r, ...i);
}
function vt(t, r, ...i) {
  r = wr(r);
  let e = t.resolveThemeValue(r);
  if (!e && i.length > 0) return i.join(", ");
  if (!e) throw new Error(`Could not resolve value for theme function: \`theme(${r})\`. Consider checking if the path is correct or provide a fallback value to silence this error.`);
  return e;
}
var mt = new RegExp(Object.keys(Pe).map((t) => `${t}\\(`).join("|"));
function ae2(t, r) {
  let i = 0;
  return b2(t, (e) => {
    if (e.kind === "declaration" && e.value && mt.test(e.value)) {
      i |= 8, e.value = ht(e.value, r);
      return;
    }
    e.kind === "at-rule" && (e.name === "@media" || e.name === "@custom-media" || e.name === "@container" || e.name === "@supports") && mt.test(e.params) && (i |= 8, e.params = ht(e.params, r));
  }), i;
}
function ht(t, r) {
  let i = z3(t);
  return Y3(i, (e, { replaceWith: o }) => {
    if (e.kind === "function" && e.value in Pe) {
      let c = u(B3(e.nodes).trim(), ",").map((m2) => m2.trim()), s2 = Pe[e.value](r, ...c);
      return o(z3(s2));
    }
  }), B3(i);
}
function wr(t) {
  if (t[0] !== "'" && t[0] !== '"') return t;
  let r = "", i = t[0];
  for (let e = 1; e < t.length - 1; e++) {
    let o = t[e], c = t[e + 1];
    o === "\\" && (c === i || c === "\\") ? (r += c, e++) : r += o;
  }
  return r;
}
function ke(t, r) {
  let i = t.length, e = r.length, o = i < e ? i : e;
  for (let c = 0; c < o; c++) {
    let s2 = t.charCodeAt(c), m2 = r.charCodeAt(c);
    if (s2 !== m2) {
      if (s2 >= 48 && s2 <= 57 && m2 >= 48 && m2 <= 57) {
        let p2 = c, u2 = c + 1, d2 = c, h2 = c + 1;
        for (s2 = t.charCodeAt(u2); s2 >= 48 && s2 <= 57; ) s2 = t.charCodeAt(++u2);
        for (m2 = r.charCodeAt(h2); m2 >= 48 && m2 <= 57; ) m2 = r.charCodeAt(++h2);
        let g2 = t.slice(p2, u2), y3 = r.slice(d2, h2);
        return Number(g2) - Number(y3) || (g2 < y3 ? -1 : 1);
      }
      return s2 - m2;
    }
  }
  return t.length - r.length;
}
function yt(t) {
  let r = [];
  for (let i of t.utilities.keys("static")) r.push([i, { modifiers: [] }]);
  for (let i of t.utilities.keys("functional")) {
    let e = t.utilities.getCompletions(i);
    for (let o of e) for (let c of o.values) {
      let s2 = c === null ? i : `${i}-${c}`;
      r.push([s2, { modifiers: o.modifiers }]), o.supportsNegative && r.push([`-${s2}`, { modifiers: o.modifiers }]);
    }
  }
  return r.sort((i, e) => ke(i[0], e[0])), r;
}
function wt(t) {
  let r = [];
  for (let [e, o] of t.variants.entries()) {
    let m2 = function({ value: p2, modifier: u2 } = {}) {
      let d2 = e;
      p2 && (d2 += c ? `-${p2}` : p2), u2 && (d2 += `/${u2}`);
      let h2 = t.parseVariant(d2);
      if (!h2) return [];
      let g2 = G2(".__placeholder__", []);
      if (se(g2, h2, t.variants) === null) return [];
      let y3 = [];
      return W2(g2.nodes, (w3, { path: v2 }) => {
        if (w3.kind !== "rule" && w3.kind !== "at-rule" || w3.nodes.length > 0) return;
        v2.sort((N3, R3) => {
          let E3 = N3.kind === "at-rule", P3 = R3.kind === "at-rule";
          return E3 && !P3 ? -1 : !E3 && P3 ? 1 : 0;
        });
        let x2 = v2.flatMap((N3) => N3.kind === "rule" ? N3.selector === "&" ? [] : [N3.selector] : N3.kind === "at-rule" ? [`${N3.name} ${N3.params}`] : []), T3 = "";
        for (let N3 = x2.length - 1; N3 >= 0; N3--) T3 = T3 === "" ? x2[N3] : `${x2[N3]} { ${T3} }`;
        y3.push(T3);
      }), y3;
    };
    var i = m2;
    if (o.kind === "arbitrary") continue;
    let c = e !== "@", s2 = t.variants.getCompletions(e);
    switch (o.kind) {
      case "static": {
        r.push({ name: e, values: s2, isArbitrary: false, hasDash: c, selectors: m2 });
        break;
      }
      case "functional": {
        r.push({ name: e, values: s2, isArbitrary: true, hasDash: c, selectors: m2 });
        break;
      }
      case "compound": {
        r.push({ name: e, values: s2, isArbitrary: true, hasDash: c, selectors: m2 });
        break;
      }
    }
  }
  return r;
}
function bt(t, r) {
  var _a2;
  let { astNodes: i, nodeSorting: e } = Q3(Array.from(r), t), o = new Map(r.map((s2) => [s2, null])), c = 0n;
  for (let s2 of i) {
    let m2 = (_a2 = e.get(s2)) == null ? void 0 : _a2.candidate;
    m2 && o.set(m2, o.get(m2) ?? c++);
  }
  return r.map((s2) => [s2, o.get(s2) ?? null]);
}
var xe = /^@?[a-zA-Z0-9_-]*$/;
var je = class {
  constructor() {
    __publicField(this, "compareFns", /* @__PURE__ */ new Map());
    __publicField(this, "variants", /* @__PURE__ */ new Map());
    __publicField(this, "completions", /* @__PURE__ */ new Map());
    __publicField(this, "groupOrder", null);
    __publicField(this, "lastOrder", 0);
  }
  static(r, i, { compounds: e, order: o } = {}) {
    this.set(r, { kind: "static", applyFn: i, compoundsWith: 0, compounds: e ?? 2, order: o });
  }
  fromAst(r, i) {
    let e = [];
    b2(i, (o) => {
      o.kind === "rule" ? e.push(o.selector) : o.kind === "at-rule" && o.name !== "@slot" && e.push(`${o.name} ${o.params}`);
    }), this.static(r, (o) => {
      let c = structuredClone(i);
      Oe(c, o.nodes), o.nodes = c;
    }, { compounds: ie2(e) });
  }
  functional(r, i, { compounds: e, order: o } = {}) {
    this.set(r, { kind: "functional", applyFn: i, compoundsWith: 0, compounds: e ?? 2, order: o });
  }
  compound(r, i, e, { compounds: o, order: c } = {}) {
    this.set(r, { kind: "compound", applyFn: e, compoundsWith: i, compounds: o ?? 2, order: c });
  }
  group(r, i) {
    this.groupOrder = this.nextOrder(), i && this.compareFns.set(this.groupOrder, i), r(), this.groupOrder = null;
  }
  has(r) {
    return this.variants.has(r);
  }
  get(r) {
    return this.variants.get(r);
  }
  kind(r) {
    var _a2;
    return (_a2 = this.variants.get(r)) == null ? void 0 : _a2.kind;
  }
  compoundsWith(r, i) {
    let e = this.variants.get(r), o = typeof i == "string" ? this.variants.get(i) : i.kind === "arbitrary" ? { compounds: ie2([i.selector]) } : this.variants.get(i.root);
    return !(!e || !o || e.kind !== "compound" || o.compounds === 0 || e.compoundsWith === 0 || !(e.compoundsWith & o.compounds));
  }
  suggest(r, i) {
    this.completions.set(r, i);
  }
  getCompletions(r) {
    var _a2;
    return ((_a2 = this.completions.get(r)) == null ? void 0 : _a2()) ?? [];
  }
  compare(r, i) {
    if (r === i) return 0;
    if (r === null) return -1;
    if (i === null) return 1;
    if (r.kind === "arbitrary" && i.kind === "arbitrary") return r.selector < i.selector ? -1 : 1;
    if (r.kind === "arbitrary") return 1;
    if (i.kind === "arbitrary") return -1;
    let e = this.variants.get(r.root).order, o = this.variants.get(i.root).order, c = e - o;
    if (c !== 0) return c;
    if (r.kind === "compound" && i.kind === "compound") {
      let u2 = this.compare(r.variant, i.variant);
      return u2 !== 0 ? u2 : r.modifier && i.modifier ? r.modifier.value < i.modifier.value ? -1 : 1 : r.modifier ? 1 : i.modifier ? -1 : 0;
    }
    let s2 = this.compareFns.get(e);
    if (s2 !== void 0) return s2(r, i);
    if (r.root !== i.root) return r.root < i.root ? -1 : 1;
    let m2 = r.value, p2 = i.value;
    return m2 === null ? -1 : p2 === null || m2.kind === "arbitrary" && p2.kind !== "arbitrary" ? 1 : m2.kind !== "arbitrary" && p2.kind === "arbitrary" || m2.value < p2.value ? -1 : 1;
  }
  keys() {
    return this.variants.keys();
  }
  entries() {
    return this.variants.entries();
  }
  set(r, { kind: i, applyFn: e, compounds: o, compoundsWith: c, order: s2 }) {
    let m2 = this.variants.get(r);
    m2 ? Object.assign(m2, { kind: i, applyFn: e, compounds: o }) : (s2 === void 0 && (this.lastOrder = this.nextOrder(), s2 = this.lastOrder), this.variants.set(r, { kind: i, applyFn: e, order: s2, compoundsWith: c, compounds: o }));
  }
  nextOrder() {
    return this.groupOrder ?? this.lastOrder + 1;
  }
};
function ie2(t) {
  let r = 0;
  for (let i of t) {
    if (i[0] === "@") {
      if (!i.startsWith("@media") && !i.startsWith("@supports") && !i.startsWith("@container")) return 0;
      r |= 1;
      continue;
    }
    if (i.includes("::")) return 0;
    r |= 2;
  }
  return r;
}
function xt(t) {
  let r = new je();
  function i(u2, d2, { compounds: h2 } = {}) {
    h2 = h2 ?? ie2(d2), r.static(u2, (g2) => {
      g2.nodes = d2.map((y3) => M2(y3, g2.nodes));
    }, { compounds: h2 });
  }
  i("*", [":is(& > *)"], { compounds: 0 }), i("**", [":is(& *)"], { compounds: 0 });
  function e(u2, d2) {
    return d2.map((h2) => {
      h2 = h2.trim();
      let g2 = u(h2, " ");
      return g2[0] === "not" ? g2.slice(1).join(" ") : u2 === "@container" ? g2[0][0] === "(" ? `not ${h2}` : g2[1] === "not" ? `${g2[0]} ${g2.slice(2).join(" ")}` : `${g2[0]} not ${g2.slice(1).join(" ")}` : `not ${h2}`;
    });
  }
  let o = ["@media", "@supports", "@container"];
  function c(u2) {
    for (let d2 of o) {
      if (d2 !== u2.name) continue;
      let h2 = u(u2.params, ",");
      return h2.length > 1 ? null : (h2 = e(u2.name, h2), $2(u2.name, h2.join(", ")));
    }
    return null;
  }
  function s2(u2) {
    return u2.includes("::") ? null : `&:not(${u(u2, ",").map((h2) => (h2.startsWith("&:is(") && h2.endsWith(")") && (h2 = h2.slice(5, -1)), h2 = h2.replaceAll("&", "*"), h2)).join(", ")})`;
  }
  r.compound("not", 3, (u2, d2) => {
    if (d2.variant.kind === "arbitrary" && d2.variant.relative || d2.modifier) return null;
    let h2 = false;
    if (b2([u2], (g2, { path: y3 }) => {
      if (g2.kind !== "rule" && g2.kind !== "at-rule") return 0;
      if (g2.nodes.length > 0) return 0;
      let w3 = [], v2 = [];
      for (let T3 of y3) T3.kind === "at-rule" ? w3.push(T3) : T3.kind === "rule" && v2.push(T3);
      if (w3.length > 1) return 2;
      if (v2.length > 1) return 2;
      let x2 = [];
      for (let T3 of v2) {
        let N3 = s2(T3.selector);
        if (!N3) return h2 = false, 2;
        x2.push(G2(N3, []));
      }
      for (let T3 of w3) {
        let N3 = c(T3);
        if (!N3) return h2 = false, 2;
        x2.push(N3);
      }
      return Object.assign(u2, G2("&", x2)), h2 = true, 1;
    }), u2.kind === "rule" && u2.selector === "&" && u2.nodes.length === 1 && Object.assign(u2, u2.nodes[0]), !h2) return null;
  }), r.suggest("not", () => Array.from(r.keys()).filter((u2) => r.compoundsWith("not", u2))), r.compound("group", 2, (u2, d2) => {
    if (d2.variant.kind === "arbitrary" && d2.variant.relative) return null;
    let h2 = d2.modifier ? `:where(.${t.prefix ? `${t.prefix}\\:` : ""}group\\/${d2.modifier.value})` : `:where(.${t.prefix ? `${t.prefix}\\:` : ""}group)`, g2 = false;
    if (b2([u2], (y3, { path: w3 }) => {
      if (y3.kind !== "rule") return 0;
      for (let x2 of w3.slice(0, -1)) if (x2.kind === "rule") return g2 = false, 2;
      let v2 = y3.selector.replaceAll("&", h2);
      u(v2, ",").length > 1 && (v2 = `:is(${v2})`), y3.selector = `&:is(${v2} *)`, g2 = true;
    }), !g2) return null;
  }), r.suggest("group", () => Array.from(r.keys()).filter((u2) => r.compoundsWith("group", u2))), r.compound("peer", 2, (u2, d2) => {
    if (d2.variant.kind === "arbitrary" && d2.variant.relative) return null;
    let h2 = d2.modifier ? `:where(.${t.prefix ? `${t.prefix}\\:` : ""}peer\\/${d2.modifier.value})` : `:where(.${t.prefix ? `${t.prefix}\\:` : ""}peer)`, g2 = false;
    if (b2([u2], (y3, { path: w3 }) => {
      if (y3.kind !== "rule") return 0;
      for (let x2 of w3.slice(0, -1)) if (x2.kind === "rule") return g2 = false, 2;
      let v2 = y3.selector.replaceAll("&", h2);
      u(v2, ",").length > 1 && (v2 = `:is(${v2})`), y3.selector = `&:is(${v2} ~ *)`, g2 = true;
    }), !g2) return null;
  }), r.suggest("peer", () => Array.from(r.keys()).filter((u2) => r.compoundsWith("peer", u2))), i("first-letter", ["&::first-letter"]), i("first-line", ["&::first-line"]), i("marker", ["& *::marker", "&::marker"]), i("selection", ["& *::selection", "&::selection"]), i("file", ["&::file-selector-button"]), i("placeholder", ["&::placeholder"]), i("backdrop", ["&::backdrop"]);
  {
    let u2 = function() {
      return ae([$2("@property", "--tw-content", [_2("syntax", '"*"'), _2("initial-value", '""'), _2("inherits", "false")])]);
    };
    var m2 = u2;
    r.static("before", (d2) => {
      d2.nodes = [G2("&::before", [u2(), _2("content", "var(--tw-content)"), ...d2.nodes])];
    }, { compounds: 0 }), r.static("after", (d2) => {
      d2.nodes = [G2("&::after", [u2(), _2("content", "var(--tw-content)"), ...d2.nodes])];
    }, { compounds: 0 });
  }
  i("first", ["&:first-child"]), i("last", ["&:last-child"]), i("only", ["&:only-child"]), i("odd", ["&:nth-child(odd)"]), i("even", ["&:nth-child(even)"]), i("first-of-type", ["&:first-of-type"]), i("last-of-type", ["&:last-of-type"]), i("only-of-type", ["&:only-of-type"]), i("visited", ["&:visited"]), i("target", ["&:target"]), i("open", ["&:is([open], :popover-open, :open)"]), i("default", ["&:default"]), i("checked", ["&:checked"]), i("indeterminate", ["&:indeterminate"]), i("placeholder-shown", ["&:placeholder-shown"]), i("autofill", ["&:autofill"]), i("optional", ["&:optional"]), i("required", ["&:required"]), i("valid", ["&:valid"]), i("invalid", ["&:invalid"]), i("in-range", ["&:in-range"]), i("out-of-range", ["&:out-of-range"]), i("read-only", ["&:read-only"]), i("empty", ["&:empty"]), i("focus-within", ["&:focus-within"]), r.static("hover", (u2) => {
    u2.nodes = [G2("&:hover", [$2("@media", "(hover: hover)", u2.nodes)])];
  }), i("focus", ["&:focus"]), i("focus-visible", ["&:focus-visible"]), i("active", ["&:active"]), i("enabled", ["&:enabled"]), i("disabled", ["&:disabled"]), i("inert", ["&:is([inert], [inert] *)"]), r.compound("in", 2, (u2, d2) => {
    if (d2.modifier) return null;
    let h2 = false;
    if (b2([u2], (g2, { path: y3 }) => {
      if (g2.kind !== "rule") return 0;
      for (let w3 of y3.slice(0, -1)) if (w3.kind === "rule") return h2 = false, 2;
      g2.selector = `:where(${g2.selector.replaceAll("&", "*")}) &`, h2 = true;
    }), !h2) return null;
  }), r.suggest("in", () => Array.from(r.keys()).filter((u2) => r.compoundsWith("in", u2))), r.compound("has", 2, (u2, d2) => {
    if (d2.modifier) return null;
    let h2 = false;
    if (b2([u2], (g2, { path: y3 }) => {
      if (g2.kind !== "rule") return 0;
      for (let w3 of y3.slice(0, -1)) if (w3.kind === "rule") return h2 = false, 2;
      g2.selector = `&:has(${g2.selector.replaceAll("&", "*")})`, h2 = true;
    }), !h2) return null;
  }), r.suggest("has", () => Array.from(r.keys()).filter((u2) => r.compoundsWith("has", u2))), r.functional("aria", (u2, d2) => {
    if (!d2.value || d2.modifier) return null;
    d2.value.kind === "arbitrary" ? u2.nodes = [G2(`&[aria-${kt(d2.value.value)}]`, u2.nodes)] : u2.nodes = [G2(`&[aria-${d2.value.value}="true"]`, u2.nodes)];
  }), r.suggest("aria", () => ["busy", "checked", "disabled", "expanded", "hidden", "pressed", "readonly", "required", "selected"]), r.functional("data", (u2, d2) => {
    if (!d2.value || d2.modifier) return null;
    u2.nodes = [G2(`&[data-${kt(d2.value.value)}]`, u2.nodes)];
  }), r.functional("nth", (u2, d2) => {
    if (!d2.value || d2.modifier || d2.value.kind === "named" && !p(d2.value.value)) return null;
    u2.nodes = [G2(`&:nth-child(${d2.value.value})`, u2.nodes)];
  }), r.functional("nth-last", (u2, d2) => {
    if (!d2.value || d2.modifier || d2.value.kind === "named" && !p(d2.value.value)) return null;
    u2.nodes = [G2(`&:nth-last-child(${d2.value.value})`, u2.nodes)];
  }), r.functional("nth-of-type", (u2, d2) => {
    if (!d2.value || d2.modifier || d2.value.kind === "named" && !p(d2.value.value)) return null;
    u2.nodes = [G2(`&:nth-of-type(${d2.value.value})`, u2.nodes)];
  }), r.functional("nth-last-of-type", (u2, d2) => {
    if (!d2.value || d2.modifier || d2.value.kind === "named" && !p(d2.value.value)) return null;
    u2.nodes = [G2(`&:nth-last-of-type(${d2.value.value})`, u2.nodes)];
  }), r.functional("supports", (u2, d2) => {
    if (!d2.value || d2.modifier) return null;
    let h2 = d2.value.value;
    if (h2 === null) return null;
    if (/^[\w-]*\s*\(/.test(h2)) {
      let g2 = h2.replace(/\b(and|or|not)\b/g, " $1 ");
      u2.nodes = [$2("@supports", g2, u2.nodes)];
      return;
    }
    h2.includes(":") || (h2 = `${h2}: var(--tw)`), (h2[0] !== "(" || h2[h2.length - 1] !== ")") && (h2 = `(${h2})`), u2.nodes = [$2("@supports", h2, u2.nodes)];
  }, { compounds: 1 }), i("motion-safe", ["@media (prefers-reduced-motion: no-preference)"]), i("motion-reduce", ["@media (prefers-reduced-motion: reduce)"]), i("contrast-more", ["@media (prefers-contrast: more)"]), i("contrast-less", ["@media (prefers-contrast: less)"]);
  {
    let u2 = function(d2, h2, g2, y3) {
      if (d2 === h2) return 0;
      let w3 = y3.get(d2);
      if (w3 === null) return g2 === "asc" ? -1 : 1;
      let v2 = y3.get(h2);
      return v2 === null ? g2 === "asc" ? 1 : -1 : re2(w3, v2, g2);
    };
    var p2 = u2;
    {
      let d2 = t.namespace("--breakpoint"), h2 = new N2((g2) => {
        switch (g2.kind) {
          case "static":
            return t.resolveValue(g2.root, ["--breakpoint"]) ?? null;
          case "functional": {
            if (!g2.value || g2.modifier) return null;
            let y3 = null;
            return g2.value.kind === "arbitrary" ? y3 = g2.value.value : g2.value.kind === "named" && (y3 = t.resolveValue(g2.value.value, ["--breakpoint"])), !y3 || y3.includes("var(") ? null : y3;
          }
          case "arbitrary":
          case "compound":
            return null;
        }
      });
      r.group(() => {
        r.functional("max", (g2, y3) => {
          if (y3.modifier) return null;
          let w3 = h2.get(y3);
          if (w3 === null) return null;
          g2.nodes = [$2("@media", `(width < ${w3})`, g2.nodes)];
        }, { compounds: 1 });
      }, (g2, y3) => u2(g2, y3, "desc", h2)), r.suggest("max", () => Array.from(d2.keys()).filter((g2) => g2 !== null)), r.group(() => {
        for (let [g2, y3] of t.namespace("--breakpoint")) g2 !== null && r.static(g2, (w3) => {
          w3.nodes = [$2("@media", `(width >= ${y3})`, w3.nodes)];
        }, { compounds: 1 });
        r.functional("min", (g2, y3) => {
          if (y3.modifier) return null;
          let w3 = h2.get(y3);
          if (w3 === null) return null;
          g2.nodes = [$2("@media", `(width >= ${w3})`, g2.nodes)];
        }, { compounds: 1 });
      }, (g2, y3) => u2(g2, y3, "asc", h2)), r.suggest("min", () => Array.from(d2.keys()).filter((g2) => g2 !== null));
    }
    {
      let d2 = t.namespace("--container"), h2 = new N2((g2) => {
        switch (g2.kind) {
          case "functional": {
            if (g2.value === null) return null;
            let y3 = null;
            return g2.value.kind === "arbitrary" ? y3 = g2.value.value : g2.value.kind === "named" && (y3 = t.resolveValue(g2.value.value, ["--container"])), !y3 || y3.includes("var(") ? null : y3;
          }
          case "static":
          case "arbitrary":
          case "compound":
            return null;
        }
      });
      r.group(() => {
        r.functional("@max", (g2, y3) => {
          let w3 = h2.get(y3);
          if (w3 === null) return null;
          g2.nodes = [$2("@container", y3.modifier ? `${y3.modifier.value} (width < ${w3})` : `(width < ${w3})`, g2.nodes)];
        }, { compounds: 1 });
      }, (g2, y3) => u2(g2, y3, "desc", h2)), r.suggest("@max", () => Array.from(d2.keys()).filter((g2) => g2 !== null)), r.group(() => {
        r.functional("@", (g2, y3) => {
          let w3 = h2.get(y3);
          if (w3 === null) return null;
          g2.nodes = [$2("@container", y3.modifier ? `${y3.modifier.value} (width >= ${w3})` : `(width >= ${w3})`, g2.nodes)];
        }, { compounds: 1 }), r.functional("@min", (g2, y3) => {
          let w3 = h2.get(y3);
          if (w3 === null) return null;
          g2.nodes = [$2("@container", y3.modifier ? `${y3.modifier.value} (width >= ${w3})` : `(width >= ${w3})`, g2.nodes)];
        }, { compounds: 1 });
      }, (g2, y3) => u2(g2, y3, "asc", h2)), r.suggest("@min", () => Array.from(d2.keys()).filter((g2) => g2 !== null)), r.suggest("@", () => Array.from(d2.keys()).filter((g2) => g2 !== null));
    }
  }
  return i("portrait", ["@media (orientation: portrait)"]), i("landscape", ["@media (orientation: landscape)"]), i("ltr", ['&:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *)']), i("rtl", ['&:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *)']), i("dark", ["@media (prefers-color-scheme: dark)"]), i("starting", ["@starting-style"]), i("print", ["@media print"]), i("forced-colors", ["@media (forced-colors: active)"]), r;
}
function kt(t) {
  if (t.includes("=")) {
    let [r, ...i] = u(t, "="), e = i.join("=").trim();
    if (e[0] === "'" || e[0] === '"') return t;
    if (e.length > 1) {
      let o = e[e.length - 1];
      if (e[e.length - 2] === " " && (o === "i" || o === "I" || o === "s" || o === "S")) return `${r}="${e.slice(0, -2)}" ${o}`;
    }
    return `${r}="${e}"`;
  }
  return t;
}
function Oe(t, r) {
  b2(t, (i, { replaceWith: e }) => {
    if (i.kind === "at-rule" && i.name === "@slot") e(r);
    else if (i.kind === "at-rule" && (i.name === "@keyframes" || i.name === "@property")) return Object.assign(i, ae([$2(i.name, i.params, i.nodes)])), 1;
  });
}
function At(t) {
  let r = pt(t), i = xt(t), e = new N2((p2) => ut(p2, m2)), o = new N2((p2) => Array.from(st(p2, m2))), c = new N2((p2) => {
    let u2 = Ct(p2, m2);
    try {
      ae2(u2.map(({ node: d2 }) => d2), m2);
    } catch {
      return [];
    }
    return u2;
  }), s2 = new N2((p2) => (Y3(z3(p2), (u2) => {
    if (!(u2.kind !== "function" || u2.value !== "var")) return Y3(u2.nodes, (d2) => {
      d2.kind !== "word" || d2.value[0] !== "-" || d2.value[1] !== "-" || t.markUsedVariable(d2.value);
    }), 1;
  }), true)), m2 = { theme: t, utilities: r, variants: i, invalidCandidates: /* @__PURE__ */ new Set(), important: false, candidatesToCss(p2) {
    let u2 = [];
    for (let d2 of p2) {
      let h2 = false, { astNodes: g2 } = Q3([d2], this, { onInvalidCandidate() {
        h2 = true;
      } });
      g2 = fe(g2, m2), g2.length === 0 || h2 ? u2.push(null) : u2.push(ue2(g2));
    }
    return u2;
  }, getClassOrder(p2) {
    return bt(this, p2);
  }, getClassList() {
    return yt(this);
  }, getVariants() {
    return wt(this);
  }, parseCandidate(p2) {
    return o.get(p2);
  }, parseVariant(p2) {
    return e.get(p2);
  }, compileAstNodes(p2) {
    return c.get(p2);
  }, getVariantOrder() {
    let p2 = Array.from(e.values());
    p2.sort((g2, y3) => this.variants.compare(g2, y3));
    let u2 = /* @__PURE__ */ new Map(), d2, h2 = 0;
    for (let g2 of p2) g2 !== null && (d2 !== void 0 && this.variants.compare(d2, g2) !== 0 && h2++, u2.set(g2, h2), d2 = g2);
    return u2;
  }, resolveThemeValue(p2) {
    let u2 = p2.lastIndexOf("/"), d2 = null;
    u2 !== -1 && (d2 = p2.slice(u2 + 1).trim(), p2 = p2.slice(0, u2).trim());
    let h2 = t.get([p2]) ?? void 0;
    return d2 && h2 ? G3(h2, d2) : h2;
  }, trackUsedVariables(p2) {
    s2.get(p2);
  } };
  return m2;
}
var De = ["container-type", "pointer-events", "visibility", "position", "inset", "inset-inline", "inset-block", "inset-inline-start", "inset-inline-end", "top", "right", "bottom", "left", "isolation", "z-index", "order", "grid-column", "grid-column-start", "grid-column-end", "grid-row", "grid-row-start", "grid-row-end", "float", "clear", "--tw-container-component", "margin", "margin-inline", "margin-block", "margin-inline-start", "margin-inline-end", "margin-top", "margin-right", "margin-bottom", "margin-left", "box-sizing", "display", "field-sizing", "aspect-ratio", "height", "max-height", "min-height", "width", "max-width", "min-width", "flex", "flex-shrink", "flex-grow", "flex-basis", "table-layout", "caption-side", "border-collapse", "border-spacing", "transform-origin", "translate", "--tw-translate-x", "--tw-translate-y", "scale", "--tw-scale-x", "--tw-scale-y", "--tw-scale-z", "rotate", "--tw-rotate-x", "--tw-rotate-y", "--tw-rotate-z", "--tw-skew-x", "--tw-skew-y", "transform", "animation", "cursor", "touch-action", "--tw-pan-x", "--tw-pan-y", "--tw-pinch-zoom", "resize", "scroll-snap-type", "--tw-scroll-snap-strictness", "scroll-snap-align", "scroll-snap-stop", "scroll-margin", "scroll-margin-inline", "scroll-margin-block", "scroll-margin-inline-start", "scroll-margin-inline-end", "scroll-margin-top", "scroll-margin-right", "scroll-margin-bottom", "scroll-margin-left", "scroll-padding", "scroll-padding-inline", "scroll-padding-block", "scroll-padding-inline-start", "scroll-padding-inline-end", "scroll-padding-top", "scroll-padding-right", "scroll-padding-bottom", "scroll-padding-left", "list-style-position", "list-style-type", "list-style-image", "appearance", "columns", "break-before", "break-inside", "break-after", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-template-columns", "grid-template-rows", "flex-direction", "flex-wrap", "place-content", "place-items", "align-content", "align-items", "justify-content", "justify-items", "gap", "column-gap", "row-gap", "--tw-space-x-reverse", "--tw-space-y-reverse", "divide-x-width", "divide-y-width", "--tw-divide-y-reverse", "divide-style", "divide-color", "place-self", "align-self", "justify-self", "overflow", "overflow-x", "overflow-y", "overscroll-behavior", "overscroll-behavior-x", "overscroll-behavior-y", "scroll-behavior", "border-radius", "border-start-radius", "border-end-radius", "border-top-radius", "border-right-radius", "border-bottom-radius", "border-left-radius", "border-start-start-radius", "border-start-end-radius", "border-end-end-radius", "border-end-start-radius", "border-top-left-radius", "border-top-right-radius", "border-bottom-right-radius", "border-bottom-left-radius", "border-width", "border-inline-width", "border-block-width", "border-inline-start-width", "border-inline-end-width", "border-top-width", "border-right-width", "border-bottom-width", "border-left-width", "border-style", "border-inline-style", "border-block-style", "border-inline-start-style", "border-inline-end-style", "border-top-style", "border-right-style", "border-bottom-style", "border-left-style", "border-color", "border-inline-color", "border-block-color", "border-inline-start-color", "border-inline-end-color", "border-top-color", "border-right-color", "border-bottom-color", "border-left-color", "background-color", "background-image", "--tw-gradient-position", "--tw-gradient-stops", "--tw-gradient-via-stops", "--tw-gradient-from", "--tw-gradient-from-position", "--tw-gradient-via", "--tw-gradient-via-position", "--tw-gradient-to", "--tw-gradient-to-position", "box-decoration-break", "background-size", "background-attachment", "background-clip", "background-position", "background-repeat", "background-origin", "fill", "stroke", "stroke-width", "object-fit", "object-position", "padding", "padding-inline", "padding-block", "padding-inline-start", "padding-inline-end", "padding-top", "padding-right", "padding-bottom", "padding-left", "text-align", "text-indent", "vertical-align", "font-family", "font-size", "line-height", "font-weight", "letter-spacing", "text-wrap", "overflow-wrap", "word-break", "text-overflow", "hyphens", "white-space", "color", "text-transform", "font-style", "font-stretch", "font-variant-numeric", "text-decoration-line", "text-decoration-color", "text-decoration-style", "text-decoration-thickness", "text-underline-offset", "-webkit-font-smoothing", "placeholder-color", "caret-color", "accent-color", "color-scheme", "opacity", "background-blend-mode", "mix-blend-mode", "box-shadow", "--tw-shadow", "--tw-shadow-color", "--tw-ring-shadow", "--tw-ring-color", "--tw-inset-shadow", "--tw-inset-shadow-color", "--tw-inset-ring-shadow", "--tw-inset-ring-color", "--tw-ring-offset-width", "--tw-ring-offset-color", "outline", "outline-width", "outline-offset", "outline-color", "--tw-blur", "--tw-brightness", "--tw-contrast", "--tw-drop-shadow", "--tw-grayscale", "--tw-hue-rotate", "--tw-invert", "--tw-saturate", "--tw-sepia", "filter", "--tw-backdrop-blur", "--tw-backdrop-brightness", "--tw-backdrop-contrast", "--tw-backdrop-grayscale", "--tw-backdrop-hue-rotate", "--tw-backdrop-invert", "--tw-backdrop-opacity", "--tw-backdrop-saturate", "--tw-backdrop-sepia", "backdrop-filter", "transition-property", "transition-behavior", "transition-delay", "transition-duration", "transition-timing-function", "will-change", "contain", "content", "forced-color-adjust"];
function Q3(t, r, { onInvalidCandidate: i } = {}) {
  let e = /* @__PURE__ */ new Map(), o = [], c = /* @__PURE__ */ new Map();
  for (let m2 of t) {
    if (r.invalidCandidates.has(m2)) {
      i == null ? void 0 : i(m2);
      continue;
    }
    let p2 = r.parseCandidate(m2);
    if (p2.length === 0) {
      i == null ? void 0 : i(m2);
      continue;
    }
    c.set(m2, p2);
  }
  let s2 = r.getVariantOrder();
  for (let [m2, p2] of c) {
    let u2 = false;
    for (let d2 of p2) {
      let h2 = r.compileAstNodes(d2);
      if (h2.length !== 0) {
        u2 = true;
        for (let { node: g2, propertySort: y3 } of h2) {
          let w3 = 0n;
          for (let v2 of d2.variants) w3 |= 1n << BigInt(s2.get(v2));
          e.set(g2, { properties: y3, variants: w3, candidate: m2 }), o.push(g2);
        }
      }
    }
    u2 || (i == null ? void 0 : i(m2));
  }
  return o.sort((m2, p2) => {
    let u2 = e.get(m2), d2 = e.get(p2);
    if (u2.variants - d2.variants !== 0n) return Number(u2.variants - d2.variants);
    let h2 = 0;
    for (; u2.properties.length < h2 && d2.properties.length < h2 && u2.properties[h2] === d2.properties[h2]; ) h2 += 1;
    return (u2.properties[h2] ?? 1 / 0) - (d2.properties[h2] ?? 1 / 0) || d2.properties.length - u2.properties.length || ke(u2.candidate, d2.candidate);
  }), { astNodes: o, nodeSorting: e };
}
function Ct(t, r) {
  let i = br(t, r);
  if (i.length === 0) return [];
  let e = [], o = `.${I2(t.raw)}`;
  for (let c of i) {
    let s2 = kr(c);
    (t.important || r.important) && $t(c);
    let m2 = { kind: "rule", selector: o, nodes: c };
    for (let p2 of t.variants) if (se(m2, p2, r.variants) === null) return [];
    e.push({ node: m2, propertySort: s2 });
  }
  return e;
}
function se(t, r, i, e = 0) {
  if (r.kind === "arbitrary") {
    if (r.relative && e === 0) return null;
    t.nodes = [M2(r.selector, t.nodes)];
    return;
  }
  let { applyFn: o } = i.get(r.root);
  if (r.kind === "compound") {
    let s2 = $2("@slot");
    if (se(s2, r.variant, i, e + 1) === null || r.root === "not" && s2.nodes.length > 1) return null;
    for (let p2 of s2.nodes) if (p2.kind !== "rule" && p2.kind !== "at-rule" || o(p2, r) === null) return null;
    b2(s2.nodes, (p2) => {
      if ((p2.kind === "rule" || p2.kind === "at-rule") && p2.nodes.length <= 0) return p2.nodes = t.nodes, 1;
    }), t.nodes = s2.nodes;
    return;
  }
  if (o(t, r) === null) return null;
}
function Vt(t) {
  var _a2;
  let r = ((_a2 = t.options) == null ? void 0 : _a2.types) ?? [];
  return r.length > 1 && r.includes("any");
}
function br(t, r) {
  if (t.kind === "arbitrary") {
    let s2 = t.value;
    return t.modifier && (s2 = L3(s2, t.modifier, r.theme)), s2 === null ? [] : [[_2(t.property, s2)]];
  }
  let i = r.utilities.get(t.root) ?? [], e = [], o = i.filter((s2) => !Vt(s2));
  for (let s2 of o) {
    if (s2.kind !== t.kind) continue;
    let m2 = s2.compileFn(t);
    if (m2 !== void 0) {
      if (m2 === null) return e;
      e.push(m2);
    }
  }
  if (e.length > 0) return e;
  let c = i.filter((s2) => Vt(s2));
  for (let s2 of c) {
    if (s2.kind !== t.kind) continue;
    let m2 = s2.compileFn(t);
    if (m2 !== void 0) {
      if (m2 === null) return e;
      e.push(m2);
    }
  }
  return e;
}
function $t(t) {
  for (let r of t) r.kind !== "at-root" && (r.kind === "declaration" ? r.important = true : (r.kind === "rule" || r.kind === "at-rule") && $t(r.nodes));
}
function kr(t) {
  let r = /* @__PURE__ */ new Set(), i = t.slice();
  for (; i.length > 0; ) {
    let e = i.shift();
    if (e.kind === "declaration") {
      if (e.property === "--tw-sort") {
        let c = De.indexOf(e.value ?? "");
        if (c !== -1) {
          r.add(c);
          break;
        }
      }
      let o = De.indexOf(e.property);
      o !== -1 && r.add(o);
    } else if (e.kind === "rule" || e.kind === "at-rule") for (let o of e.nodes) i.push(o);
  }
  return Array.from(r).sort((e, o) => e - o);
}
function ge2(t, r) {
  let i = 0, e = M2("&", t), o = /* @__PURE__ */ new Set(), c = new N2(() => /* @__PURE__ */ new Set()), s2 = new N2(() => /* @__PURE__ */ new Set());
  b2([e], (h2, { parent: g2 }) => {
    if (h2.kind === "at-rule") {
      if (h2.name === "@keyframes") return b2(h2.nodes, (y3) => {
        if (y3.kind === "at-rule" && y3.name === "@apply") throw new Error("You cannot use `@apply` inside `@keyframes`.");
      }), 1;
      if (h2.name === "@utility") {
        let y3 = h2.params.replace(/-\*$/, "");
        s2.get(y3).add(h2), b2(h2.nodes, (w3) => {
          if (!(w3.kind !== "at-rule" || w3.name !== "@apply")) {
            o.add(h2);
            for (let v2 of Tt(w3, r)) c.get(h2).add(v2);
          }
        });
        return;
      }
      if (h2.name === "@apply") {
        if (g2 === null) return;
        i |= 1, o.add(g2);
        for (let y3 of Tt(h2, r)) c.get(g2).add(y3);
      }
    }
  });
  let m2 = /* @__PURE__ */ new Set(), p2 = [], u2 = /* @__PURE__ */ new Set();
  function d2(h2, g2 = []) {
    if (!m2.has(h2)) {
      if (u2.has(h2)) {
        let y3 = g2[(g2.indexOf(h2) + 1) % g2.length];
        throw h2.kind === "at-rule" && h2.name === "@utility" && y3.kind === "at-rule" && y3.name === "@utility" && b2(h2.nodes, (w3) => {
          if (w3.kind !== "at-rule" || w3.name !== "@apply") return;
          let v2 = w3.params.split(/\s+/g);
          for (let x2 of v2) for (let T3 of r.parseCandidate(x2)) switch (T3.kind) {
            case "arbitrary":
              break;
            case "static":
            case "functional":
              if (y3.params.replace(/-\*$/, "") === T3.root) throw new Error(`You cannot \`@apply\` the \`${x2}\` utility here because it creates a circular dependency.`);
              break;
            default:
          }
        }), new Error(`Circular dependency detected:

${ue2([h2])}
Relies on:

${ue2([y3])}`);
      }
      u2.add(h2);
      for (let y3 of c.get(h2)) for (let w3 of s2.get(y3)) g2.push(h2), d2(w3, g2), g2.pop();
      m2.add(h2), u2.delete(h2), p2.push(h2);
    }
  }
  for (let h2 of o) d2(h2);
  return b2(p2, (h2, { replaceWith: g2 }) => {
    if (h2.kind !== "at-rule" || h2.name !== "@apply") return;
    let y3 = h2.params.split(/\s+/g);
    {
      let w3 = Q3(y3, r, { onInvalidCandidate: (x2) => {
        throw new Error(`Cannot apply unknown utility class: ${x2}`);
      } }).astNodes, v2 = [];
      for (let x2 of w3) if (x2.kind === "rule") for (let T3 of x2.nodes) v2.push(T3);
      else v2.push(x2);
      g2(v2);
    }
  }), i;
}
function* Tt(t, r) {
  for (let i of t.params.split(/\s+/g)) for (let e of r.parseCandidate(i)) switch (e.kind) {
    case "arbitrary":
      break;
    case "static":
    case "functional":
      yield e.root;
      break;
    default:
  }
}
async function _e(t, r, i, e = 0) {
  let o = 0, c = [];
  return b2(t, (s2, { replaceWith: m2 }) => {
    if (s2.kind === "at-rule" && (s2.name === "@import" || s2.name === "@reference")) {
      let p2 = xr(z3(s2.params));
      if (p2 === null) return;
      s2.name === "@reference" && (p2.media = "reference"), o |= 2;
      let { uri: u2, layer: d2, media: h2, supports: g2 } = p2;
      if (u2.startsWith("data:") || u2.startsWith("http://") || u2.startsWith("https://")) return;
      let y3 = oe({}, []);
      return c.push((async () => {
        if (e > 100) throw new Error(`Exceeded maximum recursion depth while resolving \`${u2}\` in \`${r}\`)`);
        let w3 = await i(u2, r), v2 = de2(w3.content);
        await _e(v2, w3.base, i, e + 1), y3.nodes = Ar([oe({ base: w3.base }, v2)], d2, h2, g2);
      })()), m2(y3), 1;
    }
  }), c.length > 0 && await Promise.all(c), o;
}
function xr(t) {
  let r, i = null, e = null, o = null;
  for (let c = 0; c < t.length; c++) {
    let s2 = t[c];
    if (s2.kind !== "separator") {
      if (s2.kind === "word" && !r) {
        if (!s2.value || s2.value[0] !== '"' && s2.value[0] !== "'") return null;
        r = s2.value.slice(1, -1);
        continue;
      }
      if (s2.kind === "function" && s2.value.toLowerCase() === "url" || !r) return null;
      if ((s2.kind === "word" || s2.kind === "function") && s2.value.toLowerCase() === "layer") {
        if (i) return null;
        if (o) throw new Error("`layer(…)` in an `@import` should come before any other functions or conditions");
        "nodes" in s2 ? i = B3(s2.nodes) : i = "";
        continue;
      }
      if (s2.kind === "function" && s2.value.toLowerCase() === "supports") {
        if (o) return null;
        o = B3(s2.nodes);
        continue;
      }
      e = B3(t.slice(c));
      break;
    }
  }
  return r ? { uri: r, layer: i, media: e, supports: o } : null;
}
function Ar(t, r, i, e) {
  let o = t;
  return r !== null && (o = [$2("@layer", r, o)]), i !== null && (o = [$2("@media", i, o)]), e !== null && (o = [$2("@supports", e[0] === "(" ? e : `(${e})`, o)]), o;
}
function ue3(t, r = null) {
  return Array.isArray(t) && t.length === 2 && typeof t[1] == "object" && typeof t[1] !== null ? r ? t[1][r] ?? null : t[0] : Array.isArray(t) && r === null ? t.join(", ") : typeof t == "string" && r === null ? t : null;
}
function Et(t, { theme: r }, i) {
  for (let e of i) {
    let o = Ae([e]);
    o && t.theme.clearNamespace(`--${o}`, 4);
  }
  for (let [e, o] of Cr(r)) {
    if (typeof o != "string" && typeof o != "number") continue;
    if (typeof o == "string" && (o = o.replace(/<alpha-value>/g, "1")), e[0] === "opacity" && (typeof o == "number" || typeof o == "string")) {
      let s2 = typeof o == "string" ? parseFloat(o) : o;
      s2 >= 0 && s2 <= 1 && (o = s2 * 100 + "%");
    }
    let c = Ae(e);
    c && t.theme.add(`--${c}`, "" + o, 7);
  }
  if (Object.hasOwn(r, "fontFamily")) {
    let e = 5;
    {
      let o = ue3(r.fontFamily.sans);
      o && t.theme.hasDefault("--font-sans") && (t.theme.add("--default-font-family", o, e), t.theme.add("--default-font-feature-settings", ue3(r.fontFamily.sans, "fontFeatureSettings") ?? "normal", e), t.theme.add("--default-font-variation-settings", ue3(r.fontFamily.sans, "fontVariationSettings") ?? "normal", e));
    }
    {
      let o = ue3(r.fontFamily.mono);
      o && t.theme.hasDefault("--font-mono") && (t.theme.add("--default-mono-font-family", o, e), t.theme.add("--default-mono-font-feature-settings", ue3(r.fontFamily.mono, "fontFeatureSettings") ?? "normal", e), t.theme.add("--default-mono-font-variation-settings", ue3(r.fontFamily.mono, "fontVariationSettings") ?? "normal", e));
    }
  }
  return r;
}
function Cr(t) {
  let r = [];
  return Kt(t, [], (i, e) => {
    if ($r(i)) return r.push([e, i]), 1;
    if (Tr(i)) {
      r.push([e, i[0]]);
      for (let o of Reflect.ownKeys(i[1])) r.push([[...e, `-${o}`], i[1][o]]);
      return 1;
    }
    if (Array.isArray(i) && i.every((o) => typeof o == "string")) return r.push([e, i.join(", ")]), 1;
  }), r;
}
var Vr = /^[a-zA-Z0-9-_%/\.]+$/;
function Ae(t) {
  if (t[0] === "container") return null;
  t = structuredClone(t), t[0] === "animation" && (t[0] = "animate"), t[0] === "aspectRatio" && (t[0] = "aspect"), t[0] === "borderRadius" && (t[0] = "radius"), t[0] === "boxShadow" && (t[0] = "shadow"), t[0] === "colors" && (t[0] = "color"), t[0] === "containers" && (t[0] = "container"), t[0] === "fontFamily" && (t[0] = "font"), t[0] === "fontSize" && (t[0] = "text"), t[0] === "letterSpacing" && (t[0] = "tracking"), t[0] === "lineHeight" && (t[0] = "leading"), t[0] === "maxWidth" && (t[0] = "container"), t[0] === "screens" && (t[0] = "breakpoint"), t[0] === "transitionTimingFunction" && (t[0] = "ease");
  for (let r of t) if (!Vr.test(r)) return null;
  return t.map((r, i, e) => r === "1" && i !== e.length - 1 ? "" : r).map((r) => r.replaceAll(".", "_").replace(/([a-z])([A-Z])/g, (i, e, o) => `${e}-${o.toLowerCase()}`)).filter((r, i) => r !== "DEFAULT" || i !== t.length - 1).join("-");
}
function $r(t) {
  return typeof t == "number" || typeof t == "string";
}
function Tr(t) {
  if (!Array.isArray(t) || t.length !== 2 || typeof t[0] != "string" && typeof t[0] != "number" || t[1] === void 0 || t[1] === null || typeof t[1] != "object") return false;
  for (let r of Reflect.ownKeys(t[1])) if (typeof r != "string" || typeof t[1][r] != "string" && typeof t[1][r] != "number") return false;
  return true;
}
function Kt(t, r = [], i) {
  for (let e of Reflect.ownKeys(t)) {
    let o = t[e];
    if (o == null) continue;
    let c = [...r, e], s2 = i(o, c) ?? 0;
    if (s2 !== 1) {
      if (s2 === 2) return 2;
      if (!(!Array.isArray(o) && typeof o != "object") && Kt(o, c, i) === 2) return 2;
    }
  }
}
function Ce(t) {
  let r = [];
  for (let i of u(t, ".")) {
    if (!i.includes("[")) {
      r.push(i);
      continue;
    }
    let e = 0;
    for (; ; ) {
      let o = i.indexOf("[", e), c = i.indexOf("]", o);
      if (o === -1 || c === -1) break;
      o > e && r.push(i.slice(e, o)), r.push(i.slice(o + 1, c)), e = c + 1;
    }
    e <= i.length - 1 && r.push(i.slice(e));
  }
  return r;
}
function fe2(t) {
  if (Object.prototype.toString.call(t) !== "[object Object]") return false;
  let r = Object.getPrototypeOf(t);
  return r === null || Object.getPrototypeOf(r) === null;
}
function me(t, r, i, e = []) {
  for (let o of r) if (o != null) for (let c of Reflect.ownKeys(o)) {
    e.push(c);
    let s2 = i(t[c], o[c], e);
    s2 !== void 0 ? t[c] = s2 : !fe2(t[c]) || !fe2(o[c]) ? t[c] = o[c] : t[c] = me({}, [t[c], o[c]], i, e), e.pop();
  }
  return t;
}
function Ve(t, r, i) {
  return function(o, c) {
    let s2 = o.lastIndexOf("/"), m2 = null;
    s2 !== -1 && (m2 = o.slice(s2 + 1).trim(), o = o.slice(0, s2).trim());
    let p2 = (() => {
      var _a2;
      let u2 = Ce(o), [d2, h2] = Nr(t.theme, u2), g2 = i(Rt(r() ?? {}, u2) ?? null);
      if (typeof g2 == "string" && (g2 = g2.replace("<alpha-value>", "1")), typeof d2 != "object") return typeof h2 != "object" && h2 & 4 ? g2 ?? d2 : d2;
      if (g2 !== null && typeof g2 == "object" && !Array.isArray(g2)) {
        let y3 = me({}, [g2], (w3, v2) => v2);
        if (d2 === null && Object.hasOwn(g2, "__CSS_VALUES__")) {
          let w3 = {};
          for (let v2 in g2.__CSS_VALUES__) w3[v2] = g2[v2], delete y3[v2];
          d2 = w3;
        }
        for (let w3 in d2) w3 !== "__CSS_VALUES__" && (((_a2 = g2 == null ? void 0 : g2.__CSS_VALUES__) == null ? void 0 : _a2[w3]) & 4 && Rt(y3, w3.split("-")) !== void 0 || (y3[R2(w3)] = d2[w3]));
        return y3;
      }
      if (Array.isArray(d2) && Array.isArray(h2) && Array.isArray(g2)) {
        let y3 = d2[0], w3 = d2[1];
        h2[0] & 4 && (y3 = g2[0] ?? y3);
        for (let v2 of Object.keys(w3)) h2[1][v2] & 4 && (w3[v2] = g2[1][v2] ?? w3[v2]);
        return [y3, w3];
      }
      return d2 ?? g2;
    })();
    return m2 && typeof p2 == "string" && (p2 = G3(p2, m2)), p2 ?? c;
  };
}
function Nr(t, r) {
  if (r.length === 1 && r[0].startsWith("--")) return [t.get([r[0]]), t.getOptions(r[0])];
  let i = Ae(r), e = /* @__PURE__ */ new Map(), o = new N2(() => /* @__PURE__ */ new Map()), c = t.namespace(`--${i}`);
  if (c.size === 0) return [null, 0];
  let s2 = /* @__PURE__ */ new Map();
  for (let [d2, h2] of c) {
    if (!d2 || !d2.includes("--")) {
      e.set(d2, h2), s2.set(d2, t.getOptions(d2 ? `--${i}-${d2}` : `--${i}`));
      continue;
    }
    let g2 = d2.indexOf("--"), y3 = d2.slice(0, g2), w3 = d2.slice(g2 + 2);
    w3 = w3.replace(/-([a-z])/g, (v2, x2) => x2.toUpperCase()), o.get(y3 === "" ? null : y3).set(w3, [h2, t.getOptions(`--${i}${d2}`)]);
  }
  let m2 = t.getOptions(`--${i}`);
  for (let [d2, h2] of o) {
    let g2 = e.get(d2);
    if (typeof g2 != "string") continue;
    let y3 = {}, w3 = {};
    for (let [v2, [x2, T3]] of h2) y3[v2] = x2, w3[v2] = T3;
    e.set(d2, [g2, y3]), s2.set(d2, [m2, w3]);
  }
  let p2 = {}, u2 = {};
  for (let [d2, h2] of e) Pt(p2, [d2 ?? "DEFAULT"], h2);
  for (let [d2, h2] of s2) Pt(u2, [d2 ?? "DEFAULT"], h2);
  return r[r.length - 1] === "DEFAULT" ? [(p2 == null ? void 0 : p2.DEFAULT) ?? null, u2.DEFAULT ?? 0] : "DEFAULT" in p2 && Object.keys(p2).length === 1 ? [p2.DEFAULT, u2.DEFAULT ?? 0] : (p2.__CSS_VALUES__ = u2, [p2, u2]);
}
function Rt(t, r) {
  for (let i = 0; i < r.length; ++i) {
    let e = r[i];
    if ((t == null ? void 0 : t[e]) === void 0) {
      if (r[i + 1] === void 0) return;
      r[i + 1] = `${e}-${r[i + 1]}`;
      continue;
    }
    t = t[e];
  }
  return t;
}
function Pt(t, r, i) {
  for (let e of r.slice(0, -1)) t[e] === void 0 && (t[e] = {}), t = t[e];
  t[r[r.length - 1]] = i;
}
function Sr(t) {
  return { kind: "combinator", value: t };
}
function Er(t, r) {
  return { kind: "function", value: t, nodes: r };
}
function he(t) {
  return { kind: "selector", value: t };
}
function Kr(t) {
  return { kind: "separator", value: t };
}
function Rr(t) {
  return { kind: "value", value: t };
}
function $e(t, r, i = null) {
  for (let e = 0; e < t.length; e++) {
    let o = t[e], c = false, s2 = 0, m2 = r(o, { parent: i, replaceWith(p2) {
      c = true, Array.isArray(p2) ? p2.length === 0 ? (t.splice(e, 1), s2 = 0) : p2.length === 1 ? (t[e] = p2[0], s2 = 1) : (t.splice(e, 1, ...p2), s2 = p2.length) : (t[e] = p2, s2 = 1);
    } }) ?? 0;
    if (c) {
      m2 === 0 ? e-- : e += s2 - 1;
      continue;
    }
    if (m2 === 2) return 2;
    if (m2 !== 1 && o.kind === "function" && $e(o.nodes, r, o) === 2) return 2;
  }
}
function Te(t) {
  let r = "";
  for (let i of t) switch (i.kind) {
    case "combinator":
    case "selector":
    case "separator":
    case "value": {
      r += i.value;
      break;
    }
    case "function":
      r += i.value + "(" + Te(i.nodes) + ")";
  }
  return r;
}
var jt = 92;
var Pr = 93;
var Ot = 41;
var jr = 58;
var Dt = 44;
var Or = 34;
var Dr = 46;
var _t = 62;
var Ft = 10;
var _r = 35;
var Ut = 91;
var It = 40;
var zt = 43;
var Fr = 39;
var Mt = 32;
var Lt = 9;
var Wt = 126;
function Fe(t) {
  t = t.replaceAll(`\r
`, `
`);
  let r = [], i = [], e = null, o = "", c;
  for (let s2 = 0; s2 < t.length; s2++) {
    let m2 = t.charCodeAt(s2);
    switch (m2) {
      case Dt:
      case _t:
      case Ft:
      case Mt:
      case zt:
      case Lt:
      case Wt: {
        if (o.length > 0) {
          let g2 = he(o);
          e ? e.nodes.push(g2) : r.push(g2), o = "";
        }
        let p2 = s2, u2 = s2 + 1;
        for (; u2 < t.length && (c = t.charCodeAt(u2), !(c !== Dt && c !== _t && c !== Ft && c !== Mt && c !== zt && c !== Lt && c !== Wt)); u2++) ;
        s2 = u2 - 1;
        let d2 = t.slice(p2, u2), h2 = d2.trim() === "," ? Kr(d2) : Sr(d2);
        e ? e.nodes.push(h2) : r.push(h2);
        break;
      }
      case It: {
        let p2 = Er(o, []);
        if (o = "", p2.value !== ":not" && p2.value !== ":where" && p2.value !== ":has" && p2.value !== ":is") {
          let u2 = s2 + 1, d2 = 0;
          for (let g2 = s2 + 1; g2 < t.length; g2++) {
            if (c = t.charCodeAt(g2), c === It) {
              d2++;
              continue;
            }
            if (c === Ot) {
              if (d2 === 0) {
                s2 = g2;
                break;
              }
              d2--;
            }
          }
          let h2 = s2;
          p2.nodes.push(Rr(t.slice(u2, h2))), o = "", s2 = h2, r.push(p2);
          break;
        }
        e ? e.nodes.push(p2) : r.push(p2), i.push(p2), e = p2;
        break;
      }
      case Ot: {
        let p2 = i.pop();
        if (o.length > 0) {
          let u2 = he(o);
          p2.nodes.push(u2), o = "";
        }
        i.length > 0 ? e = i[i.length - 1] : e = null;
        break;
      }
      case Dr:
      case jr:
      case _r: {
        if (o.length > 0) {
          let p2 = he(o);
          e ? e.nodes.push(p2) : r.push(p2);
        }
        o = String.fromCharCode(m2);
        break;
      }
      case Ut: {
        if (o.length > 0) {
          let d2 = he(o);
          e ? e.nodes.push(d2) : r.push(d2);
        }
        o = "";
        let p2 = s2, u2 = 0;
        for (let d2 = s2 + 1; d2 < t.length; d2++) {
          if (c = t.charCodeAt(d2), c === Ut) {
            u2++;
            continue;
          }
          if (c === Pr) {
            if (u2 === 0) {
              s2 = d2;
              break;
            }
            u2--;
          }
        }
        o += t.slice(p2, s2 + 1);
        break;
      }
      case Fr:
      case Or: {
        let p2 = s2;
        for (let u2 = s2 + 1; u2 < t.length; u2++) if (c = t.charCodeAt(u2), c === jt) u2 += 1;
        else if (c === m2) {
          s2 = u2;
          break;
        }
        o += t.slice(p2, s2 + 1);
        break;
      }
      case jt: {
        let p2 = t.charCodeAt(s2 + 1);
        o += String.fromCharCode(m2) + String.fromCharCode(p2), s2 += 1;
        break;
      }
      default:
        o += String.fromCharCode(m2);
    }
  }
  return o.length > 0 && r.push(he(o)), r;
}
var Bt = /^[a-z@][a-zA-Z0-9/%._-]*$/;
function Ue({ designSystem: t, ast: r, resolvedConfig: i, featuresRef: e, referenceMode: o }) {
  let c = { addBase(s2) {
    if (o) return;
    let m2 = H3(s2);
    e.current |= ae2(m2, t), r.push($2("@layer", "base", m2));
  }, addVariant(s2, m2) {
    if (!xe.test(s2)) throw new Error(`\`addVariant('${s2}')\` defines an invalid variant name. Variants should only contain alphanumeric, dashes or underscore characters.`);
    typeof m2 == "string" || Array.isArray(m2) ? t.variants.static(s2, (p2) => {
      p2.nodes = qt(m2, p2.nodes);
    }, { compounds: ie2(typeof m2 == "string" ? [m2] : m2) }) : typeof m2 == "object" && t.variants.fromAst(s2, H3(m2));
  }, matchVariant(s2, m2, p2) {
    function u2(h2, g2, y3) {
      let w3 = m2(h2, { modifier: (g2 == null ? void 0 : g2.value) ?? null });
      return qt(w3, y3);
    }
    let d2 = Object.keys((p2 == null ? void 0 : p2.values) ?? {});
    t.variants.group(() => {
      t.variants.functional(s2, (h2, g2) => {
        if (!g2.value) {
          if ((p2 == null ? void 0 : p2.values) && "DEFAULT" in p2.values) {
            h2.nodes = u2(p2.values.DEFAULT, g2.modifier, h2.nodes);
            return;
          }
          return null;
        }
        if (g2.value.kind === "arbitrary") h2.nodes = u2(g2.value.value, g2.modifier, h2.nodes);
        else if (g2.value.kind === "named" && (p2 == null ? void 0 : p2.values)) {
          let y3 = p2.values[g2.value.value];
          if (typeof y3 != "string") return;
          h2.nodes = u2(y3, g2.modifier, h2.nodes);
        }
      });
    }, (h2, g2) => {
      var _a2, _b, _c, _d;
      if (h2.kind !== "functional" || g2.kind !== "functional") return 0;
      let y3 = h2.value ? h2.value.value : "DEFAULT", w3 = g2.value ? g2.value.value : "DEFAULT", v2 = ((_a2 = p2 == null ? void 0 : p2.values) == null ? void 0 : _a2[y3]) ?? y3, x2 = ((_b = p2 == null ? void 0 : p2.values) == null ? void 0 : _b[w3]) ?? w3;
      if (p2 && typeof p2.sort == "function") return p2.sort({ value: v2, modifier: ((_c = h2.modifier) == null ? void 0 : _c.value) ?? null }, { value: x2, modifier: ((_d = g2.modifier) == null ? void 0 : _d.value) ?? null });
      let T3 = d2.indexOf(y3), N3 = d2.indexOf(w3);
      return T3 = T3 === -1 ? d2.length : T3, N3 = N3 === -1 ? d2.length : N3, T3 !== N3 ? T3 - N3 : v2 < x2 ? -1 : 1;
    });
  }, addUtilities(s2) {
    s2 = Array.isArray(s2) ? s2 : [s2];
    let m2 = s2.flatMap((u2) => Object.entries(u2));
    m2 = m2.flatMap(([u2, d2]) => u(u2, ",").map((h2) => [h2.trim(), d2]));
    let p2 = new N2(() => []);
    for (let [u2, d2] of m2) {
      if (u2.startsWith("@keyframes ")) {
        o || r.push(M2(u2, H3(d2)));
        continue;
      }
      let h2 = Fe(u2), g2 = false;
      if ($e(h2, (y3) => {
        if (y3.kind === "selector" && y3.value[0] === "." && Bt.test(y3.value.slice(1))) {
          let w3 = y3.value;
          y3.value = "&";
          let v2 = Te(h2), x2 = w3.slice(1), T3 = v2 === "&" ? H3(d2) : [M2(v2, H3(d2))];
          p2.get(x2).push(...T3), g2 = true, y3.value = w3;
          return;
        }
        if (y3.kind === "function" && y3.value === ":not") return 1;
      }), !g2) throw new Error(`\`addUtilities({ '${u2}' : … })\` defines an invalid utility selector. Utilities must be a single class name and start with a lowercase letter, eg. \`.scrollbar-none\`.`);
    }
    for (let [u2, d2] of p2) t.theme.prefix && b2(d2, (h2) => {
      if (h2.kind === "rule") {
        let g2 = Fe(h2.selector);
        $e(g2, (y3) => {
          y3.kind === "selector" && y3.value[0] === "." && (y3.value = `.${t.theme.prefix}\\:${y3.value.slice(1)}`);
        }), h2.selector = Te(g2);
      }
    }), t.utilities.static(u2, () => {
      let h2 = structuredClone(d2);
      return e.current |= ge2(h2, t), h2;
    });
  }, matchUtilities(s2, m2) {
    let p2 = (m2 == null ? void 0 : m2.type) ? Array.isArray(m2 == null ? void 0 : m2.type) ? m2.type : [m2.type] : ["any"];
    for (let [d2, h2] of Object.entries(s2)) {
      let g2 = function({ negative: y3 }) {
        return (w3) => {
          var _a2, _b;
          if (((_a2 = w3.value) == null ? void 0 : _a2.kind) === "arbitrary" && p2.length > 0 && !p2.includes("any") && (w3.value.dataType && !p2.includes(w3.value.dataType) || !w3.value.dataType && !pe(w3.value.value, p2))) return;
          let v2 = p2.includes("color"), x2 = null, T3 = false;
          {
            let E3 = (m2 == null ? void 0 : m2.values) ?? {};
            v2 && (E3 = Object.assign({ inherit: "inherit", transparent: "transparent", current: "currentColor" }, E3)), w3.value ? w3.value.kind === "arbitrary" ? x2 = w3.value.value : w3.value.fraction && E3[w3.value.fraction] ? (x2 = E3[w3.value.fraction], T3 = true) : E3[w3.value.value] ? x2 = E3[w3.value.value] : E3.__BARE_VALUE__ && (x2 = E3.__BARE_VALUE__(w3.value) ?? null, T3 = (w3.value.fraction !== null && (x2 == null ? void 0 : x2.includes("/"))) ?? false) : x2 = E3.DEFAULT ?? null;
          }
          if (x2 === null) return;
          let N3;
          {
            let E3 = (m2 == null ? void 0 : m2.modifiers) ?? null;
            w3.modifier ? E3 === "any" || w3.modifier.kind === "arbitrary" ? N3 = w3.modifier.value : (E3 == null ? void 0 : E3[w3.modifier.value]) ? N3 = E3[w3.modifier.value] : v2 && !Number.isNaN(Number(w3.modifier.value)) ? N3 = `${w3.modifier.value}%` : N3 = null : N3 = null;
          }
          if (w3.modifier && N3 === null && !T3) return ((_b = w3.value) == null ? void 0 : _b.kind) === "arbitrary" ? null : void 0;
          v2 && N3 !== null && (x2 = G3(x2, N3)), y3 && (x2 = `calc(${x2} * -1)`);
          let R3 = H3(h2(x2, { modifier: N3 }));
          return e.current |= ge2(R3, t), R3;
        };
      };
      var u2 = g2;
      if (!Bt.test(d2)) throw new Error(`\`matchUtilities({ '${d2}' : … })\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter, eg. \`scrollbar\`.`);
      (m2 == null ? void 0 : m2.supportsNegativeValues) && t.utilities.functional(`-${d2}`, g2({ negative: true }), { types: p2 }), t.utilities.functional(d2, g2({ negative: false }), { types: p2 }), t.utilities.suggest(d2, () => {
        let y3 = (m2 == null ? void 0 : m2.values) ?? {}, w3 = new Set(Object.keys(y3));
        w3.delete("__BARE_VALUE__"), w3.has("DEFAULT") && (w3.delete("DEFAULT"), w3.add(null));
        let v2 = (m2 == null ? void 0 : m2.modifiers) ?? {}, x2 = v2 === "any" ? [] : Object.keys(v2);
        return [{ supportsNegative: (m2 == null ? void 0 : m2.supportsNegativeValues) ?? false, values: Array.from(w3), modifiers: x2 }];
      });
    }
  }, addComponents(s2, m2) {
    this.addUtilities(s2, m2);
  }, matchComponents(s2, m2) {
    this.matchUtilities(s2, m2);
  }, theme: Ve(t, () => i.theme ?? {}, (s2) => s2), prefix(s2) {
    return s2;
  }, config(s2, m2) {
    let p2 = i;
    if (!s2) return p2;
    let u2 = Ce(s2);
    for (let d2 = 0; d2 < u2.length; ++d2) {
      let h2 = u2[d2];
      if (p2[h2] === void 0) return m2;
      p2 = p2[h2];
    }
    return p2 ?? m2;
  } };
  return c.addComponents = c.addComponents.bind(c), c.matchComponents = c.matchComponents.bind(c), c;
}
function H3(t) {
  let r = [];
  t = Array.isArray(t) ? t : [t];
  let i = t.flatMap((e) => Object.entries(e));
  for (let [e, o] of i) if (typeof o != "object") {
    if (!e.startsWith("--")) {
      if (o === "@slot") {
        r.push(M2(e, [$2("@slot")]));
        continue;
      }
      e = e.replace(/([A-Z])/g, "-$1").toLowerCase();
    }
    r.push(_2(e, String(o)));
  } else if (Array.isArray(o)) for (let c of o) typeof c == "string" ? r.push(_2(e, c)) : r.push(M2(e, H3(c)));
  else o !== null && r.push(M2(e, H3(o)));
  return r;
}
function qt(t, r) {
  return (typeof t == "string" ? [t] : t).flatMap((e) => {
    if (e.trim().endsWith("}")) {
      let o = e.replace("}", "{@slot}}"), c = de2(o);
      return Oe(c, r), c;
    } else return M2(e, r);
  });
}
function Jt(t, r, i) {
  for (let e of Ir(r)) t.theme.addKeyframes(e);
}
function Ir(t) {
  let r = [];
  if ("keyframes" in t.theme) for (let [i, e] of Object.entries(t.theme.keyframes)) r.push($2("@keyframes", i, H3(e)));
  return r;
}
function Gt(t) {
  return { theme: { ...ye, colors: ({ theme: r }) => r("color", {}), extend: { fontSize: ({ theme: r }) => ({ ...r("text", {}) }), boxShadow: ({ theme: r }) => ({ ...r("shadow", {}) }), animation: ({ theme: r }) => ({ ...r("animate", {}) }), aspectRatio: ({ theme: r }) => ({ ...r("aspect", {}) }), borderRadius: ({ theme: r }) => ({ ...r("radius", {}) }), screens: ({ theme: r }) => ({ ...r("breakpoint", {}) }), letterSpacing: ({ theme: r }) => ({ ...r("tracking", {}) }), lineHeight: ({ theme: r }) => ({ ...r("leading", {}) }), transitionDuration: { DEFAULT: t.get(["--default-transition-duration"]) ?? null }, transitionTimingFunction: { DEFAULT: t.get(["--default-transition-timing-function"]) ?? null }, maxWidth: ({ theme: r }) => ({ ...r("container", {}) }) } } };
}
var zr = { blocklist: [], future: {}, prefix: "", important: false, darkMode: null, theme: {}, plugins: [], content: { files: [] } };
function ze(t, r) {
  let i = { design: t, configs: [], plugins: [], content: { files: [] }, theme: {}, extend: {}, result: structuredClone(zr) };
  for (let o of r) Ie(i, o);
  for (let o of i.configs) "darkMode" in o && o.darkMode !== void 0 && (i.result.darkMode = o.darkMode ?? null), "prefix" in o && o.prefix !== void 0 && (i.result.prefix = o.prefix ?? ""), "blocklist" in o && o.blocklist !== void 0 && (i.result.blocklist = o.blocklist ?? []), "important" in o && o.important !== void 0 && (i.result.important = o.important ?? false);
  let e = Lr(i);
  return { resolvedConfig: { ...i.result, content: i.content, theme: i.theme, plugins: i.plugins }, replacedThemeKeys: e };
}
function Mr(t, r) {
  if (Array.isArray(t) && fe2(t[0])) return t.concat(r);
  if (Array.isArray(r) && fe2(r[0]) && fe2(t)) return [t, ...r];
  if (Array.isArray(r)) return r;
}
function Ie(t, { config: r, base: i, path: e, reference: o }) {
  let c = [];
  for (let p2 of r.plugins ?? []) "__isOptionsFunction" in p2 ? c.push({ ...p2(), reference: o }) : "handler" in p2 ? c.push({ ...p2, reference: o }) : c.push({ handler: p2, reference: o });
  if (Array.isArray(r.presets) && r.presets.length === 0) throw new Error("Error in the config file/plugin/preset. An empty preset (`preset: []`) is not currently supported.");
  for (let p2 of r.presets ?? []) Ie(t, { path: e, base: i, config: p2, reference: o });
  for (let p2 of c) t.plugins.push(p2), p2.config && Ie(t, { path: e, base: i, config: p2.config, reference: !!p2.reference });
  let s2 = r.content ?? [], m2 = Array.isArray(s2) ? s2 : s2.files;
  for (let p2 of m2) t.content.files.push(typeof p2 == "object" ? p2 : { base: i, pattern: p2 });
  t.configs.push(r);
}
function Lr(t) {
  var _a2;
  let r = /* @__PURE__ */ new Set(), i = Ve(t.design, () => t.theme, o), e = Object.assign(i, { theme: i, colors: l });
  function o(c) {
    return typeof c == "function" ? c(e) ?? null : c ?? null;
  }
  for (let c of t.configs) {
    let s2 = c.theme ?? {}, m2 = s2.extend ?? {};
    for (let p2 in s2) p2 !== "extend" && r.add(p2);
    Object.assign(t.theme, s2);
    for (let p2 in m2) (_a2 = t.extend)[p2] ?? (_a2[p2] = []), t.extend[p2].push(m2[p2]);
  }
  delete t.theme.extend;
  for (let c in t.extend) {
    let s2 = [t.theme[c], ...t.extend[c]];
    t.theme[c] = () => {
      let m2 = s2.map(o);
      return me({}, m2, Mr);
    };
  }
  for (let c in t.theme) t.theme[c] = o(t.theme[c]);
  if (t.theme.screens && typeof t.theme.screens == "object") for (let c of Object.keys(t.theme.screens)) {
    let s2 = t.theme.screens[c];
    s2 && typeof s2 == "object" && ("raw" in s2 || "max" in s2 || "min" in s2 && (t.theme.screens[c] = s2.min));
  }
  return r;
}
function Ht(t, r) {
  let i = t.theme.container || {};
  if (typeof i != "object" || i === null) return;
  let e = Wr(i, r);
  e.length !== 0 && r.utilities.static("container", () => structuredClone(e));
}
function Wr({ center: t, padding: r, screens: i }, e) {
  let o = [], c = null;
  if (t && o.push(_2("margin-inline", "auto")), (typeof r == "string" || typeof r == "object" && r !== null && "DEFAULT" in r) && o.push(_2("padding-inline", typeof r == "string" ? r : r.DEFAULT)), typeof i == "object" && i !== null) {
    c = /* @__PURE__ */ new Map();
    let s2 = Array.from(e.theme.namespace("--breakpoint").entries());
    if (s2.sort((m2, p2) => re2(m2[1], p2[1], "asc")), s2.length > 0) {
      let [m2] = s2[0];
      o.push($2("@media", `(width >= --theme(--breakpoint-${m2}))`, [_2("max-width", "none")]));
    }
    for (let [m2, p2] of Object.entries(i)) {
      if (typeof p2 == "object") if ("min" in p2) p2 = p2.min;
      else continue;
      c.set(m2, $2("@media", `(width >= ${p2})`, [_2("max-width", p2)]));
    }
  }
  if (typeof r == "object" && r !== null) {
    let s2 = Object.entries(r).filter(([m2]) => m2 !== "DEFAULT").map(([m2, p2]) => [m2, e.theme.resolveValue(m2, ["--breakpoint"]), p2]).filter(Boolean);
    s2.sort((m2, p2) => re2(m2[1], p2[1], "asc"));
    for (let [m2, , p2] of s2) if (c && c.has(m2)) c.get(m2).nodes.push(_2("padding-inline", p2));
    else {
      if (c) continue;
      o.push($2("@media", `(width >= theme(--breakpoint-${m2}))`, [_2("padding-inline", p2)]));
    }
  }
  if (c) for (let [, s2] of c) o.push(s2);
  return o;
}
function Zt({ addVariant: t, config: r }) {
  let i = r("darkMode", null), [e, o = ".dark"] = Array.isArray(i) ? i : [i];
  if (e === "variant") {
    let c;
    if (Array.isArray(o) || typeof o == "function" ? c = o : typeof o == "string" && (c = [o]), Array.isArray(c)) for (let s2 of c) s2 === ".dark" ? (e = false, console.warn('When using `variant` for `darkMode`, you must provide a selector.\nExample: `darkMode: ["variant", ".your-selector &"]`')) : s2.includes("&") || (e = false, console.warn('When using `variant` for `darkMode`, your selector must contain `&`.\nExample `darkMode: ["variant", ".your-selector &"]`'));
    o = c;
  }
  e === null || (e === "selector" ? t("dark", `&:where(${o}, ${o} *)`) : e === "media" ? t("dark", "@media (prefers-color-scheme: dark)") : e === "variant" ? t("dark", o) : e === "class" && t("dark", `&:is(${o} *)`));
}
function Yt(t) {
  for (let [r, i] of [["t", "top"], ["tr", "top right"], ["r", "right"], ["br", "bottom right"], ["b", "bottom"], ["bl", "bottom left"], ["l", "left"], ["tl", "top left"]]) t.utilities.static(`bg-gradient-to-${r}`, () => [_2("--tw-gradient-position", `to ${i} in oklab`), _2("background-image", "linear-gradient(var(--tw-gradient-stops))")]);
  t.utilities.functional("max-w-screen", (r) => {
    if (!r.value || r.value.kind === "arbitrary") return;
    let i = t.theme.resolve(r.value.value, ["--breakpoint"]);
    if (i) return [_2("max-width", i)];
  }), t.utilities.static("overflow-ellipsis", () => [_2("text-overflow", "ellipsis")]), t.utilities.static("decoration-slice", () => [_2("-webkit-box-decoration-break", "slice"), _2("box-decoration-break", "slice")]), t.utilities.static("decoration-clone", () => [_2("-webkit-box-decoration-break", "clone"), _2("box-decoration-break", "clone")]), t.utilities.functional("flex-shrink", (r) => {
    if (!r.modifier) {
      if (!r.value) return [_2("flex-shrink", "1")];
      if (r.value.kind === "arbitrary") return [_2("flex-shrink", r.value.value)];
      if (p(r.value.value)) return [_2("flex-shrink", r.value.value)];
    }
  }), t.utilities.functional("flex-grow", (r) => {
    if (!r.modifier) {
      if (!r.value) return [_2("flex-grow", "1")];
      if (r.value.kind === "arbitrary") return [_2("flex-grow", r.value.value)];
      if (p(r.value.value)) return [_2("flex-grow", r.value.value)];
    }
  });
}
function Xt(t, r) {
  var _a2;
  let i = t.theme.screens || {}, e = ((_a2 = r.variants.get("min")) == null ? void 0 : _a2.order) ?? 0, o = [];
  for (let [s2, m2] of Object.entries(i)) {
    let g2 = function(y3) {
      r.variants.static(s2, (w3) => {
        w3.nodes = [$2("@media", h2, w3.nodes)];
      }, { order: y3 });
    };
    var c = g2;
    let p2 = r.variants.get(s2), u2 = r.theme.resolveValue(s2, ["--breakpoint"]);
    if (p2 && u2 && !r.theme.hasDefault(`--breakpoint-${s2}`)) continue;
    let d2 = true;
    typeof m2 == "string" && (d2 = false);
    let h2 = Br(m2);
    d2 ? o.push(g2) : g2(e);
  }
  if (o.length !== 0) {
    for (let [, s2] of r.variants.variants) s2.order > e && (s2.order += o.length);
    r.variants.compareFns = new Map(Array.from(r.variants.compareFns).map(([s2, m2]) => (s2 > e && (s2 += o.length), [s2, m2])));
    for (let [s2, m2] of o.entries()) m2(e + s2 + 1);
  }
}
function Br(t) {
  return (Array.isArray(t) ? t : [t]).map((i) => typeof i == "string" ? { min: i } : i && typeof i == "object" ? i : null).map((i) => {
    if (i === null) return null;
    if ("raw" in i) return i.raw;
    let e = "";
    return i.max !== void 0 && (e += `${i.max} >= `), e += "width", i.min !== void 0 && (e += ` >= ${i.min}`), `(${e})`;
  }).filter(Boolean).join(", ");
}
function Qt(t, r) {
  let i = t.theme.aria || {}, e = t.theme.supports || {}, o = t.theme.data || {};
  if (Object.keys(i).length > 0) {
    let c = r.variants.get("aria"), s2 = c == null ? void 0 : c.applyFn, m2 = c == null ? void 0 : c.compounds;
    r.variants.functional("aria", (p2, u2) => {
      let d2 = u2.value;
      return d2 && d2.kind === "named" && d2.value in i ? s2 == null ? void 0 : s2(p2, { ...u2, value: { kind: "arbitrary", value: i[d2.value] } }) : s2 == null ? void 0 : s2(p2, u2);
    }, { compounds: m2 });
  }
  if (Object.keys(e).length > 0) {
    let c = r.variants.get("supports"), s2 = c == null ? void 0 : c.applyFn, m2 = c == null ? void 0 : c.compounds;
    r.variants.functional("supports", (p2, u2) => {
      let d2 = u2.value;
      return d2 && d2.kind === "named" && d2.value in e ? s2 == null ? void 0 : s2(p2, { ...u2, value: { kind: "arbitrary", value: e[d2.value] } }) : s2 == null ? void 0 : s2(p2, u2);
    }, { compounds: m2 });
  }
  if (Object.keys(o).length > 0) {
    let c = r.variants.get("data"), s2 = c == null ? void 0 : c.applyFn, m2 = c == null ? void 0 : c.compounds;
    r.variants.functional("data", (p2, u2) => {
      let d2 = u2.value;
      return d2 && d2.kind === "named" && d2.value in o ? s2 == null ? void 0 : s2(p2, { ...u2, value: { kind: "arbitrary", value: o[d2.value] } }) : s2 == null ? void 0 : s2(p2, u2);
    }, { compounds: m2 });
  }
}
var qr = /^[a-z]+$/;
async function tr({ designSystem: t, base: r, ast: i, loadModule: e, globs: o }) {
  let c = 0, s2 = [], m2 = [];
  b2(i, (h2, { parent: g2, replaceWith: y3, context: w3 }) => {
    if (h2.kind === "at-rule") {
      if (h2.name === "@plugin") {
        if (g2 !== null) throw new Error("`@plugin` cannot be nested.");
        let v2 = h2.params.slice(1, -1);
        if (v2.length === 0) throw new Error("`@plugin` must have a path.");
        let x2 = {};
        for (let T3 of h2.nodes ?? []) {
          if (T3.kind !== "declaration") throw new Error(`Unexpected \`@plugin\` option:

${ue2([T3])}

\`@plugin\` options must be a flat list of declarations.`);
          if (T3.value === void 0) continue;
          let N3 = T3.value, R3 = u(N3, ",").map((E3) => {
            if (E3 = E3.trim(), E3 === "null") return null;
            if (E3 === "true") return true;
            if (E3 === "false") return false;
            if (Number.isNaN(Number(E3))) {
              if (E3[0] === '"' && E3[E3.length - 1] === '"' || E3[0] === "'" && E3[E3.length - 1] === "'") return E3.slice(1, -1);
              if (E3[0] === "{" && E3[E3.length - 1] === "}") throw new Error(`Unexpected \`@plugin\` option: Value of declaration \`${ue2([T3]).trim()}\` is not supported.

Using an object as a plugin option is currently only supported in JavaScript configuration files.`);
            } else return Number(E3);
            return E3;
          });
          x2[T3.property] = R3.length === 1 ? R3[0] : R3;
        }
        s2.push([{ id: v2, base: w3.base, reference: !!w3.reference }, Object.keys(x2).length > 0 ? x2 : null]), y3([]), c |= 4;
        return;
      }
      if (h2.name === "@config") {
        if (h2.nodes.length > 0) throw new Error("`@config` cannot have a body.");
        if (g2 !== null) throw new Error("`@config` cannot be nested.");
        m2.push({ id: h2.params.slice(1, -1), base: w3.base, reference: !!w3.reference }), y3([]), c |= 4;
        return;
      }
    }
  }), Yt(t);
  let p2 = t.resolveThemeValue;
  if (t.resolveThemeValue = function(g2) {
    return g2.startsWith("--") ? p2(g2) : (c |= er({ designSystem: t, base: r, ast: i, globs: o, configs: [], pluginDetails: [] }), t.resolveThemeValue(g2));
  }, !s2.length && !m2.length) return 0;
  let [u2, d2] = await Promise.all([Promise.all(m2.map(async ({ id: h2, base: g2, reference: y3 }) => {
    let w3 = await e(h2, g2, "config");
    return { path: h2, base: w3.base, config: w3.module, reference: y3 };
  })), Promise.all(s2.map(async ([{ id: h2, base: g2, reference: y3 }, w3]) => {
    let v2 = await e(h2, g2, "plugin");
    return { path: h2, base: v2.base, plugin: v2.module, options: w3, reference: y3 };
  }))]);
  return c |= er({ designSystem: t, base: r, ast: i, globs: o, configs: u2, pluginDetails: d2 }), c;
}
function er({ designSystem: t, base: r, ast: i, globs: e, configs: o, pluginDetails: c }) {
  let s2 = 0, p2 = [...c.map((v2) => {
    if (!v2.options) return { config: { plugins: [v2.plugin] }, base: v2.base, reference: v2.reference };
    if ("__isOptionsFunction" in v2.plugin) return { config: { plugins: [v2.plugin(v2.options)] }, base: v2.base, reference: v2.reference };
    throw new Error(`The plugin "${v2.path}" does not accept options`);
  }), ...o], { resolvedConfig: u2 } = ze(t, [{ config: Gt(t.theme), base: r, reference: true }, ...p2, { config: { plugins: [Zt] }, base: r, reference: true }]), { resolvedConfig: d2, replacedThemeKeys: h2 } = ze(t, p2);
  t.resolveThemeValue = function(x2, T3) {
    let N3 = y3.theme(x2, T3);
    if (Array.isArray(N3) && N3.length === 2) return N3[0];
    if (Array.isArray(N3)) return N3.join(", ");
    if (typeof N3 == "string") return N3;
  };
  let g2 = { designSystem: t, ast: i, resolvedConfig: u2, featuresRef: { set current(v2) {
    s2 |= v2;
  } } }, y3 = Ue({ ...g2, referenceMode: false }), w3;
  for (let { handler: v2, reference: x2 } of u2.plugins) x2 ? (w3 || (w3 = Ue({ ...g2, referenceMode: true })), v2(w3)) : v2(y3);
  if (Et(t, d2, h2), Jt(t, d2, h2), Qt(d2, t), Xt(d2, t), Ht(d2, t), !t.theme.prefix && u2.prefix) {
    if (u2.prefix.endsWith("-") && (u2.prefix = u2.prefix.slice(0, -1), console.warn(`The prefix "${u2.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only and is written as a variant before all utilities. We have fixed up the prefix for you. Remove the trailing \`-\` to silence this warning.`)), !qr.test(u2.prefix)) throw new Error(`The prefix "${u2.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
    t.theme.prefix = u2.prefix;
  }
  if (!t.important && u2.important === true && (t.important = true), typeof u2.important == "string") {
    let v2 = u2.important;
    b2(i, (x2, { replaceWith: T3, parent: N3 }) => {
      if (x2.kind === "at-rule" && !(x2.name !== "@tailwind" || x2.params !== "utilities")) return (N3 == null ? void 0 : N3.kind) === "rule" && N3.selector === v2 ? 2 : (T3(G2(v2, [x2])), 2);
    });
  }
  for (let v2 of u2.blocklist) t.invalidCandidates.add(v2);
  for (let v2 of u2.content.files) {
    if ("raw" in v2) throw new Error(`Error in the config file/plugin/preset. The \`content\` key contains a \`raw\` entry:

${JSON.stringify(v2, null, 2)}

This feature is not currently supported.`);
    e.push(v2);
  }
  return s2;
}
var Jr = /^[a-z]+$/;
function Gr() {
  throw new Error("No `loadModule` function provided to `compile`");
}
function Hr() {
  throw new Error("No `loadStylesheet` function provided to `compile`");
}
function Zr(t) {
  let r = 0, i = null;
  for (let e of u(t, " ")) e === "reference" ? r |= 2 : e === "inline" ? r |= 1 : e === "default" ? r |= 4 : e === "static" ? r |= 8 : e.startsWith("prefix(") && e.endsWith(")") && (i = e.slice(7, -1));
  return [r, i];
}
var de3 = ((m2) => (m2[m2.None = 0] = "None", m2[m2.AtApply = 1] = "AtApply", m2[m2.AtImport = 2] = "AtImport", m2[m2.JsPluginCompat = 4] = "JsPluginCompat", m2[m2.ThemeFunction = 8] = "ThemeFunction", m2[m2.Utilities = 16] = "Utilities", m2[m2.Variants = 32] = "Variants", m2))(de3 || {});
async function rr(t, { base: r = "", loadModule: i = Gr, loadStylesheet: e = Hr } = {}) {
  let o = 0;
  t = [oe({ base: r }, t)], o |= await _e(t, r, e);
  let c = null, s2 = new L2(), m2 = [], p2 = [], u2 = null, d2 = null, h2 = [], g2 = [], y3 = null;
  b2(t, (v2, { parent: x2, replaceWith: T3, context: N3 }) => {
    if (v2.kind === "at-rule") {
      if (v2.name === "@tailwind" && (v2.params === "utilities" || v2.params.startsWith("utilities"))) {
        if (d2 !== null) {
          T3([]);
          return;
        }
        let R3 = u(v2.params, " ");
        for (let E3 of R3) if (E3.startsWith("source(")) {
          let P3 = E3.slice(7, -1);
          if (P3 === "none") {
            y3 = P3;
            continue;
          }
          if (P3[0] === '"' && P3[P3.length - 1] !== '"' || P3[0] === "'" && P3[P3.length - 1] !== "'" || P3[0] !== "'" && P3[0] !== '"') throw new Error("`source(…)` paths must be quoted.");
          y3 = { base: N3.sourceBase ?? N3.base, pattern: P3.slice(1, -1) };
        }
        d2 = v2, o |= 16;
      }
      if (v2.name === "@utility") {
        if (x2 !== null) throw new Error("`@utility` cannot be nested.");
        if (v2.nodes.length === 0) throw new Error(`\`@utility ${v2.params}\` is empty. Utilities should include at least one property.`);
        let R3 = gt(v2);
        if (R3 === null) throw new Error(`\`@utility ${v2.params}\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter.`);
        p2.push(R3);
      }
      if (v2.name === "@source") {
        if (v2.nodes.length > 0) throw new Error("`@source` cannot have a body.");
        if (x2 !== null) throw new Error("`@source` cannot be nested.");
        let R3 = v2.params;
        if (R3[0] === '"' && R3[R3.length - 1] !== '"' || R3[0] === "'" && R3[R3.length - 1] !== "'" || R3[0] !== "'" && R3[0] !== '"') throw new Error("`@source` paths must be quoted.");
        g2.push({ base: N3.base, pattern: R3.slice(1, -1) }), T3([]);
        return;
      }
      if (v2.name === "@variant" && (x2 === null ? v2.nodes.length === 0 ? v2.name = "@custom-variant" : (b2(v2.nodes, (R3) => {
        if (R3.kind === "at-rule" && R3.name === "@slot") return v2.name = "@custom-variant", 2;
      }), v2.name === "@variant" && h2.push(v2)) : h2.push(v2)), v2.name === "@custom-variant") {
        if (x2 !== null) throw new Error("`@custom-variant` cannot be nested.");
        T3([]);
        let [R3, E3] = u(v2.params, " ");
        if (!xe.test(R3)) throw new Error(`\`@custom-variant ${R3}\` defines an invalid variant name. Variants should only contain alphanumeric, dashes or underscore characters.`);
        if (v2.nodes.length > 0 && E3) throw new Error(`\`@custom-variant ${R3}\` cannot have both a selector and a body.`);
        if (v2.nodes.length === 0) {
          if (!E3) throw new Error(`\`@custom-variant ${R3}\` has no selector or body.`);
          let P3 = u(E3.slice(1, -1), ",");
          if (P3.length === 0 || P3.some((f2) => f2.trim() === "")) throw new Error(`\`@custom-variant ${R3} (${P3.join(",")})\` selector is invalid.`);
          let n = [], a = [];
          for (let f2 of P3) f2 = f2.trim(), f2[0] === "@" ? n.push(f2) : a.push(f2);
          m2.push((f2) => {
            f2.variants.static(R3, (k3) => {
              let b3 = [];
              a.length > 0 && b3.push(G2(a.join(", "), k3.nodes));
              for (let $3 of n) b3.push(M2($3, k3.nodes));
              k3.nodes = b3;
            }, { compounds: ie2([...a, ...n]) });
          });
          return;
        } else {
          m2.push((P3) => {
            P3.variants.fromAst(R3, v2.nodes);
          });
          return;
        }
      }
      if (v2.name === "@media") {
        let R3 = u(v2.params, " "), E3 = [];
        for (let P3 of R3) if (P3.startsWith("source(")) {
          let n = P3.slice(7, -1);
          b2(v2.nodes, (a, { replaceWith: f2 }) => {
            if (a.kind === "at-rule" && a.name === "@tailwind" && a.params === "utilities") return a.params += ` source(${n})`, f2([oe({ sourceBase: N3.base }, [a])]), 2;
          });
        } else if (P3.startsWith("theme(")) {
          let n = P3.slice(6, -1);
          b2(v2.nodes, (a) => {
            if (a.kind !== "at-rule") throw new Error('Files imported with `@import "…" theme(…)` must only contain `@theme` blocks.');
            if (a.name === "@theme") return a.params += " " + n, 1;
          });
        } else if (P3.startsWith("prefix(")) {
          let n = P3.slice(7, -1);
          b2(v2.nodes, (a) => {
            if (a.kind === "at-rule" && a.name === "@theme") return a.params += ` prefix(${n})`, 1;
          });
        } else P3 === "important" ? c = true : P3 === "reference" ? v2.nodes = [oe({ reference: true }, v2.nodes)] : E3.push(P3);
        E3.length > 0 ? v2.params = E3.join(" ") : R3.length > 0 && T3(v2.nodes);
      }
      if (v2.name === "@theme") {
        let [R3, E3] = Zr(v2.params);
        if (N3.reference && (R3 |= 2), E3) {
          if (!Jr.test(E3)) throw new Error(`The prefix "${E3}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
          s2.prefix = E3;
        }
        return b2(v2.nodes, (P3) => {
          if (P3.kind === "at-rule" && P3.name === "@keyframes") return R3 & 2 ? 1 : (s2.addKeyframes(P3), 1);
          if (P3.kind === "comment") return;
          if (P3.kind === "declaration" && P3.property.startsWith("--")) {
            s2.add(R2(P3.property), P3.value ?? "", R3);
            return;
          }
          let n = ue2([$2(v2.name, v2.params, [P3])]).split(`
`).map((a, f2, k3) => `${f2 === 0 || f2 >= k3.length - 2 ? " " : ">"} ${a}`).join(`
`);
          throw new Error(`\`@theme\` blocks must only contain custom properties or \`@keyframes\`.

${n}`);
        }), !u2 && !(R3 & 2) ? (u2 = G2(":root, :host", []), T3([u2])) : T3([]), 1;
      }
    }
  });
  let w3 = At(s2);
  c && (w3.important = c), o |= await tr({ designSystem: w3, base: r, ast: t, loadModule: i, globs: g2 });
  for (let v2 of m2) v2(w3);
  for (let v2 of p2) v2(w3);
  if (u2) {
    let v2 = [];
    for (let [T3, N3] of w3.theme.entries()) N3.options & 2 || v2.push(_2(I2(T3), N3.value));
    let x2 = w3.theme.getKeyframes();
    for (let T3 of x2) v2.push(ae([T3]));
    u2.nodes = [oe({ theme: true }, v2)];
  }
  if (d2) {
    let v2 = d2;
    v2.kind = "context", v2.context = {};
  }
  if (h2.length > 0) {
    for (let v2 of h2) {
      let x2 = G2("&", v2.nodes), T3 = v2.params, N3 = w3.parseVariant(T3);
      if (N3 === null) throw new Error(`Cannot use \`@variant\` with unknown variant: ${T3}`);
      if (se(x2, N3, w3.variants) === null) throw new Error(`Cannot use \`@variant\` with variant: ${T3}`);
      Object.assign(v2, x2);
    }
    o |= 32;
  }
  return o |= ae2(t, w3), o |= ge2(t, w3), b2(t, (v2, { replaceWith: x2 }) => {
    if (v2.kind === "at-rule") return v2.name === "@utility" && x2([]), 1;
  }), { designSystem: w3, ast: t, globs: g2, root: y3, utilitiesNode: d2, features: o };
}
async function Yr(t, r = {}) {
  let { designSystem: i, ast: e, globs: o, root: c, utilitiesNode: s2, features: m2 } = await rr(t, r);
  e.unshift(F2(`! tailwindcss v${Ge} | MIT License | https://tailwindcss.com `));
  function p2(g2) {
    i.invalidCandidates.add(g2);
  }
  let u2 = /* @__PURE__ */ new Set(), d2 = null, h2 = 0;
  return { globs: o, root: c, features: m2, build(g2) {
    if (m2 === 0) return t;
    if (!s2) return d2 ?? (d2 = fe(e, i)), d2;
    let y3 = false, w3 = u2.size;
    for (let x2 of g2) i.invalidCandidates.has(x2) || (x2[0] === "-" && x2[1] === "-" ? i.theme.markUsedVariable(x2) : u2.add(x2), y3 || (y3 = u2.size !== w3));
    if (!y3) return d2 ?? (d2 = fe(e, i)), d2;
    let v2 = Q3(u2, i, { onInvalidCandidate: p2 }).astNodes;
    return h2 === v2.length ? (d2 ?? (d2 = fe(e, i)), d2) : (h2 = v2.length, s2.nodes = v2, d2 = fe(e, i), d2);
  } };
}
async function So(t, r = {}) {
  let i = de2(t), e = await Yr(i, r), o = i, c = t;
  return { ...e, build(s2) {
    let m2 = e.build(s2);
    return m2 === o || (c = ue2(m2), o = m2), c;
  } };
}
async function Eo(t, r = {}) {
  return (await rr(de2(t), r)).designSystem;
}
function Xr() {
  throw new Error("It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.");
}
export {
  de3 as Features,
  Eo as __unstable__loadDesignSystem,
  So as compile,
  Yr as compileAst,
  Xr as default
};
//# sourceMappingURL=tailwindcss.js.map
